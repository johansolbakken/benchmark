Executing: ../mysql-server-build/build-release/bin/mysql -uroot --local-infile=1 --port=13000 --host=127.0.0.1 imdbload with input size: 1504 bytes
EXPLAIN
-> Nested loop inner join  (cost=152158..152158 rows=130e-9 height=1) (actual time=364..779 rows=4792 loops=1)
    -> Nested loop inner join  (cost=152155..152155 rows=1.3e-6 height=1) (actual time=364..777 rows=5284 loops=1)
        -> Nested loop inner join  (cost=152153..152153 rows=1.3e-6 height=1) (actual time=364..776 rows=5284 loops=1)
            -> Nested loop inner join  (cost=152149..152149 rows=1.45e-6 height=1) (actual time=364..764 rows=5436 loops=1)
                -> Nested loop inner join  (cost=151536..151749 rows=11.3 height=1) (actual time=364..619 rows=459 loops=1)
                    -> Nested loop inner join  (cost=151520..151655 rows=28.3 height=1) (actual time=363..499 rows=71837 loops=1)
                        -> Sort: t.title  (cost=151516..151516 rows=15.3 height=1) (actual time=363..365 rows=5581 loops=1)
                            -> Inner hash join (kt.id = t.kind_id) (fill_ratio=1.14441e-05)  (cost=151492..151508 rows=15.3 height=1) (actual time=358..360 rows=5581 loops=1)
                                -> Sort: t.title  (cost=151484..151484 rows=76.4 height=1) (actual time=358..359 rows=6249 loops=1)
                                    -> Nested loop inner join  (cost=2088..151443 rows=76.4 height=1) (actual time=23.8..353 rows=6249 loops=1)
                                        -> Inner hash join (it2.id = mi_idx.info_type_id) (fill_ratio=5.72205e-06)  (cost=763..150412 rows=229 height=1) (actual time=23.7..287 rows=26861 loops=1)
                                            -> Nested loop inner join  (cost=76.9..149810 rows=2291 height=1) (actual time=23.7..279 rows=79324 loops=1)
                                                -> Inner hash join (cct2.id = cc.status_id) (fill_ratio=1.62125e-05)  (cost=19.6..98069 rows=12182 height=1) (actual time=23.6..47.4 rows=42432 loops=1)
                                                    -> Inner hash join (cct1.id = cc.subject_id) (fill_ratio=4.76837e-06)  (cost=10.3..93570 rows=13536 height=1) (actual time=23.6..41.5 rows=49145 loops=1)
                                                        -> Table scan on cc  (cost=0.47..63625 rows=135359 height=1) (actual time=1.03..30.7 rows=135086 loops=1)
                                                        -> Hash
                                                            -> Filter: (cct1.kind = 'crew')  (cost=2.77..2.77 rows=0.4 height=1) (actual time=0.00285..0.00359 rows=1 loops=1)
                                                                -> Table scan on cct1  (cost=0.636..2.54 rows=4 height=1) (actual time=0.00232..0.00301 rows=4 loops=1)
                                                    -> Hash
                                                        -> Filter: (cct2.kind <> 'complete+verified')  (cost=0.771..2.77 rows=3.6 height=1) (actual time=0.00318..0.00426 rows=3 loops=1)
                                                            -> Table scan on cct2  (cost=0.636..2.54 rows=4 height=1) (actual time=0.003..0.00359 rows=4 loops=1)
                                                -> Filter: (mi_idx.info < '8.5')  (cost=4.25..4.25 rows=0.188 height=1) (actual time=0.00263..0.00532 rows=1.87 loops=42432)
                                                    -> Index lookup on mi_idx using movie_id_movie_info_idx (movie_id = cc.movie_id)  (cost=4.21..4.21 rows=0.564 height=1) (actual time=0.00253..0.00509 rows=1.93 loops=42432)
                                            -> Hash
                                                -> Filter: (it2.info = 'rating')  (cost=6.94..78.4 rows=11.3 height=1) (actual time=0.0261..0.028 rows=1 loops=1)
                                                    -> Table scan on it2  (cost=0.636..71.9 rows=113 height=1) (actual time=0.00587..0.0217 rows=113 loops=1)
                                        -> Filter: (t.production_year > 2000)  (cost=4.5..4.5 rows=0.333 height=1) (actual time=0.00237..0.00238 rows=0.233 loops=26861)
                                            -> Single-row index lookup on t using PRIMARY (id = cc.movie_id)  (cost=4.44..4.44 rows=1 height=1) (actual time=0.00224..0.00225 rows=1 loops=26861)
                                -> Hash
                                    -> Filter: (kt.kind in ('movie','episode'))  (cost=2.73..3.82 rows=1.4 height=1) (actual time=0.019..0.0223 rows=2 loops=1)
                                        -> Table scan on kt  (cost=0.488..3.42 rows=7 height=1) (actual time=0.0171..0.0194 rows=7 loops=1)
                        -> Index lookup on mk using movie_id_movie_keyword (movie_id = cc.movie_id)  (cost=4.92..9.11 rows=1.85 height=1) (actual time=0.00401..0.0235 rows=12.9 loops=5581)
                    -> Filter: (k.keyword in ('murder','murder-in-title','blood','violence'))  (cost=3.32..3.32 rows=0.4 height=1) (actual time=0.00162..0.00162 rows=0.00639 loops=71837)
                        -> Single-row index lookup on k using PRIMARY (id = mk.keyword_id)  (cost=3.27..3.27 rows=1 height=1) (actual time=0.00143..0.00144 rows=1 loops=71837)
                -> Inner hash join (mc.movie_id = mi.movie_id) (fill_ratio=0.104039)  (cost=35.4..35.4 rows=128e-9 height=1) (actual time=0.24..0.315 rows=11.8 loops=459)
                    -> Filter: (mi.info in ('Sweden','Norway','Germany','Denmark','Swedish','Danish','Norwegian','German','USA','American'))  (cost=9.53..28.6 rows=3 height=1) (actual time=0.252..0.347 rows=1.05 loops=352)
                        -> Index lookup on mi using movie_id_movie_info (movie_id = mk.movie_id)  (cost=4.71..28.2 rows=6 height=1) (actual time=0.00495..0.32 rows=173 loops=352)
                    -> Hash
                        -> Filter: ((mc.note like '%(200%)%') and (not((mc.note like '%(USA)%'))))  (cost=6.08..6.08 rows=0.104 height=1) (actual time=0.00985..0.0442 rows=9.83 loops=459)
                            -> Index lookup on mc using movie_id_movie_companies (movie_id = t.id)  (cost=5.71..6.01 rows=1.05 height=1) (actual time=0.00455..0.0375 rows=19.3 loops=459)
            -> Filter: (cn.country_code <> '[us]')  (cost=3.68..3.68 rows=0.9 height=1) (actual time=0.00193..0.00197 rows=0.972 loops=5436)
                -> Single-row index lookup on cn using PRIMARY (id = mc.company_id)  (cost=3.62..3.62 rows=1 height=1) (actual time=0.0018..0.00182 rows=1 loops=5436)
        -> Single-row index lookup on ct using PRIMARY (id = mc.company_type_id)  (cost=2.25..2.25 rows=1 height=1) (actual time=95.7e-6..110e-6 rows=1 loops=5284)
    -> Filter: (it1.info = 'countries')  (cost=2.3..2.3 rows=0.1 height=1) (actual time=256e-6..297e-6 rows=0.907 loops=5284)
        -> Single-row index lookup on it1 using PRIMARY (id = mi.info_type_id)  (cost=2.25..2.25 rows=1 height=1) (actual time=97.7e-6..112e-6 rows=1 loops=5284)
