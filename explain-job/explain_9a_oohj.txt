Executing: ../mysql-server-build/build-release/bin/mysql -uroot --local-infile=1 --port=13000 --host=127.0.0.1 imdbload with input size: 806 bytes
EXPLAIN
-> Nested loop inner join  (cost=1.84e+6..1.85e+6 rows=7.48 height=1) (actual time=16628..16628 rows=0 loops=1)
    -> Nested loop inner join  (cost=1.84e+6..1.85e+6 rows=7.48 height=1) (actual time=16628..16628 rows=0 loops=1)
        -> Nested loop inner join  (cost=1.84e+6..1.85e+6 rows=673 height=1) (actual time=16422..16602 rows=66718 loops=1)
            -> Sort: ci.id  (cost=1.84e+6..1.84e+6 rows=3164 height=1) (actual time=16422..16436 rows=29660 loops=1)
                -> Inner hash join (ci.role_id = rt.id) (fill_ratio=6.19888e-06)  (cost=590..1.83e+6 rows=3164 height=1) (actual time=12.5..16386 rows=29660 loops=1)
                    -> Nested loop inner join  (cost=57.7..1.83e+6 rows=31638 height=1) (actual time=0.273..16376 rows=101604 loops=1)
                        -> Nested loop inner join  (cost=270..1.45e+6 rows=5389 height=1) (actual time=0.0314..4279 rows=137473 loops=1)
                            -> Nested loop inner join  (cost=25.5..1.24e+6 rows=48506 height=1) (actual time=0.0234..2959 rows=533717 loops=1)
                                -> Filter: (cn.country_code = '[us]')  (cost=9.93..234637 rows=23627 height=1) (actual time=0.0073..167 rows=83401 loops=1)
                                    -> Table scan on cn  (cost=0.935..221027 rows=236270 height=1) (actual time=0.00707..145 rows=234997 loops=1)
                                -> Filter: (((mc.note like '%(USA)%') or (mc.note like '%(worldwide)%')) and (mc.note is not null))  (cost=20.7..42.4 rows=2.05 height=1) (actual time=0.00866..0.0332 rows=6.4 loops=83401)
                                    -> Index lookup on mc using company_id_movie_companies (company_id = cn.id)  (cost=3.83..41.6 rows=10.9 height=1) (actual time=0.00311..0.0298 rows=13.6 loops=83401)
                            -> Filter: (t.production_year between 2005 and 2015)  (cost=4.5..4.5 rows=0.111 height=1) (actual time=0.00238..0.0024 rows=0.258 loops=533717)
                                -> Single-row index lookup on t using PRIMARY (id = mc.movie_id)  (cost=4.44..4.44 rows=1 height=1) (actual time=0.00226..0.00227 rows=1 loops=533717)
                        -> Filter: (ci.note in ('(voice)','(voice: Japanese version)','(voice) (uncredited)','(voice: English version)'))  (cost=11.8..69 rows=5.87 height=1) (actual time=0.075..0.0879 rows=0.739 loops=137473)
                            -> Index lookup on ci using movie_id_cast_info (movie_id = mc.movie_id)  (cost=4.64..68.2 rows=14.7 height=1) (actual time=0.00453..0.0825 rows=33.4 loops=137473)
                    -> Hash
                        -> Filter: (rt.`role` = 'actress')  (cost=6.94..8.32 rows=1.2 height=1) (actual time=0.0183..0.0215 rows=1 loops=1)
                            -> Table scan on rt  (cost=0.636..7.63 rows=12 height=1) (actual time=0.0164..0.0195 rows=12 loops=1)
            -> Index lookup on an using person_id_aka_name (person_id = ci.person_id)  (cost=3..3 rows=0.213 height=1) (actual time=0.00228..0.00548 rows=2.25 loops=29660)
        -> Filter: ((n.gender = 'f') and (n.`name` like '%Ang%'))  (cost=4.2..4.2 rows=0.0111 height=1) (actual time=327e-6..327e-6 rows=0 loops=66718)
            -> Single-row index lookup on n using PRIMARY (id = an.person_id)  (cost=4.14..4.14 rows=1 height=1) (actual time=163e-6..177e-6 rows=1 loops=66718)
    -> Single-row index lookup on chn using PRIMARY (id = ci.person_role_id)  (cost=4.12..4.12 rows=1 height=1) (never executed)
