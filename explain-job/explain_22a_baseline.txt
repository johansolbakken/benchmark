Executing: ../mysql-server-build/build-release/bin/mysql -uroot --local-infile=1 --port=13000 --host=127.0.0.1 imdbload with input size: 1106 bytes
EXPLAIN
-> Nested loop inner join  (cost=742594..743621 rows=50.8 height=1) (actual time=3036..4066 rows=2845 loops=1)
    -> Nested loop inner join  (cost=742578..743198 rows=127 height=1) (actual time=3035..3564 rows=316885 loops=1)
        -> Sort: t.title  (cost=742573..742573 rows=68.6 height=1) (actual time=3035..3038 rows=3658 loops=1)
            -> Inner hash join (ct.id = mc.company_type_id) (fill_ratio=4.95911e-05)  (cost=742512..742536 rows=68.6 height=1) (actual time=3031..3033 rows=3658 loops=1)
                -> Sort: t.title  (cost=742503..742503 rows=68.6 height=1) (actual time=3031..3032 rows=3658 loops=1)
                    -> Inner hash join (it1.id = mi.info_type_id) (fill_ratio=7.15256e-06)  (cost=714789..742466 rows=68.6 height=1) (actual time=1599..3027 rows=3658 loops=1)
                        -> Nested loop inner join  (cost=714325..742219 rows=686 height=1) (actual time=1599..3026 rows=4255 loops=1)
                            -> Nested loop inner join  (cost=714354..734042 rows=286 height=1) (actual time=1599..1948 rows=6782 loops=1)
                                -> Nested loop inner join  (cost=714343..732871 rows=318 height=1) (actual time=1599..1930 rows=7668 loops=1)
                                    -> Sort: t.title  (cost=714285..714285 rows=3058 height=1) (actual time=1599..1612 rows=39789 loops=1)
                                        -> Inner hash join (kt.id = t.kind_id) (fill_ratio=1.14441e-05)  (cost=239..712085 rows=3058 height=1) (actual time=0.0848..1569 rows=39789 loops=1)
                                            -> Nested loop inner join  (cost=46.3..708486 rows=15291 height=1) (actual time=0.0639..1562 rows=53715 loops=1)
                                                -> Nested loop inner join  (cost=10.9..502179 rows=45879 height=1) (actual time=0.0485..878 rows=324117 loops=1)
                                                    -> Filter: (it2.info = 'rating')  (cost=6.94..78.4 rows=11.3 height=1) (actual time=0.0307..0.0368 rows=1 loops=1)
                                                        -> Table scan on it2  (cost=0.636..71.9 rows=113 height=1) (actual time=0.00518..0.0299 rows=113 loops=1)
                                                    -> Filter: (mi_idx.info < '7.0')  (cost=10.9..44434 rows=4060 height=1) (actual time=0.0174..865 rows=324117 loops=1)
                                                        -> Index lookup on mi_idx using info_type_id_movie_info_idx (info_type_id = it2.id)  (cost=3.59..43732 rows=12181 height=1) (actual time=0.0164..817 rows=459925 loops=1)
                                                -> Filter: (t.production_year > 2008)  (cost=4.5..4.5 rows=0.333 height=1) (actual time=0.00203..0.00204 rows=0.166 loops=324117)
                                                    -> Single-row index lookup on t using PRIMARY (id = mi_idx.movie_id)  (cost=4.44..4.44 rows=1 height=1) (actual time=0.00192..0.00193 rows=1 loops=324117)
                                            -> Hash
                                                -> Filter: (kt.kind in ('movie','episode'))  (cost=2.73..3.82 rows=1.4 height=1) (actual time=0.00348..0.00506 rows=2 loops=1)
                                                    -> Table scan on kt  (cost=0.488..3.42 rows=7 height=1) (actual time=0.00283..0.00372 rows=7 loops=1)
                                    -> Filter: ((mc.note like '%(200%)%') and (not((mc.note like '%(USA)%'))))  (cost=6.08..6.08 rows=0.104 height=1) (actual time=0.00688..0.00792 rows=0.193 loops=39789)
                                        -> Index lookup on mc using movie_id_movie_companies (movie_id = mi_idx.movie_id)  (cost=5.71..6.01 rows=1.05 height=1) (actual time=0.00288..0.00713 rows=2.89 loops=39789)
                                -> Filter: (cn.country_code <> '[us]')  (cost=3.68..3.68 rows=0.9 height=1) (actual time=0.00225..0.00231 rows=0.884 loops=7668)
                                    -> Single-row index lookup on cn using PRIMARY (id = mc.company_id)  (cost=3.62..3.62 rows=1 height=1) (actual time=0.0021..0.00211 rows=1 loops=7668)
                            -> Filter: (mi.info in ('Germany','German','USA','American'))  (cost=11.9..28.6 rows=2.4 height=1) (actual time=0.108..0.159 rows=0.627 loops=6782)
                                -> Index lookup on mi using movie_id_movie_info (movie_id = mc.movie_id)  (cost=4.71..28.2 rows=6 height=1) (actual time=0.00387..0.147 rows=81.3 loops=6782)
                        -> Hash
                            -> Filter: (it1.info = 'countries')  (cost=6.94..78.4 rows=11.3 height=1) (actual time=0.00851..0.0306 rows=1 loops=1)
                                -> Table scan on it1  (cost=0.636..71.9 rows=113 height=1) (actual time=0.00622..0.0234 rows=113 loops=1)
                -> Hash
                    -> Table scan on ct  (cost=0.636..2.54 rows=4 height=1) (actual time=0.0152..0.0176 rows=4 loops=1)
        -> Index lookup on mk using movie_id_movie_keyword (movie_id = mc.movie_id)  (cost=4.92..9.11 rows=1.85 height=1) (actual time=0.00569..0.141 rows=86.6 loops=3658)
    -> Filter: (k.keyword in ('murder','murder-in-title','blood','violence'))  (cost=3.32..3.32 rows=0.4 height=1) (actual time=0.00152..0.00152 rows=0.00898 loops=316885)
        -> Single-row index lookup on k using PRIMARY (id = mk.keyword_id)  (cost=3.27..3.27 rows=1 height=1) (actual time=0.00133..0.00135 rows=1 loops=316885)
