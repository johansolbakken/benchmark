Executing: ../mysql-server-build/build-release/bin/mysql -uroot --local-infile=1 --port=13000 --host=127.0.0.1 imdbload with input size: 1255 bytes
EXPLAIN
-> Nested loop inner join  (cost=61915..61915 rows=0.0429 height=1) (actual time=24.8..27.1 rows=114 loops=1)
    -> Nested loop inner join  (cost=61911..61911 rows=0.0429 height=1) (actual time=24.8..26.9 rows=114 loops=1)
        -> Nested loop inner join  (cost=61909..61909 rows=0.429 height=1) (actual time=24.8..26.8 rows=342 loops=1)
            -> Nested loop inner join  (cost=61905..61905 rows=0.476 height=1) (actual time=24.8..26.4 rows=393 loops=1)
                -> Nested loop inner join  (cost=61885..61900 rows=2.38 height=1) (actual time=24.8..26.2 rows=393 loops=1)
                    -> Nested loop inner join  (cost=61879..61887 rows=2.26 height=1) (actual time=24.8..25.2 rows=153 loops=1)
                        -> Sort: t1.title  (cost=61874..61874 rows=2.15 height=1) (actual time=24.7..24.8 rows=57 loops=1)
                            -> Nested loop inner join  (cost=28869..61873 rows=2.15 height=1) (actual time=3.61..24.7 rows=57 loops=1)
                                -> Inner hash join (kt2.id = t2.kind_id) (fill_ratio=1.33514e-05)  (cost=28865..61863 rows=2.15 height=1) (actual time=3.61..24.7 rows=57 loops=1)
                                    -> Nested loop inner join  (cost=5864..61855 rows=10.7 height=1) (actual time=3.27..24.6 rows=78 loops=1)
                                        -> Nested loop inner join  (cost=3356..61775 rows=19 height=1) (actual time=3.26..24.4 rows=28 loops=1)
                                            -> Inner hash join (it2.id = mi_idx2.info_type_id) (fill_ratio=5.72205e-06)  (cost=471..61004 rows=171 height=1) (actual time=3.25..24.3 rows=47 loops=1)
                                                -> Nested loop inner join  (cost=55.9..60530 rows=1713 height=1) (actual time=0.439..24 rows=2945 loops=1)
                                                    -> Inner hash join (lt.id = ml.link_type_id) (fill_ratio=1.43051e-05)  (cost=23..21846 rows=9108 height=1) (actual time=0.421..8.26 rows=2315 loops=1)
                                                        -> Table scan on ml  (cost=0.47..14271 rows=30360 height=1) (actual time=0.402..6.56 rows=29997 loops=1)
                                                        -> Hash
                                                            -> Filter: (lt.link in ('sequel','follows','followed by'))  (cost=2.31..12.5 rows=5.4 height=1) (actual time=0.00525..0.0088 rows=2 loops=1)
                                                                -> Table scan on lt  (cost=0.636..11.4 rows=18 height=1) (actual time=0.00479..0.00649 rows=18 loops=1)
                                                    -> Filter: (mi_idx2.info < '3.5')  (cost=4.25..4.25 rows=0.188 height=1) (actual time=0.00319..0.00672 rows=1.27 loops=2315)
                                                        -> Index lookup on mi_idx2 using movie_id_movie_info_idx (movie_id = ml.linked_movie_id)  (cost=4.21..4.21 rows=0.564 height=1) (actual time=0.00302..0.00645 rows=2.68 loops=2315)
                                                -> Hash
                                                    -> Filter: (it2.info = 'rating')  (cost=6.94..78.4 rows=11.3 height=1) (actual time=0.0257..0.0274 rows=1 loops=1)
                                                        -> Table scan on it2  (cost=0.636..71.9 rows=113 height=1) (actual time=0.00561..0.0219 rows=113 loops=1)
                                            -> Filter: (t2.production_year between 2000 and 2010)  (cost=4.5..4.5 rows=0.111 height=1) (actual time=0.00321..0.00324 rows=0.596 loops=47)
                                                -> Single-row index lookup on t2 using PRIMARY (id = ml.linked_movie_id)  (cost=4.44..4.44 rows=1 height=1) (actual time=0.00306..0.00307 rows=1 loops=47)
                                        -> Index lookup on mi_idx1 using movie_id_movie_info_idx (movie_id = ml.movie_id)  (cost=4.21..4.21 rows=0.564 height=1) (actual time=0.00318..0.00693 rows=2.79 loops=28)
                                    -> Hash
                                        -> Filter: (kt2.kind in ('tv series','episode'))  (cost=2.73..3.82 rows=1.4 height=1) (actual time=0.018..0.0212 rows=2 loops=1)
                                            -> Table scan on kt2  (cost=0.488..3.42 rows=7 height=1) (actual time=0.0157..0.0186 rows=7 loops=1)
                                -> Single-row index lookup on t1 using PRIMARY (id = ml.movie_id)  (cost=4.44..4.44 rows=1 height=1) (actual time=819e-6..833e-6 rows=1 loops=57)
                        -> Index lookup on mc1 using movie_id_movie_companies (movie_id = mi_idx1.movie_id)  (cost=5.71..6.01 rows=1.05 height=1) (actual time=0.0031..0.00691 rows=2.68 loops=57)
                    -> Index lookup on mc2 using movie_id_movie_companies (movie_id = mi_idx2.movie_id)  (cost=5.71..6.01 rows=1.05 height=1) (actual time=0.00291..0.0063 rows=2.57 loops=153)
                -> Filter: (kt1.kind in ('tv series','episode'))  (cost=2.16..2.16 rows=0.2 height=1) (actual time=393e-6..439e-6 rows=1 loops=393)
                    -> Single-row index lookup on kt1 using PRIMARY (id = t1.kind_id)  (cost=2.11..2.11 rows=1 height=1) (actual time=100e-6..114e-6 rows=1 loops=393)
            -> Filter: (cn1.country_code <> '[us]')  (cost=3.68..3.68 rows=0.9 height=1) (actual time=861e-6..899e-6 rows=0.87 loops=393)
                -> Single-row index lookup on cn1 using PRIMARY (id = mc1.company_id)  (cost=3.62..3.62 rows=1 height=1) (actual time=744e-6..757e-6 rows=1 loops=393)
        -> Filter: (it1.info = 'rating')  (cost=2.3..2.3 rows=0.1 height=1) (actual time=357e-6..373e-6 rows=0.333 loops=342)
            -> Single-row index lookup on it1 using PRIMARY (id = mi_idx1.info_type_id)  (cost=2.25..2.25 rows=1 height=1) (actual time=213e-6..228e-6 rows=1 loops=342)
    -> Single-row index lookup on cn2 using PRIMARY (id = mc2.company_id)  (cost=3.62..3.62 rows=1 height=1) (actual time=0.00164..0.00165 rows=1 loops=114)
