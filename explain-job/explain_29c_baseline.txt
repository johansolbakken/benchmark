Executing: ../mysql-server-build/build-release/bin/mysql -uroot --local-infile=1 --port=13000 --host=127.0.0.1 imdbload with input size: 1645 bytes
EXPLAIN
-> Nested loop inner join  (cost=104651..104651 rows=31e-6 height=1) (actual time=4754..4754 rows=0 loops=1)
    -> Nested loop inner join  (cost=104649..104649 rows=310e-6 height=1) (actual time=4754..4754 rows=0 loops=1)
        -> Nested loop inner join  (cost=104645..104645 rows=0.0279 height=1) (actual time=2801..4688 rows=240000 loops=1)
            -> Nested loop inner join  (cost=104642..104642 rows=0.279 height=1) (actual time=2801..4317 rows=825177 loops=1)
                -> Nested loop inner join  (cost=104638..104638 rows=0.461 height=1) (actual time=2801..2849 rows=12922 loops=1)
                    -> Nested loop inner join  (cost=104626..104631 rows=2.17 height=1) (actual time=2800..2811 rows=7367 loops=1)
                        -> Sort: ci.id  (cost=104622..104622 rows=2.17 height=1) (actual time=2800..2808 rows=8813 loops=1)
                            -> Nested loop inner join  (cost=104541..104621 rows=2.17 height=1) (actual time=2679..2793 rows=8813 loops=1)
                                -> Inner hash join (it.id = mi.info_type_id) (fill_ratio=0.0539141)  (cost=104552..104552 rows=0.369 height=1) (actual time=2669..2669 rows=331 loops=1)
                                    -> Filter: (it.info = 'release dates')  (cost=6.94..78.4 rows=11.3 height=1) (actual time=0.0276..0.0561 rows=1 loops=1)
                                        -> Table scan on it  (cost=0.636..71.9 rows=113 height=1) (actual time=0.0217..0.0466 rows=113 loops=1)
                                    -> Hash
                                        -> Nested loop inner join  (cost=28332..104466 rows=3.69 height=1) (actual time=257..2668 rows=331 loops=1)
                                            -> Nested loop inner join  (cost=35618..104382 rows=2.93 height=1) (actual time=256..2611 rows=90 loops=1)
                                                -> Nested loop inner join  (cost=6584..104141 rows=15.8 height=1) (actual time=1.19..205 rows=6898 loops=1)
                                                    -> Nested loop inner join  (cost=661..103558 rows=158 height=1) (actual time=1.13..149 rows=27791 loops=1)
                                                        -> Nested loop inner join  (cost=689..102654 rows=150 height=1) (actual time=1.12..89.4 rows=1970 loops=1)
                                                            -> Inner hash join (cct2.id = cc.status_id) (fill_ratio=1.09673e-05)  (cost=78.1..96567 rows=1354 height=1) (actual time=1.06..46.5 rows=17879 loops=1)
                                                                -> Inner hash join (cct1.id = cc.subject_id) (fill_ratio=4.76837e-06)  (cost=10.3..93570 rows=13536 height=1) (actual time=1.05..41 rows=85941 loops=1)
                                                                    -> Table scan on cc  (cost=0.47..63625 rows=135359 height=1) (actual time=1.05..30.3 rows=135086 loops=1)
                                                                    -> Hash
                                                                        -> Filter: (cct1.kind = 'cast')  (cost=2.77..2.77 rows=0.4 height=1) (actual time=0.00307..0.00419 rows=1 loops=1)
                                                                            -> Table scan on cct1  (cost=0.636..2.54 rows=4 height=1) (actual time=0.00269..0.0035 rows=4 loops=1)
                                                                -> Hash
                                                                    -> Filter: (cct2.kind = 'complete+verified')  (cost=2.77..2.77 rows=0.4 height=1) (actual time=0.00485..0.00628 rows=1 loops=1)
                                                                        -> Table scan on cct2  (cost=0.636..2.54 rows=4 height=1) (actual time=0.00393..0.00561 rows=4 loops=1)
                                                            -> Filter: (t.production_year between 2000 and 2010)  (cost=4.5..4.5 rows=0.111 height=1) (actual time=0.00232..0.00232 rows=0.11 loops=17879)
                                                                -> Single-row index lookup on t using PRIMARY (id = cc.movie_id)  (cost=4.44..4.44 rows=1 height=1) (actual time=0.0022..0.00221 rows=1 loops=17879)
                                                        -> Index lookup on mc using movie_id_movie_companies (movie_id = cc.movie_id)  (cost=5.71..6.01 rows=1.05 height=1) (actual time=0.00375..0.0294 rows=14.1 loops=1970)
                                                    -> Filter: (cn.country_code = '[us]')  (cost=3.68..3.68 rows=0.1 height=1) (actual time=0.00195..0.00196 rows=0.248 loops=27791)
                                                        -> Single-row index lookup on cn using PRIMARY (id = mc.company_id)  (cost=3.62..3.62 rows=1 height=1) (actual time=0.00179..0.0018 rows=1 loops=27791)
                                                -> Nested loop inner join  (cost=15.3..15.3 rows=0.185 height=1) (actual time=0.345..0.349 rows=0.013 loops=6898)
                                                    -> Index lookup on mk using movie_id_movie_keyword (movie_id = mc.movie_id)  (cost=4.92..9.11 rows=1.85 height=1) (actual time=0.00611..0.179 rows=110 loops=6898)
                                                    -> Filter: (k.keyword = 'computer-animation')  (cost=3.32..3.32 rows=0.1 height=1) (actual time=0.00147..0.00147 rows=118e-6 loops=761841)
                                                        -> Single-row index lookup on k using PRIMARY (id = mk.keyword_id)  (cost=3.27..3.27 rows=1 height=1) (actual time=0.00133..0.00135 rows=1 loops=761841)
                                            -> Filter: ((mi.info like 'Japan:%200%') or (mi.info like 'USA:%200%'))  (cost=22.7..28.6 rows=1.26 height=1) (actual time=0.539..0.638 rows=3.68 loops=90)
                                                -> Index lookup on mi using movie_id_movie_info (movie_id = cc.movie_id)  (cost=4.71..28.2 rows=6 height=1) (actual time=0.00453..0.598 rows=335 loops=90)
                                -> Filter: (ci.note in ('(voice)','(voice: Japanese version)','(voice) (uncredited)','(voice: English version)'))  (cost=11.8..69 rows=5.87 height=1) (actual time=0.0447..0.372 rows=26.6 loops=331)
                                    -> Index lookup on ci using movie_id_cast_info (movie_id = cc.movie_id)  (cost=4.64..68.2 rows=14.7 height=1) (actual time=0.00421..0.342 rows=165 loops=331)
                        -> Single-row index lookup on chn using PRIMARY (id = ci.person_role_id)  (cost=4.12..4.12 rows=1 height=1) (actual time=257e-6..268e-6 rows=0.836 loops=8813)
                    -> Index lookup on an using person_id_aka_name (person_id = ci.person_id)  (cost=3..3 rows=0.213 height=1) (actual time=0.00265..0.00509 rows=1.75 loops=7367)
                -> Index lookup on pi using person_id_person_info (person_id = an.person_id)  (cost=4.85..4.85 rows=0.606 height=1) (actual time=0.00289..0.112 rows=63.9 loops=12922)
            -> Filter: (it3.info = 'trivia')  (cost=2.3..2.3 rows=0.1 height=1) (actual time=369e-6..382e-6 rows=0.291 loops=825177)
                -> Single-row index lookup on it3 using PRIMARY (id = pi.info_type_id)  (cost=2.25..2.25 rows=1 height=1) (actual time=216e-6..230e-6 rows=1 loops=825177)
        -> Filter: ((n.gender = 'f') and (n.`name` like '%An%'))  (cost=4.2..4.2 rows=0.0111 height=1) (actual time=220e-6..220e-6 rows=0 loops=240000)
            -> Single-row index lookup on n using PRIMARY (id = an.person_id)  (cost=4.14..4.14 rows=1 height=1) (actual time=89.8e-6..105e-6 rows=1 loops=240000)
    -> Filter: (rt.`role` = 'actress')  (cost=2.3..2.3 rows=0.1 height=1) (never executed)
        -> Single-row index lookup on rt using PRIMARY (id = ci.role_id)  (cost=2.25..2.25 rows=1 height=1) (never executed)
