Executing: ../mysql-server-build/build-release/bin/mysql -uroot --local-infile=1 --port=13000 --host=127.0.0.1 imdbload with input size: 787 bytes
EXPLAIN
-> Nested loop inner join  (cost=1.19e+6..1.2e+6 rows=115 height=1) (actual time=0.348..3.29 rows=10 loops=1)
    -> Nested loop inner join  (cost=1.18e+6..1.2e+6 rows=1155 height=1) (actual time=0.273..2.73 rows=1210 loops=1)
        -> Nested loop inner join  (cost=1.18e+6..1.19e+6 rows=193 height=1) (actual time=0.263..0.349 rows=10 loops=1)
            -> Sort: t.title  (cost=1.18e+6..1.18e+6 rows=1926 height=1) (actual time=0.256..0.27 rows=33 loops=1)
                -> Inner hash join (ct.id = mc.company_type_id) (fill_ratio=2.09808e-05)  (cost=1.12e+6..1.18e+6 rows=1926 height=1) (actual time=0.167..0.243 rows=33 loops=1)
                    -> Nested loop inner join  (cost=1.12e+6..1.18e+6 rows=10137 height=1) (actual time=0.141..0.212 rows=33 loops=1)
                        -> Sort: t.title  (cost=1.12e+6..1.12e+6 rows=9628 height=1) (actual time=0.13..0.131 rows=2 loops=1)
                            -> Nested loop inner join  (cost=116..1.12e+6 rows=9628 height=1) (actual time=0.102..0.122 rows=2 loops=1)
                                -> Nested loop inner join  (cost=3.59..494249 rows=137651 height=1) (actual time=0.0515..0.073 rows=10 loops=1)
                                    -> Filter: (it2.info = 'bottom 10 rank')  (cost=6.94..78.4 rows=11.3 height=1) (actual time=0.0346..0.0356 rows=1 loops=1)
                                        -> Table scan on it2  (cost=0.636..71.9 rows=113 height=1) (actual time=0.0061..0.0293 rows=113 loops=1)
                                    -> Index lookup on mi_idx using info_type_id_movie_info_idx (info_type_id = it2.id)  (cost=3.59..43732 rows=12181 height=1) (actual time=0.0165..0.0363 rows=10 loops=1)
                                -> Filter: ((t.production_year > 2000) and ((t.title like 'Birdemic%') or (t.title like '%Movie%')))  (cost=4.52..4.52 rows=0.0699 height=1) (actual time=0.0048..0.00481 rows=0.2 loops=10)
                                    -> Single-row index lookup on t using PRIMARY (id = mi_idx.movie_id)  (cost=4.44..4.44 rows=1 height=1) (actual time=0.00431..0.00433 rows=1 loops=10)
                        -> Index lookup on mc using movie_id_movie_companies (movie_id = mi_idx.movie_id)  (cost=5.71..6.01 rows=1.05 height=1) (actual time=0.00829..0.0396 rows=16.5 loops=2)
                    -> Hash
                        -> Filter: ((ct.kind = 'production companies') or (ct.kind = 'distributors'))  (cost=2.77..2.77 rows=0.76 height=1) (actual time=0.0164..0.0197 rows=2 loops=1)
                            -> Table scan on ct  (cost=0.636..2.54 rows=4 height=1) (actual time=0.015..0.0175 rows=4 loops=1)
            -> Filter: (cn.country_code = '[us]')  (cost=3.68..3.68 rows=0.1 height=1) (actual time=0.00227..0.00229 rows=0.303 loops=33)
                -> Single-row index lookup on cn using PRIMARY (id = mc.company_id)  (cost=3.62..3.62 rows=1 height=1) (actual time=0.0021..0.00211 rows=1 loops=33)
        -> Index lookup on mi using movie_id_movie_info (movie_id = mc.movie_id)  (cost=4.71..28.2 rows=6 height=1) (actual time=0.00455..0.233 rows=121 loops=10)
    -> Filter: (it1.info = 'budget')  (cost=2.3..2.3 rows=0.1 height=1) (actual time=400e-6..400e-6 rows=0.00826 loops=1210)
        -> Single-row index lookup on it1 using PRIMARY (id = mi.info_type_id)  (cost=2.25..2.25 rows=1 height=1) (actual time=242e-6..257e-6 rows=1 loops=1210)
