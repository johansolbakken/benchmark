Executing: ../mysql-server-build/build-release/bin/mysql -uroot --local-infile=1 --port=13000 --host=127.0.0.1 imdbload with input size: 1106 bytes
EXPLAIN
-> Nested loop inner join  (cost=742594..743621 rows=50.8 height=1) (actual time=1850..1858 rows=32 loops=1)
    -> Nested loop inner join  (cost=742578..743198 rows=127 height=1) (actual time=1849..1854 rows=2610 loops=1)
        -> Sort: t.title  (cost=742573..742573 rows=68.6 height=1) (actual time=1849..1849 rows=94 loops=1)
            -> Inner hash join (ct.id = mc.company_type_id) (fill_ratio=4.95911e-05)  (cost=742512..742536 rows=68.6 height=1) (actual time=1849..1849 rows=94 loops=1)
                -> Sort: t.title  (cost=742503..742503 rows=68.6 height=1) (actual time=1849..1849 rows=94 loops=1)
                    -> Inner hash join (it1.id = mi.info_type_id) (fill_ratio=7.15256e-06)  (cost=714789..742466 rows=68.6 height=1) (actual time=1592..1849 rows=94 loops=1)
                        -> Nested loop inner join  (cost=714325..742219 rows=686 height=1) (actual time=1592..1849 rows=127 loops=1)
                            -> Nested loop inner join  (cost=714354..734042 rows=286 height=1) (actual time=1585..1826 rows=357 loops=1)
                                -> Nested loop inner join  (cost=714343..732871 rows=318 height=1) (actual time=1585..1825 rows=484 loops=1)
                                    -> Sort: t.title  (cost=714285..714285 rows=3058 height=1) (actual time=1585..1594 rows=30294 loops=1)
                                        -> Inner hash join (kt.id = t.kind_id) (fill_ratio=1.14441e-05)  (cost=239..712085 rows=3058 height=1) (actual time=0.0838..1562 rows=30294 loops=1)
                                            -> Nested loop inner join  (cost=46.3..708486 rows=15291 height=1) (actual time=0.0632..1556 rows=40422 loops=1)
                                                -> Nested loop inner join  (cost=10.9..502179 rows=45879 height=1) (actual time=0.0476..869 rows=324117 loops=1)
                                                    -> Filter: (it2.info = 'rating')  (cost=6.94..78.4 rows=11.3 height=1) (actual time=0.0298..0.0354 rows=1 loops=1)
                                                        -> Table scan on it2  (cost=0.636..71.9 rows=113 height=1) (actual time=0.00465..0.0284 rows=113 loops=1)
                                                    -> Filter: (mi_idx.info < '7.0')  (cost=10.9..44434 rows=4060 height=1) (actual time=0.0174..857 rows=324117 loops=1)
                                                        -> Index lookup on mi_idx using info_type_id_movie_info_idx (info_type_id = it2.id)  (cost=3.59..43732 rows=12181 height=1) (actual time=0.0164..813 rows=459925 loops=1)
                                                -> Filter: (t.production_year > 2009)  (cost=4.5..4.5 rows=0.333 height=1) (actual time=0.00205..0.00205 rows=0.125 loops=324117)
                                                    -> Single-row index lookup on t using PRIMARY (id = mi_idx.movie_id)  (cost=4.44..4.44 rows=1 height=1) (actual time=0.00193..0.00194 rows=1 loops=324117)
                                            -> Hash
                                                -> Filter: (kt.kind in ('movie','episode'))  (cost=2.73..3.82 rows=1.4 height=1) (actual time=0.00415..0.00563 rows=2 loops=1)
                                                    -> Table scan on kt  (cost=0.488..3.42 rows=7 height=1) (actual time=0.00349..0.00432 rows=7 loops=1)
                                    -> Filter: ((mc.note like '%(200%)%') and (not((mc.note like '%(USA)%'))))  (cost=6.08..6.08 rows=0.104 height=1) (actual time=0.00745..0.00756 rows=0.016 loops=30294)
                                        -> Index lookup on mc using movie_id_movie_companies (movie_id = mi_idx.movie_id)  (cost=5.71..6.01 rows=1.05 height=1) (actual time=0.00284..0.00686 rows=2.79 loops=30294)
                                -> Filter: (cn.country_code <> '[us]')  (cost=3.68..3.68 rows=0.9 height=1) (actual time=0.0026..0.00264 rows=0.738 loops=484)
                                    -> Single-row index lookup on cn using PRIMARY (id = mc.company_id)  (cost=3.62..3.62 rows=1 height=1) (actual time=0.00241..0.00242 rows=1 loops=484)
                            -> Filter: (mi.info in ('Germany','German','USA','American'))  (cost=11.9..28.6 rows=2.4 height=1) (actual time=0.0489..0.0645 rows=0.356 loops=357)
                                -> Index lookup on mi using movie_id_movie_info (movie_id = mc.movie_id)  (cost=4.71..28.2 rows=6 height=1) (actual time=0.00494..0.0605 rows=28.5 loops=357)
                        -> Hash
                            -> Filter: (it1.info = 'countries')  (cost=6.94..78.4 rows=11.3 height=1) (actual time=0.00806..0.0299 rows=1 loops=1)
                                -> Table scan on it1  (cost=0.636..71.9 rows=113 height=1) (actual time=0.00595..0.0229 rows=113 loops=1)
                -> Hash
                    -> Table scan on ct  (cost=0.636..2.54 rows=4 height=1) (actual time=0.0143..0.0166 rows=4 loops=1)
        -> Index lookup on mk using movie_id_movie_keyword (movie_id = mc.movie_id)  (cost=4.92..9.11 rows=1.85 height=1) (actual time=0.00609..0.0482 rows=27.8 loops=94)
    -> Filter: (k.keyword in ('murder','murder-in-title','blood','violence'))  (cost=3.32..3.32 rows=0.4 height=1) (actual time=0.00164..0.00164 rows=0.0123 loops=2610)
        -> Single-row index lookup on k using PRIMARY (id = mk.keyword_id)  (cost=3.27..3.27 rows=1 height=1) (actual time=0.00145..0.00147 rows=1 loops=2610)
