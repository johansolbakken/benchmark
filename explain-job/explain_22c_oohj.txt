Executing: ../mysql-server-build/build-release/bin/mysql -uroot --local-infile=1 --port=13000 --host=127.0.0.1 imdbload with input size: 1192 bytes
EXPLAIN
-> Inner hash join (ct.id = mc.company_type_id)  (optimistic hash join, o_level=0.8, o_func=LINEAR, went_on_disk=false) (fill_ratio=4.95911e-05)  (cost=714855..744009 rows=63.5 height=1) (actual time=1984..21372 rows=21380 loops=1)
    -> Nested loop inner join  (cost=714846..743978 rows=63.5 height=1) (actual time=1984..21366 rows=21380 loops=1)
        -> Nested loop inner join  (cost=714796..743718 rows=70.6 height=1) (actual time=1984..21333 rows=22947 loops=1)
            -> Nested loop inner join  (cost=714543..743132 rows=176 height=1) (actual time=1976..16919 rows=2.73e+6 loops=1)
                -> Inner hash join (it1.id = mi.info_type_id)  (optimistic hash join, o_level=0.8, o_func=LINEAR, went_on_disk=false) (fill_ratio=7.15256e-06)  (cost=714672..742263 rows=95.3 height=1) (actual time=1976..12318 rows=39496 loops=1)
                    -> Nested loop inner join  (cost=714314..741957 rows=953 height=1) (actual time=1976..12305 rows=45589 loops=1)
                        -> Nested loop inner join  (cost=714343..732871 rows=318 height=1) (actual time=1975..2922 rows=60387 loops=1)
                            -> Sort: t.title  (cost=714285..714285 rows=3058 height=1) (actual time=1974..2009 rows=104030 loops=1)
                                -> Inner hash join (kt.id = t.kind_id) (fill_ratio=1.14441e-05)  (cost=239..712085 rows=3058 height=1) (actual time=0.0858..1893 rows=104030 loops=1)
                                    -> Nested loop inner join  (cost=46.3..708486 rows=15291 height=1) (actual time=0.0589..1875 rows=136728 loops=1)
                                        -> Nested loop inner join  (cost=10.9..502179 rows=45879 height=1) (actual time=0.0508..904 rows=454230 loops=1)
                                            -> Filter: (it2.info = 'rating')  (cost=6.94..78.4 rows=11.3 height=1) (actual time=0.0337..0.0394 rows=1 loops=1)
                                                -> Table scan on it2  (cost=0.636..71.9 rows=113 height=1) (actual time=0.00453..0.0327 rows=113 loops=1)
                                            -> Filter: (mi_idx.info < '8.5')  (cost=10.9..44434 rows=4060 height=1) (actual time=0.0167..885 rows=454230 loops=1)
                                                -> Index lookup on mi_idx using info_type_id_movie_info_idx (info_type_id = it2.id)  (cost=3.59..43732 rows=12181 height=1) (actual time=0.016..839 rows=459925 loops=1)
                                        -> Filter: (t.production_year > 2005)  (cost=4.5..4.5 rows=0.333 height=1) (actual time=0.00205..0.00207 rows=0.301 loops=454230)
                                            -> Single-row index lookup on t using PRIMARY (id = mi_idx.movie_id)  (cost=4.44..4.44 rows=1 height=1) (actual time=0.00193..0.00195 rows=1 loops=454230)
                                    -> Hash
                                        -> Filter: (kt.kind in ('movie','episode'))  (cost=2.73..3.82 rows=1.4 height=1) (actual time=0.0034..0.00491 rows=2 loops=1)
                                            -> Table scan on kt  (cost=0.488..3.42 rows=7 height=1) (actual time=0.0027..0.00361 rows=7 loops=1)
                            -> Filter: ((mc.note like '%(200%)%') and (not((mc.note like '%(USA)%'))))  (cost=6.08..6.08 rows=0.104 height=1) (actual time=0.00616..0.00868 rows=0.58 loops=104030)
                                -> Index lookup on mc using movie_id_movie_companies (movie_id = mi_idx.movie_id)  (cost=5.71..6.01 rows=1.05 height=1) (actual time=0.00306..0.00776 rows=3.03 loops=104030)
                        -> Filter: (mi.info in ('Sweden','Norway','Germany','Denmark','Swedish','Danish','Norwegian','German','USA','American'))  (cost=9.53..28.6 rows=3 height=1) (actual time=0.109..0.155 rows=0.755 loops=60387)
                            -> Index lookup on mi using movie_id_movie_info (movie_id = mc.movie_id)  (cost=4.71..28.2 rows=6 height=1) (actual time=0.00382..0.143 rows=78.3 loops=60387)
                    -> Hash
                        -> Filter: (it1.info = 'countries')  (cost=6.94..78.4 rows=11.3 height=1) (actual time=0.00785..0.0288 rows=1 loops=1)
                            -> Table scan on it1  (cost=0.636..71.9 rows=113 height=1) (actual time=0.00585..0.0225 rows=113 loops=1)
                -> Index lookup on mk using movie_id_movie_keyword (movie_id = mc.movie_id)  (cost=4.92..9.11 rows=1.85 height=1) (actual time=0.00581..0.114 rows=69.1 loops=39496)
            -> Filter: (k.keyword in ('murder','murder-in-title','blood','violence'))  (cost=3.32..3.32 rows=0.4 height=1) (actual time=0.00155..0.00155 rows=0.0084 loops=2.73e+6)
                -> Single-row index lookup on k using PRIMARY (id = mk.keyword_id)  (cost=3.27..3.27 rows=1 height=1) (actual time=0.00136..0.00138 rows=1 loops=2.73e+6)
        -> Filter: (cn.country_code <> '[us]')  (cost=3.68..3.68 rows=0.9 height=1) (actual time=0.00128..0.00133 rows=0.932 loops=22947)
            -> Single-row index lookup on cn using PRIMARY (id = mc.company_id)  (cost=3.62..3.62 rows=1 height=1) (actual time=0.00112..0.00113 rows=1 loops=22947)
    -> Hash
        -> Table scan on ct  (cost=0.636..2.54 rows=4 height=1) (actual time=0.0154..0.0178 rows=4 loops=1)
