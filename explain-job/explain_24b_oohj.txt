Executing: ../mysql-server-build/build-release/bin/mysql -uroot --local-infile=1 --port=13000 --host=127.0.0.1 imdbload with input size: 1305 bytes
EXPLAIN
-> Nested loop inner join  (cost=487967..487967 rows=0.123 height=1) (actual time=168..168 rows=0 loops=1)
    -> Nested loop inner join  (cost=487963..487963 rows=0.307 height=1) (actual time=168..168 rows=0 loops=1)
        -> Nested loop inner join  (cost=487544..487959 rows=1.44 height=1) (actual time=168..168 rows=0 loops=1)
            -> Nested loop inner join  (cost=487540..487953 rows=1.44 height=1) (actual time=168..168 rows=0 loops=1)
                -> Nested loop inner join  (cost=486617..487407 rows=130 height=1) (actual time=165..167 rows=1176 loops=1)
                    -> Inner hash join (rt.id = ci.role_id)  (optimistic hash join, o_level=0.8, o_func=LINEAR, went_on_disk=false) (fill_ratio=6.19888e-06)  (cost=486613..486766 rows=70.2 height=1) (actual time=165..165 rows=32 loops=1)
                        -> Sort: ci.id  (cost=486601..486601 rows=702 height=1) (actual time=165..165 rows=125 loops=1)
                            -> Nested loop inner join  (cost=787..486144 rows=702 height=1) (actual time=16.5..165 rows=125 loops=1)
                                -> Inner hash join (it.id = mi.info_type_id) (fill_ratio=9.05991e-06)  (cost=4088..477887 rows=120 height=1) (actual time=16.5..164 rows=5 loops=1)
                                    -> Nested loop inner join  (cost=399..477527 rows=1197 height=1) (actual time=16.5..164 rows=5 loops=1)
                                        -> Nested loop inner join  (cost=474..450357 rows=951 height=1) (actual time=15.9..163 rows=4 loops=1)
                                            -> Nested loop inner join  (cost=13..334377 rows=25682 height=1) (actual time=15.8..163 rows=99 loops=1)
                                                -> Filter: ((cn.country_code = '[us]') and (cn.`name` = 'DreamWorks Animation'))  (cost=99.9..235998 rows=2363 height=1) (actual time=15.8..162 rows=1 loops=1)
                                                    -> Table scan on cn  (cost=0.935..221027 rows=236270 height=1) (actual time=0.00619..138 rows=234997 loops=1)
                                                -> Index lookup on mc using company_id_movie_companies (company_id = cn.id)  (cost=3.83..41.6 rows=10.9 height=1) (actual time=0.0153..0.267 rows=99 loops=1)
                                            -> Filter: ((t.production_year > 2010) and (t.title like 'Kung Fu Panda%'))  (cost=4.52..4.52 rows=0.037 height=1) (actual time=0.003..0.003 rows=0.0404 loops=99)
                                                -> Single-row index lookup on t using PRIMARY (id = mc.movie_id)  (cost=4.44..4.44 rows=1 height=1) (actual time=0.00281..0.00282 rows=1 loops=99)
                                        -> Filter: ((mi.info like 'Japan:%201%') or (mi.info like 'USA:%201%'))  (cost=22.7..28.6 rows=1.26 height=1) (actual time=0.115..0.156 rows=1.25 loops=4)
                                            -> Index lookup on mi using movie_id_movie_info (movie_id = t.id)  (cost=4.71..28.2 rows=6 height=1) (actual time=0.00727..0.148 rows=71 loops=4)
                                    -> Hash
                                        -> Filter: (it.info = 'release dates')  (cost=6.94..78.4 rows=11.3 height=1) (actual time=0.00839..0.0284 rows=1 loops=1)
                                            -> Table scan on it  (cost=0.636..71.9 rows=113 height=1) (actual time=0.00643..0.023 rows=113 loops=1)
                                -> Filter: (ci.note in ('(voice)','(voice: Japanese version)','(voice) (uncredited)','(voice: English version)'))  (cost=11.8..69 rows=5.87 height=1) (actual time=0.00865..0.3 rows=25 loops=5)
                                    -> Index lookup on ci using movie_id_cast_info (movie_id = mc.movie_id)  (cost=4.64..68.2 rows=14.7 height=1) (actual time=0.00611..0.279 rows=108 loops=5)
                        -> Hash
                            -> Filter: (rt.`role` = 'actress')  (cost=6.94..8.32 rows=1.2 height=1) (actual time=0.0187..0.0219 rows=1 loops=1)
                                -> Table scan on rt  (cost=0.636..7.63 rows=12 height=1) (actual time=0.0164..0.0198 rows=12 loops=1)
                    -> Index lookup on mk using movie_id_movie_keyword (movie_id = ci.movie_id)  (cost=4.92..9.11 rows=1.85 height=1) (actual time=0.00619..0.0594 rows=36.8 loops=32)
                -> Filter: ((n.gender = 'f') and (n.`name` like '%An%'))  (cost=4.2..4.2 rows=0.0111 height=1) (actual time=261e-6..261e-6 rows=0 loops=1176)
                    -> Single-row index lookup on n using PRIMARY (id = ci.person_id)  (cost=4.14..4.14 rows=1 height=1) (actual time=121e-6..135e-6 rows=1 loops=1176)
            -> Single-row index lookup on chn using PRIMARY (id = ci.person_role_id)  (cost=4.12..4.12 rows=1 height=1) (never executed)
        -> Index lookup on an using person_id_aka_name (person_id = n.id)  (cost=3..3 rows=0.213 height=1) (never executed)
    -> Filter: (k.keyword in ('hero','martial-arts','hand-to-hand-combat','computer-animated-movie'))  (cost=3.32..3.32 rows=0.4 height=1) (never executed)
        -> Single-row index lookup on k using PRIMARY (id = mk.keyword_id)  (cost=3.27..3.27 rows=1 height=1) (never executed)
