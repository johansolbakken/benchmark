Executing: ../mysql-server-build/build-release/bin/mysql -uroot --local-infile=1 --port=13000 --host=127.0.0.1 imdbload with input size: 360 bytes
EXPLAIN
-> Nested loop inner join  (cost=4.26e+6..9.04e+6 rows=100248 height=1) (actual time=142..191 rows=5 loops=1)
    -> Sort: t.title  (cost=4.26e+6..4.26e+6 rows=167202 height=1) (actual time=141..141 rows=395 loops=1)
        -> Nested loop inner join  (cost=24.6..4.11e+6 rows=167202 height=1) (actual time=0.779..141 rows=395 loops=1)
            -> Nested loop inner join  (cost=3.69..1.85e+6 rows=501657 height=1) (actual time=0.396..111 rows=12951 loops=1)
                -> Filter: (k.keyword like '%sequel%')  (cost=5.54..82143 rows=14834 height=1) (actual time=0.255..85.2 rows=30 loops=1)
                    -> Table scan on k  (cost=0.558..74452 rows=133521 height=1) (actual time=0.0157..62.2 rows=134170 loops=1)
                -> Index lookup on mk using keyword_id_movie_keyword (keyword_id = k.id)  (cost=3.53..119 rows=33.8 height=1) (actual time=0.0437..0.842 rows=432 loops=30)
            -> Filter: (t.production_year > 2010)  (cost=4.5..4.5 rows=0.333 height=1) (actual time=0.00227..0.00227 rows=0.0305 loops=12951)
                -> Single-row index lookup on t using PRIMARY (id = mk.movie_id)  (cost=4.44..4.44 rows=1 height=1) (actual time=0.00214..0.00216 rows=1 loops=12951)
    -> Filter: (mi.info = 'Bulgaria')  (cost=28.6..28.6 rows=0.6 height=1) (actual time=0.125..0.127 rows=0.0127 loops=395)
        -> Index lookup on mi using movie_id_movie_info (movie_id = mk.movie_id)  (cost=4.71..28.2 rows=6 height=1) (actual time=0.00446..0.121 rows=64.2 loops=395)
