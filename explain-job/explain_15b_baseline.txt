Executing: ../mysql-server-build/build-release/bin/mysql -uroot --local-infile=1 --port=13000 --host=127.0.0.1 imdbload with input size: 885 bytes
EXPLAIN
-> Nested loop inner join  (cost=338006..338006 rows=0.0705 height=1) (actual time=182..186 rows=37 loops=1)
    -> Nested loop inner join  (cost=338004..338004 rows=0.0705 height=1) (actual time=182..186 rows=37 loops=1)
        -> Nested loop inner join  (cost=338001..338001 rows=0.0705 height=1) (actual time=182..186 rows=37 loops=1)
            -> Nested loop inner join  (cost=337998..337998 rows=0.705 height=1) (actual time=182..186 rows=37 loops=1)
                -> Sort: t.title  (cost=337726..337726 rows=9.53 height=1) (actual time=168..168 rows=292 loops=1)
                    -> Nested loop inner join  (cost=35453..337721 rows=9.53 height=1) (actual time=0.498..168 rows=292 loops=1)
                        -> Nested loop inner join  (cost=3934..337336 rows=85.7 height=1) (actual time=0.489..168 rows=292 loops=1)
                            -> Nested loop inner join  (cost=7274..336914 rows=46.3 height=1) (actual time=0.476..167 rows=27 loops=1)
                                -> Nested loop inner join  (cost=1060..336021 rows=317 height=1) (actual time=0.0547..167 rows=278 loops=1)
                                    -> Filter: ((cn.country_code = '[us]') and (cn.`name` = 'YouTube'))  (cost=99.9..235998 rows=2363 height=1) (actual time=0.0226..163 rows=1 loops=1)
                                        -> Table scan on cn  (cost=0.935..221027 rows=236270 height=1) (actual time=0.018..139 rows=234997 loops=1)
                                    -> Filter: ((mc.note like '%(200%)%') and (mc.note like '%(worldwide)%'))  (cost=42.3..42.3 rows=0.134 height=1) (actual time=0.0313..3.8 rows=278 loops=1)
                                        -> Index lookup on mc using company_id_movie_companies (company_id = cn.id)  (cost=3.83..41.6 rows=10.9 height=1) (actual time=0.0149..3.29 rows=1458 loops=1)
                                -> Index lookup on at using movie_id_aka_title (movie_id = mc.movie_id)  (cost=2.82..2.82 rows=0.146 height=1) (actual time=0.00193..0.00202 rows=0.0971 loops=278)
                            -> Index lookup on mk using movie_id_movie_keyword (movie_id = mc.movie_id)  (cost=4.92..9.11 rows=1.85 height=1) (actual time=0.00723..0.0222 rows=10.8 loops=27)
                        -> Filter: (t.production_year between 2005 and 2010)  (cost=4.5..4.5 rows=0.111 height=1) (actual time=414e-6..461e-6 rows=1 loops=292)
                            -> Single-row index lookup on t using PRIMARY (id = mc.movie_id)  (cost=4.44..4.44 rows=1 height=1) (actual time=328e-6..343e-6 rows=1 loops=292)
                -> Filter: ((mi.note like '%internet%') and (mi.info like 'USA:% 200%'))  (cost=28.6..28.6 rows=0.074 height=1) (actual time=0.0591..0.0592 rows=0.127 loops=292)
                    -> Index lookup on mi using movie_id_movie_info (movie_id = mc.movie_id)  (cost=4.71..28.2 rows=6 height=1) (actual time=0.00332..0.0543 rows=29 loops=292)
            -> Filter: (it1.info = 'release dates')  (cost=2.3..2.3 rows=0.1 height=1) (actual time=460e-6..505e-6 rows=1 loops=37)
                -> Single-row index lookup on it1 using PRIMARY (id = mi.info_type_id)  (cost=2.25..2.25 rows=1 height=1) (actual time=224e-6..237e-6 rows=1 loops=37)
        -> Single-row index lookup on k using PRIMARY (id = mk.keyword_id)  (cost=3.27..3.27 rows=1 height=1) (actual time=0.00205..0.00206 rows=1 loops=37)
    -> Single-row index lookup on ct using PRIMARY (id = mc.company_type_id)  (cost=2.25..2.25 rows=1 height=1) (actual time=201e-6..215e-6 rows=1 loops=37)
