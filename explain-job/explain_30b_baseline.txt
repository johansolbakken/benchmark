Executing: ../mysql-server-build/build-release/bin/mysql -uroot --local-infile=1 --port=13000 --host=127.0.0.1 imdbload with input size: 1382 bytes
EXPLAIN
-> Nested loop inner join  (cost=110907..110917 rows=1.23 height=1) (actual time=107..107 rows=0 loops=1)
    -> Sort: ci.id  (cost=110865..110865 rows=12.3 height=1) (actual time=107..107 rows=28 loops=1)
        -> Nested loop inner join  (cost=9075..110860 rows=12.3 height=1) (actual time=22.1..107 rows=28 loops=1)
            -> Nested loop inner join  (cost=65881..110744 rows=1.68 height=1) (actual time=21.9..104 rows=12 loops=1)
                -> Nested loop inner join  (cost=32988..110732 rows=3.36 height=1) (actual time=21.9..103 rows=478 loops=1)
                    -> Nested loop inner join  (cost=60969..110716 rows=1.82 height=1) (actual time=21.9..102 rows=3 loops=1)
                        -> Nested loop inner join  (cost=6187..110674 rows=18.2 height=1) (actual time=21.9..102 rows=3 loops=1)
                            -> Inner hash join (it2.id = mi_idx.info_type_id) (fill_ratio=5.24521e-06)  (cost=7370..110241 rows=15.2 height=1) (actual time=21.1..101 rows=2 loops=1)
                                -> Nested loop inner join  (cost=734..110112 rows=152 height=1) (actual time=21.1..101 rows=6 loops=1)
                                    -> Nested loop inner join  (cost=413..108980 rows=269 height=1) (actual time=21.1..100 rows=2 loops=1)
                                        -> Inner hash join (cct1.id = cc.subject_id) (fill_ratio=9.53674e-06)  (cost=43.1..96755 rows=2707 height=1) (actual time=1.06..42 rows=24592 loops=1)
                                            -> Inner hash join (cct2.id = cc.status_id) (fill_ratio=1.09673e-05)  (cost=10.3..93570 rows=13536 height=1) (actual time=1.05..39.2 rows=24592 loops=1)
                                                -> Table scan on cc  (cost=0.47..63625 rows=135359 height=1) (actual time=1.04..30.6 rows=135086 loops=1)
                                                -> Hash
                                                    -> Filter: (cct2.kind = 'complete+verified')  (cost=2.77..2.77 rows=0.4 height=1) (actual time=0.00356..0.00407 rows=1 loops=1)
                                                        -> Table scan on cct2  (cost=0.636..2.54 rows=4 height=1) (actual time=0.00257..0.00331 rows=4 loops=1)
                                            -> Hash
                                                -> Filter: (cct1.kind in ('cast','crew'))  (cost=2.77..2.77 rows=0.8 height=1) (actual time=0.00442..0.00567 rows=2 loops=1)
                                                    -> Table scan on cct1  (cost=0.636..2.54 rows=4 height=1) (actual time=0.0037..0.00439 rows=4 loops=1)
                                        -> Filter: ((t.production_year > 2000) and ((t.title like '%Freddy%') or (t.title like '%Jason%') or (t.title like 'Saw%')))  (cost=4.52..4.52 rows=0.0992 height=1) (actual time=0.00232..0.00232 rows=81.3e-6 loops=24592)
                                            -> Single-row index lookup on t using PRIMARY (id = cc.movie_id)  (cost=4.44..4.44 rows=1 height=1) (actual time=0.00216..0.00217 rows=1 loops=24592)
                                    -> Index lookup on mi_idx using movie_id_movie_info_idx (movie_id = cc.movie_id)  (cost=4.21..4.21 rows=0.564 height=1) (actual time=0.00977..0.0162 rows=3 loops=2)
                                -> Hash
                                    -> Filter: (it2.info = 'votes')  (cost=6.94..78.4 rows=11.3 height=1) (actual time=0.0411..0.0432 rows=1 loops=1)
                                        -> Table scan on it2  (cost=0.636..71.9 rows=113 height=1) (actual time=0.0177..0.0362 rows=113 loops=1)
                            -> Filter: (mi.info in ('Horror','Thriller'))  (cost=23.8..28.6 rows=1.2 height=1) (actual time=0.724..0.901 rows=1.5 loops=2)
                                -> Index lookup on mi using movie_id_movie_info (movie_id = cc.movie_id)  (cost=4.71..28.2 rows=6 height=1) (actual time=0.00908..0.847 rows=454 loops=2)
                        -> Filter: (it1.info = 'genres')  (cost=2.3..2.3 rows=0.1 height=1) (actual time=0.00162..0.00167 rows=1 loops=3)
                            -> Single-row index lookup on it1 using PRIMARY (id = mi.info_type_id)  (cost=2.25..2.25 rows=1 height=1) (actual time=0.00126..0.00128 rows=1 loops=3)
                    -> Index lookup on mk using movie_id_movie_keyword (movie_id = cc.movie_id)  (cost=4.92..9.11 rows=1.85 height=1) (actual time=0.0114..0.269 rows=159 loops=3)
                -> Filter: (k.keyword in ('murder','violence','blood','gore','death','female-nudity','hospital'))  (cost=3.32..3.32 rows=0.5 height=1) (actual time=0.00183..0.00183 rows=0.0251 loops=478)
                    -> Single-row index lookup on k using PRIMARY (id = mk.keyword_id)  (cost=3.27..3.27 rows=1 height=1) (actual time=0.00161..0.00163 rows=1 loops=478)
            -> Filter: (ci.note in ('(writer)','(head writer)','(written by)','(story)','(story editor)'))  (cost=9.4..69 rows=7.34 height=1) (actual time=0.116..0.271 rows=2.33 loops=12)
                -> Index lookup on ci using movie_id_cast_info (movie_id = cc.movie_id)  (cost=4.64..68.2 rows=14.7 height=1) (actual time=0.00512..0.252 rows=109 loops=12)
    -> Filter: (n.gender = 'm')  (cost=4.2..4.2 rows=0.1 height=1) (actual time=812e-6..812e-6 rows=0 loops=28)
        -> Single-row index lookup on n using PRIMARY (id = ci.person_id)  (cost=4.14..4.14 rows=1 height=1) (actual time=678e-6..692e-6 rows=1 loops=28)
