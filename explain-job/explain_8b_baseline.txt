Executing: ../mysql-server-build/build-release/bin/mysql -uroot --local-infile=1 --port=13000 --host=127.0.0.1 imdbload with input size: 770 bytes
EXPLAIN
-> Nested loop inner join  (cost=1.27e+6..1.27e+6 rows=0.383 height=1) (actual time=438..438 rows=6 loops=1)
    -> Nested loop inner join  (cost=1.27e+6..1.27e+6 rows=3.83 height=1) (actual time=438..438 rows=6 loops=1)
        -> Nested loop inner join  (cost=1.27e+6..1.27e+6 rows=38.8 height=1) (actual time=437..438 rows=171 loops=1)
            -> Sort: ci.id  (cost=1.27e+6..1.27e+6 rows=182 height=1) (actual time=437..437 rows=104 loops=1)
                -> Nested loop inner join  (cost=6960..1.27e+6 rows=182 height=1) (actual time=51.1..437 rows=104 loops=1)
                    -> Nested loop inner join  (cost=10147..1.26e+6 rows=124 height=1) (actual time=51..437 rows=5 loops=1)
                        -> Nested loop inner join  (cost=232..1.24e+6 rows=5323 height=1) (actual time=0.088..414 rows=8472 loops=1)
                            -> Filter: (cn.country_code = '[jp]')  (cost=9.93..234637 rows=23627 height=1) (actual time=0.07..154 rows=6715 loops=1)
                                -> Table scan on cn  (cost=0.935..221027 rows=236270 height=1) (actual time=0.0183..138 rows=234997 loops=1)
                            -> Filter: ((mc.note like '%(Japan)%') and ((mc.note like '%(2006)%') or (mc.note like '%(2007)%')) and (not((mc.note like '%(USA)%'))))  (cost=42.3..42.3 rows=0.225 height=1) (actual time=0.0164..0.0386 rows=1.26 loops=6715)
                                -> Index lookup on mc using company_id_movie_companies (company_id = cn.id)  (cost=3.83..41.6 rows=10.9 height=1) (actual time=0.00336..0.0329 rows=15.6 loops=6715)
                        -> Filter: ((t.production_year between 2006 and 2007) and ((t.title like 'One Piece%') or (t.title like 'Dragon Ball Z%')))  (cost=4.5..4.5 rows=0.0233 height=1) (actual time=0.00256..0.00256 rows=590e-6 loops=8472)
                            -> Single-row index lookup on t using PRIMARY (id = mc.movie_id)  (cost=4.44..4.44 rows=1 height=1) (actual time=0.00237..0.00239 rows=1 loops=8472)
                    -> Filter: (ci.note = '(voice: English version)')  (cost=47..69 rows=1.47 height=1) (actual time=0.0359..0.118 rows=20.8 loops=5)
                        -> Index lookup on ci using movie_id_cast_info (movie_id = mc.movie_id)  (cost=4.64..68.2 rows=14.7 height=1) (actual time=0.00747..0.11 rows=37.6 loops=5)
            -> Index lookup on an using person_id_aka_name (person_id = ci.person_id)  (cost=3..3 rows=0.213 height=1) (actual time=0.00326..0.0055 rows=1.64 loops=104)
        -> Filter: ((n.`name` like '%Yo%') and (not((n.`name` like '%Yu%'))))  (cost=4.2..4.2 rows=0.0988 height=1) (actual time=917e-6..919e-6 rows=0.0351 loops=171)
            -> Single-row index lookup on n using PRIMARY (id = ci.person_id)  (cost=4.14..4.14 rows=1 height=1) (actual time=693e-6..708e-6 rows=1 loops=171)
    -> Filter: (rt.`role` = 'actress')  (cost=2.3..2.3 rows=0.1 height=1) (actual time=862e-6..912e-6 rows=1 loops=6)
        -> Single-row index lookup on rt using PRIMARY (id = ci.role_id)  (cost=2.25..2.25 rows=1 height=1) (actual time=666e-6..682e-6 rows=1 loops=6)
