Executing: ../mysql-server-build/build-release/bin/mysql -uroot --local-infile=1 --port=13000 --host=127.0.0.1 imdbload with input size: 1609 bytes
EXPLAIN
-> Nested loop inner join  (cost=102956..102956 rows=123e-9 height=1) (actual time=116..116 rows=0 loops=1)
    -> Nested loop inner join  (cost=102954..102954 rows=1.23e-6 height=1) (actual time=116..116 rows=0 loops=1)
        -> Nested loop inner join  (cost=102951..102951 rows=5.79e-6 height=1) (actual time=116..116 rows=0 loops=1)
            -> Nested loop inner join  (cost=102949..102949 rows=57.9e-6 height=1) (actual time=116..116 rows=0 loops=1)
                -> Nested loop inner join  (cost=102946..102946 rows=579e-6 height=1) (actual time=116..116 rows=0 loops=1)
                    -> Nested loop inner join  (cost=102942..102942 rows=0.00579 height=1) (actual time=116..116 rows=0 loops=1)
                        -> Nested loop inner join  (cost=102938..102938 rows=0.521 height=1) (actual time=98..113 rows=8335 loops=1)
                            -> Sort: ci.id  (cost=102933..102933 rows=0.86 height=1) (actual time=97.9..98.1 rows=190 loops=1)
                                -> Nested loop inner join  (cost=102933..102933 rows=0.86 height=1) (actual time=51.5..97.8 rows=190 loops=1)
                                    -> Nested loop inner join  (cost=102864..102864 rows=0.195 height=1) (actual time=51.5..94.9 rows=5 loops=1)
                                        -> Nested loop inner join  (cost=102835..102835 rows=0.293 height=1) (actual time=50.8..90.8 rows=5 loops=1)
                                            -> Nested loop inner join  (cost=64936..102811 rows=1.58 height=1) (actual time=50.7..88.9 rows=5 loops=1)
                                                -> Nested loop inner join  (cost=6833..102662 rows=15 height=1) (actual time=50.7..88.8 rows=1 loops=1)
                                                    -> Inner hash join (cct2.id = cc.status_id) (fill_ratio=1.09673e-05)  (cost=78.1..96567 rows=1354 height=1) (actual time=1.12..46.2 rows=17879 loops=1)
                                                        -> Inner hash join (cct1.id = cc.subject_id) (fill_ratio=4.76837e-06)  (cost=10.3..93570 rows=13536 height=1) (actual time=1.04..40.7 rows=85941 loops=1)
                                                            -> Table scan on cc  (cost=0.47..63625 rows=135359 height=1) (actual time=1.03..30.2 rows=135086 loops=1)
                                                            -> Hash
                                                                -> Filter: (cct1.kind = 'cast')  (cost=2.77..2.77 rows=0.4 height=1) (actual time=0.00323..0.00422 rows=1 loops=1)
                                                                    -> Table scan on cct1  (cost=0.636..2.54 rows=4 height=1) (actual time=0.00285..0.0036 rows=4 loops=1)
                                                        -> Hash
                                                            -> Filter: (cct2.kind = 'complete+verified')  (cost=2.77..2.77 rows=0.4 height=1) (actual time=0.0208..0.0229 rows=1 loops=1)
                                                                -> Table scan on cct2  (cost=0.636..2.54 rows=4 height=1) (actual time=0.017..0.0198 rows=4 loops=1)
                                                    -> Filter: ((t.production_year between 2000 and 2005) and (t.title = 'Shrek 2'))  (cost=4.5..4.5 rows=0.0111 height=1) (actual time=0.00232..0.00232 rows=55.9e-6 loops=17879)
                                                        -> Single-row index lookup on t using PRIMARY (id = cc.movie_id)  (cost=4.44..4.44 rows=1 height=1) (actual time=0.0022..0.00221 rows=1 loops=17879)
                                                -> Nested loop inner join  (cost=9.89..9.89 rows=0.105 height=1) (actual time=0.0195..0.134 rows=5 loops=1)
                                                    -> Index lookup on mc using movie_id_movie_companies (movie_id = t.id)  (cost=5.71..6.01 rows=1.05 height=1) (actual time=0.012..0.0732 rows=22 loops=1)
                                                    -> Filter: (cn.country_code = '[us]')  (cost=3.68..3.68 rows=0.1 height=1) (actual time=0.00267..0.00268 rows=0.227 loops=22)
                                                        -> Single-row index lookup on cn using PRIMARY (id = mc.company_id)  (cost=3.62..3.62 rows=1 height=1) (actual time=0.00248..0.0025 rows=1 loops=22)
                                            -> Nested loop inner join  (cost=15.3..15.3 rows=0.185 height=1) (actual time=0.0731..0.371 rows=1 loops=5)
                                                -> Index lookup on mk using movie_id_movie_keyword (movie_id = mc.movie_id)  (cost=4.92..9.11 rows=1.85 height=1) (actual time=0.00828..0.188 rows=108 loops=5)
                                                -> Filter: (k.keyword = 'computer-animation')  (cost=3.32..3.32 rows=0.1 height=1) (actual time=0.00163..0.00163 rows=0.00926 loops=540)
                                                    -> Single-row index lookup on k using PRIMARY (id = mk.keyword_id)  (cost=3.27..3.27 rows=1 height=1) (actual time=0.00149..0.00151 rows=1 loops=540)
                                        -> Filter: (mi.info like 'USA:%200%')  (cost=28.6..28.6 rows=0.666 height=1) (actual time=0.719..0.829 rows=1 loops=5)
                                            -> Index lookup on mi using movie_id_movie_info (movie_id = cc.movie_id)  (cost=4.71..28.2 rows=6 height=1) (actual time=0.00579..0.796 rows=457 loops=5)
                                    -> Filter: (ci.note in ('(voice)','(voice) (uncredited)','(voice: English version)'))  (cost=15.7..69 rows=4.4 height=1) (actual time=0.00645..0.572 rows=38 loops=5)
                                        -> Index lookup on ci using movie_id_cast_info (movie_id = cc.movie_id)  (cost=4.64..68.2 rows=14.7 height=1) (actual time=0.00583..0.535 rows=229 loops=5)
                            -> Index lookup on pi using person_id_person_info (person_id = ci.person_id)  (cost=4.85..4.85 rows=0.606 height=1) (actual time=0.0029..0.0777 rows=43.9 loops=190)
                        -> Filter: ((n.gender = 'f') and (n.`name` like '%An%'))  (cost=4.2..4.2 rows=0.0111 height=1) (actual time=240e-6..240e-6 rows=0 loops=8335)
                            -> Single-row index lookup on n using PRIMARY (id = pi.person_id)  (cost=4.14..4.14 rows=1 height=1) (actual time=83.5e-6..97.4e-6 rows=1 loops=8335)
                    -> Filter: (chn.`name` = 'Queen')  (cost=4.17..4.17 rows=0.1 height=1) (never executed)
                        -> Single-row index lookup on chn using PRIMARY (id = ci.person_role_id)  (cost=4.12..4.12 rows=1 height=1) (never executed)
                -> Filter: (rt.`role` = 'actress')  (cost=2.3..2.3 rows=0.1 height=1) (never executed)
                    -> Single-row index lookup on rt using PRIMARY (id = ci.role_id)  (cost=2.25..2.25 rows=1 height=1) (never executed)
            -> Filter: (it3.info = 'height')  (cost=2.3..2.3 rows=0.1 height=1) (never executed)
                -> Single-row index lookup on it3 using PRIMARY (id = pi.info_type_id)  (cost=2.25..2.25 rows=1 height=1) (never executed)
        -> Index lookup on an using person_id_aka_name (person_id = n.id)  (cost=3..3 rows=0.213 height=1) (never executed)
    -> Filter: (it.info = 'release dates')  (cost=2.3..2.3 rows=0.1 height=1) (never executed)
        -> Single-row index lookup on it using PRIMARY (id = mi.info_type_id)  (cost=2.25..2.25 rows=1 height=1) (never executed)
