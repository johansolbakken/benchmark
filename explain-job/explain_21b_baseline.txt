Executing: ../mysql-server-build/build-release/bin/mysql -uroot --local-infile=1 --port=13000 --host=127.0.0.1 imdbload with input size: 902 bytes
EXPLAIN
-> Nested loop inner join  (cost=27745..27745 rows=0.165 height=1) (actual time=17.5..17.5 rows=0 loops=1)
    -> Nested loop inner join  (cost=27716..27716 rows=0.138 height=1) (actual time=17.5..17.5 rows=0 loops=1)
        -> Nested loop inner join  (cost=27705..27712 rows=1.38 height=1) (actual time=17.5..17.5 rows=0 loops=1)
            -> Nested loop inner join  (cost=27703..27703 rows=0.745 height=1) (actual time=17.5..17.5 rows=0 loops=1)
                -> Sort: t.title  (cost=27688..27688 rows=3.95 height=1) (actual time=17.5..17.5 rows=0 loops=1)
                    -> Inner hash join (mc.company_type_id = ct.id) (fill_ratio=1.23978e-05)  (cost=25982..27687 rows=3.95 height=1) (actual time=17.5..17.5 rows=0 loops=1)
                        -> Nested loop inner join  (cost=25457..27674 rows=39.5 height=1) (actual time=17.5..17.5 rows=0 loops=1)
                            -> Sort: t.title  (cost=25400..25400 rows=375 height=1) (actual time=5.84..6.18 rows=983 loops=1)
                                -> Nested loop inner join  (cost=67.2..25167 rows=375 height=1) (actual time=0.337..5.55 rows=983 loops=1)
                                    -> Nested loop inner join  (cost=2.96..9999 rows=3373 height=1) (actual time=0.327..3.28 rows=2315 loops=1)
                                        -> Filter: (lt.link like '%follow%')  (cost=6.24..12.5 rows=2 height=1) (actual time=0.00661..0.0139 rows=2 loops=1)
                                            -> Table scan on lt  (cost=0.636..11.4 rows=18 height=1) (actual time=0.00574..0.00956 rows=18 loops=1)
                                        -> Index lookup on ml using link_type_id_movie_link (link_type_id = lt.id)  (cost=2.96..4994 rows=1687 height=1) (actual time=0.316..1.59 rows=1158 loops=2)
                                    -> Filter: (t.production_year between 2000 and 2010)  (cost=4.5..4.5 rows=0.111 height=1) (actual time=895e-6..914e-6 rows=0.425 loops=2315)
                                        -> Single-row index lookup on t using PRIMARY (id = ml.movie_id)  (cost=4.44..4.44 rows=1 height=1) (actual time=791e-6..807e-6 rows=1 loops=2315)
                            -> Filter: (mc.note is null)  (cost=6.07..6.07 rows=0.105 height=1) (actual time=0.0114..0.0114 rows=0 loops=983)
                                -> Index lookup on mc using movie_id_movie_companies (movie_id = t.id)  (cost=5.71..6.01 rows=1.05 height=1) (actual time=0.00335..0.0111 rows=4.75 loops=983)
                        -> Hash
                            -> Filter: (ct.kind = 'production companies')  (cost=2.77..2.77 rows=0.4 height=1) (actual time=0.0168..0.0192 rows=1 loops=1)
                                -> Table scan on ct  (cost=0.636..2.54 rows=4 height=1) (actual time=0.0149..0.0175 rows=4 loops=1)
                -> Filter: (((cn.`name` like '%Film%') or (cn.`name` like '%Warner%')) and (cn.country_code <> '[pl]'))  (cost=3.69..3.69 rows=0.189 height=1) (never executed)
                    -> Single-row index lookup on cn using PRIMARY (id = mc.company_id)  (cost=3.62..3.62 rows=1 height=1) (never executed)
            -> Index lookup on mk using movie_id_movie_keyword (movie_id = ml.movie_id)  (cost=4.92..9.11 rows=1.85 height=1) (never executed)
        -> Filter: (k.keyword = 'sequel')  (cost=3.32..3.32 rows=0.1 height=1) (never executed)
            -> Single-row index lookup on k using PRIMARY (id = mk.keyword_id)  (cost=3.27..3.27 rows=1 height=1) (never executed)
    -> Filter: (mi.info in ('Germany','German'))  (cost=23.8..28.6 rows=1.2 height=1) (never executed)
        -> Index lookup on mi using movie_id_movie_info (movie_id = mc.movie_id)  (cost=4.71..28.2 rows=6 height=1) (never executed)
