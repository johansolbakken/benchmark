Executing: ../mysql-server-build/build-release/bin/mysql -uroot --local-infile=1 --port=13000 --host=127.0.0.1 imdbload with input size: 1185 bytes
EXPLAIN
-> Nested loop inner join  (cost=4.68e+6..4.68e+6 rows=8.3 height=1) (actual time=2988..2988 rows=0 loops=1)
    -> Nested loop inner join  (cost=4.68e+6..4.68e+6 rows=8.3 height=1) (actual time=2988..2988 rows=0 loops=1)
        -> Nested loop inner join  (cost=4.68e+6..4.68e+6 rows=27.7 height=1) (actual time=2988..2988 rows=30 loops=1)
            -> Sort: ci.id  (cost=4.68e+6..4.68e+6 rows=14.9 height=1) (actual time=2988..2988 rows=19 loops=1)
                -> Inner hash join (it.id = mi.info_type_id) (fill_ratio=9.05991e-06)  (cost=4.65e+6..4.68e+6 rows=14.9 height=1) (actual time=2987..2988 rows=19 loops=1)
                    -> Nested loop inner join  (cost=4.65e+6..4.68e+6 rows=149 height=1) (actual time=2987..2988 rows=19 loops=1)
                        -> Nested loop inner join  (cost=4.65e+6..4.68e+6 rows=119 height=1) (actual time=2987..2987 rows=19 loops=1)
                            -> Nested loop inner join  (cost=4.65e+6..4.67e+6 rows=1188 height=1) (actual time=2987..2987 rows=33 loops=1)
                                -> Nested loop inner join  (cost=4.65e+6..4.67e+6 rows=1128 height=1) (actual time=2987..2987 rows=12 loops=1)
                                    -> Sort: ci.id  (cost=4.65e+6..4.65e+6 rows=3385 height=1) (actual time=2987..2987 rows=86 loops=1)
                                        -> Inner hash join (rt.id = ci.role_id) (fill_ratio=6.19888e-06)  (cost=4.64e+6..4.65e+6 rows=3385 height=1) (actual time=2987..2987 rows=86 loops=1)
                                            -> Sort: ci.id  (cost=4.64e+6..4.64e+6 rows=33853 height=1) (actual time=2987..2987 rows=86 loops=1)
                                                -> Nested loop inner join  (cost=136..4.61e+6 rows=33853 height=1) (actual time=1213..2987 rows=86 loops=1)
                                                    -> Nested loop inner join  (cost=422..4.2e+6 rows=9959 height=1) (actual time=1206..2901 rows=1292 loops=1)
                                                        -> Filter: ((n.gender = 'f') and (n.`name` like '%An%'))  (cost=86.8..4.06e+6 rows=46804 height=1) (actual time=1204..2890 rows=5039 loops=1)
                                                            -> Table scan on n  (cost=0.901..3.8e+6 rows=4.21e+6 height=1) (actual time=0.00724..2601 rows=4.17e+6 loops=1)
                                                        -> Index lookup on an using person_id_aka_name (person_id = n.id)  (cost=3..3 rows=0.213 height=1) (actual time=0.00178..0.0021 rows=0.256 loops=5039)
                                                    -> Filter: (ci.note in ('(voice)','(voice: Japanese version)','(voice) (uncredited)','(voice: English version)'))  (cost=12.1..41.1 rows=3.4 height=1) (actual time=0.0608..0.0661 rows=0.0666 loops=1292)
                                                        -> Index lookup on ci using person_id_cast_info (person_id = an.person_id)  (cost=4.78..40.6 rows=8.5 height=1) (actual time=0.00368..0.0614 rows=32.6 loops=1292)
                                            -> Hash
                                                -> Filter: (rt.`role` = 'actress')  (cost=6.94..8.32 rows=1.2 height=1) (actual time=0.00518..0.00694 rows=1 loops=1)
                                                    -> Table scan on rt  (cost=0.636..7.63 rows=12 height=1) (actual time=0.00477..0.00612 rows=12 loops=1)
                                    -> Filter: (t.production_year > 2010)  (cost=4.5..4.5 rows=0.333 height=1) (actual time=0.00149..0.00149 rows=0.14 loops=86)
                                        -> Single-row index lookup on t using PRIMARY (id = ci.movie_id)  (cost=4.44..4.44 rows=1 height=1) (actual time=0.00136..0.00138 rows=1 loops=86)
                                -> Index lookup on mc using movie_id_movie_companies (movie_id = ci.movie_id)  (cost=5.71..6.01 rows=1.05 height=1) (actual time=0.00429..0.00848 rows=2.75 loops=12)
                            -> Filter: (cn.country_code = '[us]')  (cost=3.68..3.68 rows=0.1 height=1) (actual time=0.00199..0.00202 rows=0.576 loops=33)
                                -> Single-row index lookup on cn using PRIMARY (id = mc.company_id)  (cost=3.62..3.62 rows=1 height=1) (actual time=0.00181..0.00182 rows=1 loops=33)
                        -> Filter: ((mi.info like 'Japan:%201%') or (mi.info like 'USA:%201%'))  (cost=22.7..28.6 rows=1.26 height=1) (actual time=0.0303..0.0357 rows=1 loops=19)
                            -> Index lookup on mi using movie_id_movie_info (movie_id = ci.movie_id)  (cost=4.71..28.2 rows=6 height=1) (actual time=0.00358..0.0332 rows=16.8 loops=19)
                    -> Hash
                        -> Filter: (it.info = 'release dates')  (cost=6.94..78.4 rows=11.3 height=1) (actual time=0.0213..0.0431 rows=1 loops=1)
                            -> Table scan on it  (cost=0.636..71.9 rows=113 height=1) (actual time=0.0177..0.0364 rows=113 loops=1)
            -> Index lookup on mk using movie_id_movie_keyword (movie_id = ci.movie_id)  (cost=4.92..9.11 rows=1.85 height=1) (actual time=0.00406..0.00439 rows=1.58 loops=19)
        -> Filter: (k.keyword in ('hero','martial-arts','hand-to-hand-combat'))  (cost=3.32..3.32 rows=0.3 height=1) (actual time=0.00165..0.00165 rows=0 loops=30)
            -> Single-row index lookup on k using PRIMARY (id = mk.keyword_id)  (cost=3.27..3.27 rows=1 height=1) (actual time=0.00145..0.00146 rows=1 loops=30)
    -> Single-row index lookup on chn using PRIMARY (id = ci.person_role_id)  (cost=4.12..4.12 rows=1 height=1) (never executed)
