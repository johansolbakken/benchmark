Executing: ../mysql-server-build/build-release/bin/mysql -uroot --local-infile=1 --port=13000 --host=127.0.0.1 imdbload with input size: 1515 bytes
EXPLAIN
-> Nested loop inner join  (cost=102672..102672 rows=14.5e-9 height=1) (actual time=545..1204 rows=8362 loops=1)
    -> Nested loop inner join  (cost=102670..102670 rows=145e-9 height=1) (actual time=545..1200 rows=9438 loops=1)
        -> Nested loop inner join  (cost=102668..102668 rows=145e-9 height=1) (actual time=545..1198 rows=9438 loops=1)
            -> Nested loop inner join  (cost=102664..102664 rows=161e-9 height=1) (actual time=545..1179 rows=9812 loops=1)
                -> Nested loop inner join  (cost=102614..102620 rows=1.26 height=1) (actual time=545..951 rows=843 loops=1)
                    -> Nested loop inner join  (cost=102597..102609 rows=3.14 height=1) (actual time=545..757 rows=117172 loops=1)
                        -> Inner hash join (kt.id = t.kind_id)  (optimistic hash join, o_level=0.8, o_func=LINEAR, went_on_disk=false) (fill_ratio=1.14441e-05)  (cost=102593..102594 rows=1.7 height=1) (actual time=545..548 rows=5774 loops=1)
                            -> Sort: t.title  (cost=102586..102586 rows=8.49 height=1) (actual time=544..547 rows=6447 loops=1)
                                -> Nested loop inner join  (cost=12179..102582 rows=8.49 height=1) (actual time=1.15..540 rows=6447 loops=1)
                                    -> Inner hash join (it2.id = mi_idx.info_type_id) (fill_ratio=5.72205e-06)  (cost=4123..102468 rows=25.5 height=1) (actual time=1.06..433 rows=43896 loops=1)
                                        -> Nested loop inner join  (cost=409..102316 rows=255 height=1) (actual time=1.03..421 rows=129382 loops=1)
                                            -> Inner hash join (cct2.id = cc.status_id) (fill_ratio=6.67572e-06)  (cost=78.1..96567 rows=1354 height=1) (actual time=1.01..55 rows=68062 loops=1)
                                                -> Inner hash join (cct1.id = cc.subject_id) (fill_ratio=4.76837e-06)  (cost=10.3..93570 rows=13536 height=1) (actual time=1..45.5 rows=85941 loops=1)
                                                    -> Table scan on cc  (cost=0.47..63625 rows=135359 height=1) (actual time=0.997..31.6 rows=135086 loops=1)
                                                    -> Hash
                                                        -> Filter: (cct1.kind = 'cast')  (cost=2.77..2.77 rows=0.4 height=1) (actual time=0.00273..0.00366 rows=1 loops=1)
                                                            -> Table scan on cct1  (cost=0.636..2.54 rows=4 height=1) (actual time=0.00245..0.00314 rows=4 loops=1)
                                                -> Hash
                                                    -> Filter: (cct2.kind = 'complete')  (cost=2.77..2.77 rows=0.4 height=1) (actual time=0.00364..0.00431 rows=1 loops=1)
                                                        -> Table scan on cct2  (cost=0.636..2.54 rows=4 height=1) (actual time=0.0031..0.00371 rows=4 loops=1)
                                            -> Filter: (mi_idx.info < '8.5')  (cost=4.25..4.25 rows=0.188 height=1) (actual time=0.00258..0.00524 rows=1.9 loops=68062)
                                                -> Index lookup on mi_idx using movie_id_movie_info_idx (movie_id = cc.movie_id)  (cost=4.21..4.21 rows=0.564 height=1) (actual time=0.00248..0.00503 rows=1.96 loops=68062)
                                        -> Hash
                                            -> Filter: (it2.info = 'rating')  (cost=6.94..78.4 rows=11.3 height=1) (actual time=0.0262..0.0279 rows=1 loops=1)
                                                -> Table scan on it2  (cost=0.636..71.9 rows=113 height=1) (actual time=0.00627..0.0225 rows=113 loops=1)
                                    -> Filter: (t.production_year > 2005)  (cost=4.5..4.5 rows=0.333 height=1) (actual time=0.00233..0.00234 rows=0.147 loops=43896)
                                        -> Single-row index lookup on t using PRIMARY (id = cc.movie_id)  (cost=4.44..4.44 rows=1 height=1) (actual time=0.0022..0.00222 rows=1 loops=43896)
                            -> Hash
                                -> Filter: (kt.kind in ('movie','episode'))  (cost=2.73..3.82 rows=1.4 height=1) (actual time=0.0189..0.0222 rows=2 loops=1)
                                    -> Table scan on kt  (cost=0.488..3.42 rows=7 height=1) (actual time=0.0168..0.0195 rows=7 loops=1)
                        -> Index lookup on mk using movie_id_movie_keyword (movie_id = cc.movie_id)  (cost=4.92..9.11 rows=1.85 height=1) (actual time=0.00437..0.0355 rows=20.3 loops=5774)
                    -> Filter: (k.keyword in ('murder','murder-in-title','blood','violence'))  (cost=3.32..3.32 rows=0.4 height=1) (actual time=0.00158..0.00158 rows=0.00719 loops=117172)
                        -> Single-row index lookup on k using PRIMARY (id = mk.keyword_id)  (cost=3.27..3.27 rows=1 height=1) (actual time=0.0014..0.00141 rows=1 loops=117172)
                -> Inner hash join (mc.movie_id = mi.movie_id) (fill_ratio=0.1969)  (cost=35.4..35.4 rows=128e-9 height=1) (actual time=0.199..0.27 rows=11.6 loops=843)
                    -> Filter: (mi.info in ('Sweden','Norway','Germany','Denmark','Swedish','Danish','Norwegian','German','USA','American'))  (cost=9.53..28.6 rows=3 height=1) (actual time=0.204..0.302 rows=1.04 loops=608)
                        -> Index lookup on mi using movie_id_movie_info (movie_id = mk.movie_id)  (cost=4.71..28.2 rows=6 height=1) (actual time=0.00475..0.278 rows=152 loops=608)
                    -> Hash
                        -> Filter: ((mc.note like '%(200%)%') and (not((mc.note like '%(USA)%'))))  (cost=6.08..6.08 rows=0.104 height=1) (actual time=0.0151..0.0488 rows=10.1 loops=843)
                            -> Index lookup on mc using movie_id_movie_companies (movie_id = t.id)  (cost=5.71..6.01 rows=1.05 height=1) (actual time=0.00442..0.0412 rows=21.8 loops=843)
            -> Filter: (cn.country_code <> '[us]')  (cost=3.68..3.68 rows=0.9 height=1) (actual time=0.00183..0.00187 rows=0.962 loops=9812)
                -> Single-row index lookup on cn using PRIMARY (id = mc.company_id)  (cost=3.62..3.62 rows=1 height=1) (actual time=0.00171..0.00173 rows=1 loops=9812)
        -> Single-row index lookup on ct using PRIMARY (id = mc.company_type_id)  (cost=2.25..2.25 rows=1 height=1) (actual time=83.3e-6..97.2e-6 rows=1 loops=9438)
    -> Filter: (it1.info = 'countries')  (cost=2.3..2.3 rows=0.1 height=1) (actual time=258e-6..298e-6 rows=0.886 loops=9438)
        -> Single-row index lookup on it1 using PRIMARY (id = mi.info_type_id)  (cost=2.25..2.25 rows=1 height=1) (actual time=100e-6..114e-6 rows=1 loops=9438)
