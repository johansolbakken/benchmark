Executing: ../mysql-server-build/build-release/bin/mysql -uroot --local-infile=1 --port=13000 --host=127.0.0.1 imdbload with input size: 1525 bytes
EXPLAIN
-> Nested loop inner join  (cost=152150..152150 rows=130e-9 height=1) (actual time=364..772 rows=4792 loops=1)
    -> Nested loop inner join  (cost=152148..152148 rows=1.3e-6 height=1) (actual time=364..770 rows=5284 loops=1)
        -> Nested loop inner join  (cost=152146..152146 rows=1.3e-6 height=1) (actual time=364..769 rows=5284 loops=1)
            -> Nested loop inner join  (cost=152142..152142 rows=1.45e-6 height=1) (actual time=364..758 rows=5436 loops=1)
                -> Nested loop inner join  (cost=151513..151741 rows=11.3 height=1) (actual time=363..615 rows=459 loops=1)
                    -> Nested loop inner join  (cost=151496..151648 rows=28.3 height=1) (actual time=363..497 rows=71837 loops=1)
                        -> Inner hash join (kt.id = t.kind_id)  (optimistic hash join, o_level=0.8, o_func=LINEAR, went_on_disk=false) (fill_ratio=1.14441e-05)  (cost=151492..151508 rows=15.3 height=1) (actual time=363..366 rows=5581 loops=1)
                            -> Sort: t.title  (cost=151484..151484 rows=76.4 height=1) (actual time=363..365 rows=6249 loops=1)
                                -> Nested loop inner join  (cost=2088..151443 rows=76.4 height=1) (actual time=24.5..358 rows=6249 loops=1)
                                    -> Inner hash join (it2.id = mi_idx.info_type_id) (fill_ratio=5.72205e-06)  (cost=763..150412 rows=229 height=1) (actual time=24.5..291 rows=26861 loops=1)
                                        -> Nested loop inner join  (cost=76.9..149810 rows=2291 height=1) (actual time=24.4..283 rows=79324 loops=1)
                                            -> Inner hash join (cct2.id = cc.status_id) (fill_ratio=1.62125e-05)  (cost=19.6..98069 rows=12182 height=1) (actual time=24.4..49.6 rows=42432 loops=1)
                                                -> Inner hash join (cct1.id = cc.subject_id) (fill_ratio=4.76837e-06)  (cost=10.3..93570 rows=13536 height=1) (actual time=24.4..43.7 rows=49145 loops=1)
                                                    -> Table scan on cc  (cost=0.47..63625 rows=135359 height=1) (actual time=1.12..31.5 rows=135086 loops=1)
                                                    -> Hash
                                                        -> Filter: (cct1.kind = 'crew')  (cost=2.77..2.77 rows=0.4 height=1) (actual time=0.00483..0.00581 rows=1 loops=1)
                                                            -> Table scan on cct1  (cost=0.636..2.54 rows=4 height=1) (actual time=0.00385..0.00488 rows=4 loops=1)
                                                -> Hash
                                                    -> Filter: (cct2.kind <> 'complete+verified')  (cost=0.771..2.77 rows=3.6 height=1) (actual time=0.00307..0.00421 rows=3 loops=1)
                                                        -> Table scan on cct2  (cost=0.636..2.54 rows=4 height=1) (actual time=0.00284..0.00349 rows=4 loops=1)
                                            -> Filter: (mi_idx.info < '8.5')  (cost=4.25..4.25 rows=0.188 height=1) (actual time=0.00265..0.00535 rows=1.87 loops=42432)
                                                -> Index lookup on mi_idx using movie_id_movie_info_idx (movie_id = cc.movie_id)  (cost=4.21..4.21 rows=0.564 height=1) (actual time=0.00255..0.00512 rows=1.93 loops=42432)
                                        -> Hash
                                            -> Filter: (it2.info = 'rating')  (cost=6.94..78.4 rows=11.3 height=1) (actual time=0.0281..0.0299 rows=1 loops=1)
                                                -> Table scan on it2  (cost=0.636..71.9 rows=113 height=1) (actual time=0.00749..0.0237 rows=113 loops=1)
                                    -> Filter: (t.production_year > 2000)  (cost=4.5..4.5 rows=0.333 height=1) (actual time=0.00239..0.0024 rows=0.233 loops=26861)
                                        -> Single-row index lookup on t using PRIMARY (id = cc.movie_id)  (cost=4.44..4.44 rows=1 height=1) (actual time=0.00225..0.00227 rows=1 loops=26861)
                            -> Hash
                                -> Filter: (kt.kind in ('movie','episode'))  (cost=2.73..3.82 rows=1.4 height=1) (actual time=0.0218..0.0252 rows=2 loops=1)
                                    -> Table scan on kt  (cost=0.488..3.42 rows=7 height=1) (actual time=0.0197..0.0223 rows=7 loops=1)
                        -> Index lookup on mk using movie_id_movie_keyword (movie_id = cc.movie_id)  (cost=4.92..9.11 rows=1.85 height=1) (actual time=0.00394..0.023 rows=12.9 loops=5581)
                    -> Filter: (k.keyword in ('murder','murder-in-title','blood','violence'))  (cost=3.32..3.32 rows=0.4 height=1) (actual time=0.00158..0.00158 rows=0.00639 loops=71837)
                        -> Single-row index lookup on k using PRIMARY (id = mk.keyword_id)  (cost=3.27..3.27 rows=1 height=1) (actual time=0.00139..0.00141 rows=1 loops=71837)
                -> Inner hash join (mc.movie_id = mi.movie_id) (fill_ratio=0.104039)  (cost=35.4..35.4 rows=128e-9 height=1) (actual time=0.238..0.311 rows=11.8 loops=459)
                    -> Filter: (mi.info in ('Sweden','Norway','Germany','Denmark','Swedish','Danish','Norwegian','German','USA','American'))  (cost=9.53..28.6 rows=3 height=1) (actual time=0.249..0.343 rows=1.05 loops=352)
                        -> Index lookup on mi using movie_id_movie_info (movie_id = mk.movie_id)  (cost=4.71..28.2 rows=6 height=1) (actual time=0.00484..0.316 rows=173 loops=352)
                    -> Hash
                        -> Filter: ((mc.note like '%(200%)%') and (not((mc.note like '%(USA)%'))))  (cost=6.08..6.08 rows=0.104 height=1) (actual time=0.00972..0.0438 rows=9.83 loops=459)
                            -> Index lookup on mc using movie_id_movie_companies (movie_id = t.id)  (cost=5.71..6.01 rows=1.05 height=1) (actual time=0.00449..0.0369 rows=19.3 loops=459)
            -> Filter: (cn.country_code <> '[us]')  (cost=3.68..3.68 rows=0.9 height=1) (actual time=0.00187..0.00191 rows=0.972 loops=5436)
                -> Single-row index lookup on cn using PRIMARY (id = mc.company_id)  (cost=3.62..3.62 rows=1 height=1) (actual time=0.00174..0.00176 rows=1 loops=5436)
        -> Single-row index lookup on ct using PRIMARY (id = mc.company_type_id)  (cost=2.25..2.25 rows=1 height=1) (actual time=85.7e-6..99.7e-6 rows=1 loops=5284)
    -> Filter: (it1.info = 'countries')  (cost=2.3..2.3 rows=0.1 height=1) (actual time=269e-6..309e-6 rows=0.907 loops=5284)
        -> Single-row index lookup on it1 using PRIMARY (id = mi.info_type_id)  (cost=2.25..2.25 rows=1 height=1) (actual time=110e-6..124e-6 rows=1 loops=5284)
