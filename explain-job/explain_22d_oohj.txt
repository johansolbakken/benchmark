Executing: ../mysql-server-build/build-release/bin/mysql -uroot --local-infile=1 --port=13000 --host=127.0.0.1 imdbload with input size: 1132 bytes
EXPLAIN
-> Inner hash join (ct.id = mc.company_type_id)  (optimistic hash join, o_level=0.8, o_func=LINEAR, went_on_disk=false) (fill_ratio=4.95911e-05)  (cost=714560..824725 rows=643 height=1) (actual time=1946..7325 rows=46634 loops=1)
    -> Nested loop inner join  (cost=714551..824494 rows=643 height=1) (actual time=1946..7317 rows=46634 loops=1)
        -> Nested loop inner join  (cost=714530..821862 rows=715 height=1) (actual time=1946..7188 rows=64289 loops=1)
            -> Nested loop inner join  (cost=714532..817782 rows=679 height=1) (actual time=1946..7052 rows=4069 loops=1)
                -> Nested loop inner join  (cost=714438..812141 rows=1697 height=1) (actual time=1939..6286 rows=452415 loops=1)
                    -> Inner hash join (it1.id = mi.info_type_id)  (optimistic hash join, o_level=0.8, o_func=LINEAR, went_on_disk=false) (fill_ratio=7.15256e-06)  (cost=714478..803786 rows=917 height=1) (actual time=1938..5429 rows=43372 loops=1)
                        -> Nested loop inner join  (cost=714294..801662 rows=9168 height=1) (actual time=1938..5418 rows=49683 loops=1)
                            -> Sort: t.title  (cost=714285..714285 rows=3058 height=1) (actual time=1938..1975 rows=104030 loops=1)
                                -> Inner hash join (kt.id = t.kind_id) (fill_ratio=1.14441e-05)  (cost=239..712085 rows=3058 height=1) (actual time=0.081..1859 rows=104030 loops=1)
                                    -> Nested loop inner join  (cost=46.3..708486 rows=15291 height=1) (actual time=0.0542..1842 rows=136728 loops=1)
                                        -> Nested loop inner join  (cost=10.9..502179 rows=45879 height=1) (actual time=0.0462..892 rows=454230 loops=1)
                                            -> Filter: (it2.info = 'rating')  (cost=6.94..78.4 rows=11.3 height=1) (actual time=0.0289..0.0347 rows=1 loops=1)
                                                -> Table scan on it2  (cost=0.636..71.9 rows=113 height=1) (actual time=0.00438..0.028 rows=113 loops=1)
                                            -> Filter: (mi_idx.info < '8.5')  (cost=10.9..44434 rows=4060 height=1) (actual time=0.0169..875 rows=454230 loops=1)
                                                -> Index lookup on mi_idx using info_type_id_movie_info_idx (info_type_id = it2.id)  (cost=3.59..43732 rows=12181 height=1) (actual time=0.0162..827 rows=459925 loops=1)
                                        -> Filter: (t.production_year > 2005)  (cost=4.5..4.5 rows=0.333 height=1) (actual time=0.00201..0.00202 rows=0.301 loops=454230)
                                            -> Single-row index lookup on t using PRIMARY (id = mi_idx.movie_id)  (cost=4.44..4.44 rows=1 height=1) (actual time=0.00189..0.0019 rows=1 loops=454230)
                                    -> Hash
                                        -> Filter: (kt.kind in ('movie','episode'))  (cost=2.73..3.82 rows=1.4 height=1) (actual time=0.00329..0.00477 rows=2 loops=1)
                                            -> Table scan on kt  (cost=0.488..3.42 rows=7 height=1) (actual time=0.00264..0.00352 rows=7 loops=1)
                            -> Filter: (mi.info in ('Sweden','Norway','Germany','Denmark','Swedish','Danish','Norwegian','German','USA','American'))  (cost=9.53..28.6 rows=3 height=1) (actual time=0.0229..0.033 rows=0.478 loops=104030)
                                -> Index lookup on mi using movie_id_movie_info (movie_id = t.id)  (cost=4.71..28.2 rows=6 height=1) (actual time=0.00398..0.0304 rows=14.5 loops=104030)
                        -> Hash
                            -> Filter: (it1.info = 'countries')  (cost=6.94..78.4 rows=11.3 height=1) (actual time=0.00804..0.0289 rows=1 loops=1)
                                -> Table scan on it1  (cost=0.636..71.9 rows=113 height=1) (actual time=0.00589..0.0224 rows=113 loops=1)
                    -> Index lookup on mk using movie_id_movie_keyword (movie_id = mi.movie_id)  (cost=4.92..9.11 rows=1.85 height=1) (actual time=0.00415..0.0193 rows=10.4 loops=43372)
                -> Filter: (k.keyword in ('murder','murder-in-title','blood','violence'))  (cost=3.32..3.32 rows=0.4 height=1) (actual time=0.00162..0.00162 rows=0.00899 loops=452415)
                    -> Single-row index lookup on k using PRIMARY (id = mk.keyword_id)  (cost=3.27..3.27 rows=1 height=1) (actual time=0.00143..0.00144 rows=1 loops=452415)
            -> Index lookup on mc using movie_id_movie_companies (movie_id = mi.movie_id)  (cost=5.71..6.01 rows=1.05 height=1) (actual time=0.00413..0.0326 rows=15.8 loops=4069)
        -> Filter: (cn.country_code <> '[us]')  (cost=3.68..3.68 rows=0.9 height=1) (actual time=0.00188..0.00192 rows=0.725 loops=64289)
            -> Single-row index lookup on cn using PRIMARY (id = mc.company_id)  (cost=3.62..3.62 rows=1 height=1) (actual time=0.00173..0.00175 rows=1 loops=64289)
    -> Hash
        -> Table scan on ct  (cost=0.636..2.54 rows=4 height=1) (actual time=0.0149..0.0172 rows=4 loops=1)
