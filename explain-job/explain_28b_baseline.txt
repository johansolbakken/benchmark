Executing: ../mysql-server-build/build-release/bin/mysql -uroot --local-infile=1 --port=13000 --host=127.0.0.1 imdbload with input size: 1442 bytes
EXPLAIN
-> Nested loop inner join  (cost=152249..152249 rows=104e-9 height=1) (actual time=317..472 rows=148 loops=1)
    -> Nested loop inner join  (cost=152247..152247 rows=104e-9 height=1) (actual time=317..472 rows=148 loops=1)
        -> Nested loop inner join  (cost=151536..151749 rows=11.3 height=1) (actual time=317..420 rows=176 loops=1)
            -> Nested loop inner join  (cost=151520..151655 rows=28.3 height=1) (actual time=317..372 rows=28408 loops=1)
                -> Sort: t.title  (cost=151516..151516 rows=15.3 height=1) (actual time=317..318 rows=3135 loops=1)
                    -> Inner hash join (kt.id = t.kind_id) (fill_ratio=1.14441e-05)  (cost=151492..151508 rows=15.3 height=1) (actual time=314..315 rows=3135 loops=1)
                        -> Sort: t.title  (cost=151484..151484 rows=76.4 height=1) (actual time=314..315 rows=3240 loops=1)
                            -> Nested loop inner join  (cost=2088..151443 rows=76.4 height=1) (actual time=23.9..312 rows=3240 loops=1)
                                -> Inner hash join (it2.id = mi_idx.info_type_id) (fill_ratio=5.72205e-06)  (cost=763..150412 rows=229 height=1) (actual time=23.9..275 rows=14835 loops=1)
                                    -> Nested loop inner join  (cost=76.9..149810 rows=2291 height=1) (actual time=23.9..273 rows=20874 loops=1)
                                        -> Inner hash join (cct2.id = cc.status_id) (fill_ratio=1.62125e-05)  (cost=19.6..98069 rows=12182 height=1) (actual time=23.8..47.3 rows=42432 loops=1)
                                            -> Inner hash join (cct1.id = cc.subject_id) (fill_ratio=4.76837e-06)  (cost=10.3..93570 rows=13536 height=1) (actual time=23.8..41.8 rows=49145 loops=1)
                                                -> Table scan on cc  (cost=0.47..63625 rows=135359 height=1) (actual time=1.02..31.2 rows=135086 loops=1)
                                                -> Hash
                                                    -> Filter: (cct1.kind = 'crew')  (cost=2.77..2.77 rows=0.4 height=1) (actual time=0.00287..0.0036 rows=1 loops=1)
                                                        -> Table scan on cct1  (cost=0.636..2.54 rows=4 height=1) (actual time=0.00237..0.00304 rows=4 loops=1)
                                            -> Hash
                                                -> Filter: (cct2.kind <> 'complete+verified')  (cost=0.771..2.77 rows=3.6 height=1) (actual time=0.00304..0.00426 rows=3 loops=1)
                                                    -> Table scan on cct2  (cost=0.636..2.54 rows=4 height=1) (actual time=0.00282..0.0035 rows=4 loops=1)
                                        -> Filter: (mi_idx.info > '6.5')  (cost=4.25..4.25 rows=0.188 height=1) (actual time=0.00477..0.00522 rows=0.492 loops=42432)
                                            -> Index lookup on mi_idx using movie_id_movie_info_idx (movie_id = cc.movie_id)  (cost=4.21..4.21 rows=0.564 height=1) (actual time=0.00248..0.00499 rows=1.93 loops=42432)
                                    -> Hash
                                        -> Filter: (it2.info = 'rating')  (cost=6.94..78.4 rows=11.3 height=1) (actual time=0.0261..0.0279 rows=1 loops=1)
                                            -> Table scan on it2  (cost=0.636..71.9 rows=113 height=1) (actual time=0.00618..0.0223 rows=113 loops=1)
                                -> Filter: (t.production_year > 2005)  (cost=4.5..4.5 rows=0.333 height=1) (actual time=0.00237..0.00238 rows=0.218 loops=14835)
                                    -> Single-row index lookup on t using PRIMARY (id = cc.movie_id)  (cost=4.44..4.44 rows=1 height=1) (actual time=0.00224..0.00226 rows=1 loops=14835)
                        -> Hash
                            -> Filter: (kt.kind in ('movie','episode'))  (cost=2.73..3.82 rows=1.4 height=1) (actual time=0.0184..0.0217 rows=2 loops=1)
                                -> Table scan on kt  (cost=0.488..3.42 rows=7 height=1) (actual time=0.0163..0.019 rows=7 loops=1)
                -> Index lookup on mk using movie_id_movie_keyword (movie_id = cc.movie_id)  (cost=4.92..9.11 rows=1.85 height=1) (actual time=0.00397..0.0169 rows=9.06 loops=3135)
            -> Filter: (k.keyword in ('murder','murder-in-title','blood','violence'))  (cost=3.32..3.32 rows=0.4 height=1) (actual time=0.00161..0.00161 rows=0.0062 loops=28408)
                -> Single-row index lookup on k using PRIMARY (id = mk.keyword_id)  (cost=3.27..3.27 rows=1 height=1) (actual time=0.00142..0.00143 rows=1 loops=28408)
        -> Inner hash join (mc.movie_id = mi.movie_id) (fill_ratio=0.0858583)  (cost=44..44 rows=9.2e-9 height=1) (actual time=0.287..0.295 rows=0.841 loops=176)
            -> Nested loop inner join  (cost=34.1..34.1 rows=0.24 height=1) (actual time=0.351..0.365 rows=0.0901 loops=111)
                -> Filter: (mi.info in ('Sweden','Germany','Swedish','German'))  (cost=11.9..28.6 rows=2.4 height=1) (actual time=0.351..0.364 rows=0.0991 loops=111)
                    -> Index lookup on mi using movie_id_movie_info (movie_id = mk.movie_id)  (cost=4.71..28.2 rows=6 height=1) (actual time=0.00513..0.338 rows=187 loops=111)
                -> Filter: (it1.info = 'countries')  (cost=2.3..2.3 rows=0.1 height=1) (actual time=0.00229..0.00234 rows=0.909 loops=11)
                    -> Single-row index lookup on it1 using PRIMARY (id = mi.info_type_id)  (cost=2.25..2.25 rows=1 height=1) (actual time=0.00199..0.002 rows=1 loops=11)
            -> Hash
                -> Nested loop inner join  (cost=9.76..9.76 rows=0.0936 height=1) (actual time=0.0154..0.0624 rows=7.84 loops=176)
                    -> Filter: ((mc.note like '%(200%)%') and (not((mc.note like '%(USA)%'))))  (cost=6.08..6.08 rows=0.104 height=1) (actual time=0.0137..0.046 rows=8.03 loops=176)
                        -> Index lookup on mc using movie_id_movie_companies (movie_id = t.id)  (cost=5.71..6.01 rows=1.05 height=1) (actual time=0.0046..0.0389 rows=19.5 loops=176)
                    -> Filter: (cn.country_code <> '[us]')  (cost=3.68..3.68 rows=0.9 height=1) (actual time=0.00189..0.00194 rows=0.976 loops=1413)
                        -> Single-row index lookup on cn using PRIMARY (id = mc.company_id)  (cost=3.62..3.62 rows=1 height=1) (actual time=0.00175..0.00177 rows=1 loops=1413)
    -> Single-row index lookup on ct using PRIMARY (id = mc.company_type_id)  (cost=2.25..2.25 rows=1 height=1) (actual time=97.9e-6..112e-6 rows=1 loops=148)
