Executing: ../mysql-server-build/build-release/bin/mysql -uroot --local-infile=1 --port=13000 --host=127.0.0.1 imdbload with input size: 952 bytes
EXPLAIN
-> Nested loop inner join  (cost=1.29e+6..1.3e+6 rows=208 height=1) (actual time=1783..1783 rows=0 loops=1)
    -> Sort: ci.id  (cost=1.29e+6..1.29e+6 rows=2076 height=1) (actual time=1783..1783 rows=6 loops=1)
        -> Nested loop inner join  (cost=715..1.29e+6 rows=2076 height=1) (actual time=1717..1783 rows=6 loops=1)
            -> Nested loop inner join  (cost=4574..1.27e+6 rows=283 height=1) (actual time=1716..1782 rows=9 loops=1)
                -> Nested loop inner join  (cost=2331..1.27e+6 rows=566 height=1) (actual time=662..1782 rows=74 loops=1)
                    -> Inner hash join (it1.id = mi.info_type_id) (fill_ratio=5.72205e-06)  (cost=4225..1.26e+6 rows=306 height=1) (actual time=662..1782 rows=10 loops=1)
                        -> Nested loop inner join  (cost=413..1.26e+6 rows=3056 height=1) (actual time=662..1782 rows=10 loops=1)
                            -> Nested loop inner join  (cost=219..1.12e+6 rows=5097 height=1) (actual time=72.5..1781 rows=16 loops=1)
                                -> Nested loop inner join  (cost=3.59..494249 rows=137651 height=1) (actual time=0.0471..832 rows=459925 loops=1)
                                    -> Filter: (it2.info = 'votes')  (cost=6.94..78.4 rows=11.3 height=1) (actual time=0.03..0.0359 rows=1 loops=1)
                                        -> Table scan on it2  (cost=0.636..71.9 rows=113 height=1) (actual time=0.00515..0.0291 rows=113 loops=1)
                                    -> Index lookup on mi_idx using info_type_id_movie_info_idx (info_type_id = it2.id)  (cost=3.59..43732 rows=12181 height=1) (actual time=0.0166..817 rows=459925 loops=1)
                                -> Filter: ((t.production_year > 2010) and (t.title like 'Vampire%'))  (cost=4.52..4.52 rows=0.037 height=1) (actual time=0.002..0.002 rows=34.8e-6 loops=459925)
                                    -> Single-row index lookup on t using PRIMARY (id = mi_idx.movie_id)  (cost=4.44..4.44 rows=1 height=1) (actual time=0.00185..0.00187 rows=1 loops=459925)
                            -> Filter: (mi.info = 'Horror')  (cost=28.6..28.6 rows=0.6 height=1) (actual time=0.0228..0.0338 rows=0.625 loops=16)
                                -> Index lookup on mi using movie_id_movie_info (movie_id = t.id)  (cost=4.71..28.2 rows=6 height=1) (actual time=0.00619..0.0324 rows=12.8 loops=16)
                        -> Hash
                            -> Filter: (it1.info = 'genres')  (cost=6.94..78.4 rows=11.3 height=1) (actual time=0.0188..0.0422 rows=1 loops=1)
                                -> Table scan on it1  (cost=0.636..71.9 rows=113 height=1) (actual time=0.0169..0.0357 rows=113 loops=1)
                    -> Index lookup on mk using movie_id_movie_keyword (movie_id = t.id)  (cost=4.92..9.11 rows=1.85 height=1) (actual time=0.00684..0.0165 rows=7.4 loops=10)
                -> Filter: (k.keyword in ('murder','blood','gore','death','female-nudity'))  (cost=3.32..3.32 rows=0.5 height=1) (actual time=0.00205..0.00206 rows=0.122 loops=74)
                    -> Single-row index lookup on k using PRIMARY (id = mk.keyword_id)  (cost=3.27..3.27 rows=1 height=1) (actual time=0.00181..0.00182 rows=1 loops=74)
            -> Filter: (ci.note in ('(writer)','(head writer)','(written by)','(story)','(story editor)'))  (cost=9.4..69 rows=7.34 height=1) (actual time=0.0525..0.0623 rows=0.667 loops=9)
                -> Index lookup on ci using movie_id_cast_info (movie_id = mi.movie_id)  (cost=4.64..68.2 rows=14.7 height=1) (actual time=0.00525..0.0588 rows=21.4 loops=9)
    -> Filter: (n.gender = 'm')  (cost=4.2..4.2 rows=0.1 height=1) (actual time=0.00224..0.00224 rows=0 loops=6)
        -> Single-row index lookup on n using PRIMARY (id = ci.person_id)  (cost=4.14..4.14 rows=1 height=1) (actual time=0.00206..0.00207 rows=1 loops=6)
