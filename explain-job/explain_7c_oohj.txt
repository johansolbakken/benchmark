Executing: ../mysql-server-build/build-release/bin/mysql -uroot --local-infile=1 --port=13000 --host=127.0.0.1 imdbload with input size: 889 bytes
EXPLAIN
-> Nested loop inner join  (cost=232818..232818 rows=0.589 height=1) (actual time=8762..9386 rows=472 loops=1)
    -> Nested loop inner join  (cost=229675..232805 rows=5.89 height=1) (actual time=8762..9364 rows=48237 loops=1)
        -> Nested loop inner join  (cost=229379..232752 rows=10.8 height=1) (actual time=8762..9276 rows=906 loops=1)
            -> Sort: ci.id  (cost=229035..229035 rows=884 height=1) (actual time=8762..8984 rows=647438 loops=1)
                -> Nested loop inner join  (cost=282..228450 rows=884 height=1) (actual time=0.488..8209 rows=647438 loops=1)
                    -> Nested loop inner join  (cost=31.8..168832 rows=19802 height=1) (actual time=0.458..3081 rows=1.08e+6 loops=1)
                        -> Nested loop inner join  (cost=80.2..76877 rows=1349 height=1) (actual time=0.445..91.3 rows=13921 loops=1)
                            -> Inner hash join (lt.id = ml.link_type_id) (fill_ratio=3.14713e-05)  (cost=25.1..22269 rows=12144 height=1) (actual time=0.432..14.8 rows=21505 loops=1)
                                -> Table scan on ml  (cost=0.47..14271 rows=30360 height=1) (actual time=0.413..8.62 rows=29997 loops=1)
                                -> Hash
                                    -> Filter: (lt.link in ('references','referenced in','features','featured in'))  (cost=1.73..12.5 rows=7.2 height=1) (actual time=0.00844..0.0126 rows=4 loops=1)
                                        -> Table scan on lt  (cost=0.636..11.4 rows=18 height=1) (actual time=0.0058..0.00869 rows=18 loops=1)
                            -> Filter: (t.production_year between 1980 and 2010)  (cost=4.5..4.5 rows=0.111 height=1) (actual time=0.00342..0.00346 rows=0.647 loops=21505)
                                -> Single-row index lookup on t using PRIMARY (id = ml.linked_movie_id)  (cost=4.44..4.44 rows=1 height=1) (actual time=0.00327..0.00329 rows=1 loops=21505)
                        -> Index lookup on ci using movie_id_cast_info (movie_id = ml.linked_movie_id)  (cost=4.64..68.2 rows=14.7 height=1) (actual time=0.00548..0.212 rows=77.6 loops=13921)
                    -> Filter: ((an.`name` like '%a%') or (an.`name` like 'A%'))  (cost=3.01..3.01 rows=0.0447 height=1) (actual time=0.0036..0.00466 rows=0.599 loops=1.08e+6)
                        -> Index lookup on an using person_id_aka_name (person_id = ci.person_id)  (cost=3..3 rows=0.213 height=1) (actual time=0.00282..0.00439 rows=1.2 loops=1.08e+6)
            -> Filter: ((n.name_pcode_cf between 'A' and 'F') and ((n.gender = 'm') or ((n.`name` like 'A%') and (n.gender = 'f'))))  (cost=4.2..4.2 rows=0.0122 height=1) (actual time=397e-6..397e-6 rows=0.0014 loops=647438)
                -> Single-row index lookup on n using PRIMARY (id = ci.person_id)  (cost=4.14..4.14 rows=1 height=1) (actual time=236e-6..250e-6 rows=1 loops=647438)
        -> Filter: (pi.note is not null)  (cost=4.89..4.89 rows=0.545 height=1) (actual time=0.00312..0.0947 rows=53.2 loops=906)
            -> Index lookup on pi using person_id_person_info (person_id = ci.person_id)  (cost=4.85..4.85 rows=0.606 height=1) (actual time=0.00303..0.0922 rows=53.2 loops=906)
    -> Filter: (it.info = 'mini biography')  (cost=2.3..2.3 rows=0.1 height=1) (actual time=398e-6..398e-6 rows=0.00979 loops=48237)
        -> Single-row index lookup on it using PRIMARY (id = pi.info_type_id)  (cost=2.25..2.25 rows=1 height=1) (actual time=248e-6..262e-6 rows=1 loops=48237)
