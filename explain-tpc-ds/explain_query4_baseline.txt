Executing: ../mysql-server-build/build-release/bin/mysql -uroot --local-infile=1 --port=13000 --host=127.0.0.1 tpcds_s10 with input size: 4368 bytes
EXPLAIN
-> Sort: t_s_secyear.customer_id, t_s_secyear.customer_first_name, t_s_secyear.customer_last_name, t_s_secyear.customer_email_address, limit input to 100 row(s) per chunk  (cost=554e+12..554e+12 rows=100 height=1) (actual time=595..595 rows=0 loops=1)
    -> Inner hash join (t_c_firstyear.customer_id = t_w_firstyear.customer_id), extra conditions: ((case when (t_c_firstyear.year_total > 0.000000) then (t_c_secyear.year_total / t_c_firstyear.year_total) else NULL end) > (case when (t_w_firstyear.year_total > 0.000000) then (t_w_secyear.year_total / t_w_firstyear.year_total) else NULL end)) (fill_ratio=0)  (cost=28e+6..200e+12 rows=1.02e+15 height=1) (actual time=595..595 rows=0 loops=1)
        -> Inner hash join (t_s_firstyear.customer_id = t_c_secyear.customer_id), extra conditions: ((case when (t_c_firstyear.year_total > 0.000000) then (t_c_secyear.year_total / t_c_firstyear.year_total) else NULL end) > (case when (t_s_firstyear.year_total > 0.000000) then (t_s_secyear.year_total / t_s_firstyear.year_total) else NULL end)) (fill_ratio=0)  (cost=18.1e+6..4.36e+9 rows=21.9e+9 height=1) (never executed)
            -> Inner hash join (t_c_firstyear.customer_id = t_c_secyear.customer_id) (fill_ratio=0)  (cost=13.6e+6..38e+6 rows=175e+6 height=1) (never executed)
                -> Inner hash join (t_s_secyear.customer_id = t_c_firstyear.customer_id) (fill_ratio=0)  (cost=9.02e+6..9.17e+6 rows=467589 height=1) (never executed)
                    -> Filter: ((t_s_secyear.dyear = <cache>((2001 + 1))) and (t_s_secyear.sale_type = 's'))  (cost=4.46e+6..4.55e+6 rows=3746 height=1) (never executed)
                        -> Table scan on t_s_secyear  (cost=4.44e+6..4.53e+6 rows=374554 height=1) (never executed)
                            -> Materialize union CTE year_total if needed (query plan printed elsewhere)  (cost=4.44e+6..4.44e+6 rows=374554 height=1) (never executed)
                    -> Hash
                        -> Filter: ((t_c_firstyear.dyear = 2001) and (t_c_firstyear.year_total > 0.000000) and (t_c_firstyear.sale_type = 'c'))  (cost=4.46e+6..4.55e+6 rows=1248 height=1) (never executed)
                            -> Table scan on t_c_firstyear  (cost=4.44e+6..4.53e+6 rows=374554 height=1) (never executed)
                                -> Materialize union CTE year_total if needed (query plan printed elsewhere)  (cost=4.44e+6..4.44e+6 rows=374554 height=1) (never executed)
                -> Hash
                    -> Filter: ((t_c_secyear.dyear = <cache>((2001 + 1))) and (t_c_secyear.sale_type = 'c'))  (cost=4.46e+6..4.55e+6 rows=3746 height=1) (never executed)
                        -> Table scan on t_c_secyear  (cost=4.44e+6..4.53e+6 rows=374554 height=1) (never executed)
                            -> Materialize union CTE year_total if needed (query plan printed elsewhere)  (cost=4.44e+6..4.44e+6 rows=374554 height=1) (never executed)
            -> Hash
                -> Filter: ((t_s_firstyear.dyear = 2001) and (t_s_firstyear.year_total > 0.000000) and (t_s_firstyear.sale_type = 's'))  (cost=4.46e+6..4.55e+6 rows=1248 height=1) (never executed)
                    -> Table scan on t_s_firstyear  (cost=4.44e+6..4.53e+6 rows=374554 height=1) (never executed)
                        -> Materialize union CTE year_total if needed (query plan printed elsewhere)  (cost=4.44e+6..4.44e+6 rows=374554 height=1) (never executed)
        -> Hash
            -> Inner hash join (t_w_firstyear.customer_id = t_w_secyear.customer_id) (fill_ratio=0)  (cost=9.02e+6..9.17e+6 rows=467589 height=1) (actual time=595..595 rows=0 loops=1)
                -> Filter: ((t_w_secyear.dyear = <cache>((2001 + 1))) and (t_w_secyear.sale_type = 'w'))  (cost=4.46e+6..4.55e+6 rows=3746 height=1) (actual time=595..595 rows=0 loops=1)
                    -> Table scan on t_w_secyear  (cost=4.44e+6..4.53e+6 rows=374554 height=1) (actual time=595..595 rows=0 loops=1)
                        -> Materialize union CTE year_total if needed  (cost=4.44e+6..4.44e+6 rows=374554 height=1) (actual time=595..595 rows=0 loops=1)
                            -> Group aggregate: sum(((((store_sales.ss_ext_list_price - store_sales.ss_ext_wholesale_cost) - store_sales.ss_ext_discount_amt) + store_sales.ss_ext_sales_price) / 2))  (cost=3.85e+6..4.3e+6 rows=374552 height=1) (actual time=595..595 rows=0 loops=1)
                                -> Sort: customer.c_customer_id, customer.c_first_name, customer.c_last_name, customer.c_preferred_cust_flag, customer.c_birth_country, customer.c_login, customer.c_email_address, date_dim.d_year  (cost=3.85e+6..3.85e+6 rows=1.56e+6 height=1) (actual time=595..595 rows=0 loops=1)
                                    -> Inner hash join (store_sales.ss_sold_date_sk = date_dim.d_date_sk) (fill_ratio=6.19888e-06)  (cost=64535..2.28e+6 rows=1.56e+6 height=1) (actual time=595..595 rows=0 loops=1)
                                        -> Inner hash join (customer.c_customer_sk = store_sales.ss_customer_sk) (fill_ratio=0.652119)  (cost=64532..1.74e+6 rows=1.56e+6 height=1) (actual time=11.9..592 rows=43838 loops=1)
                                            -> Table scan on store_sales  (cost=0.728..1.13e+6 rows=1.56e+6 height=1) (actual time=0.484..495 rows=1.3e+6 loops=1)
                                            -> Hash
                                                -> Table scan on customer  (cost=2.18..38283 rows=17526 height=1) (actual time=0.0617..6.96 rows=17666 loops=1)
                                        -> Hash
                                            -> Table scan on date_dim  (cost=0.857..0.857 rows=1 height=1) (actual time=0.0146..0.0163 rows=1 loops=1)
                            -> Group aggregate: sum(((((catalog_sales.cs_ext_list_price - catalog_sales.cs_ext_wholesale_cost) - catalog_sales.cs_ext_discount_amt) + catalog_sales.cs_ext_sales_price) / 2))  (cost=9.74..9.74 rows=1 height=1) (actual time=0.0334..0.0334 rows=0 loops=1)
                                -> Sort: customer.c_customer_id, customer.c_first_name, customer.c_last_name, customer.c_preferred_cust_flag, customer.c_birth_country, customer.c_login, customer.c_email_address, date_dim.d_year  (cost=9.24..9.24 rows=1 height=1) (actual time=0.033..0.033 rows=0 loops=1)
                                    -> Inner hash join (catalog_sales.cs_sold_date_sk = date_dim.d_date_sk) (fill_ratio=0)  (cost=8.9..8.9 rows=1 height=1) (actual time=0.0285..0.0285 rows=0 loops=1)
                                        -> Table scan on date_dim  (cost=0.857..0.857 rows=1 height=1) (actual time=0.00735..0.00735 rows=1 loops=1)
                                        -> Hash
                                            -> Nested loop inner join  (cost=6.2..6.2 rows=1 height=1) (actual time=0.0165..0.0165 rows=0 loops=1)
                                                -> Table scan on catalog_sales  (cost=0.839..0.839 rows=1 height=1) (actual time=0.00433..0.00492 rows=1 loops=1)
                                                -> Single-row index lookup on customer using PRIMARY (c_customer_sk = catalog_sales.cs_bill_customer_sk)  (cost=5.36..5.36 rows=1 height=1) (actual time=0.0112..0.0112 rows=0 loops=1)
                            -> Group aggregate: sum(((((web_sales.ws_ext_list_price - web_sales.ws_ext_wholesale_cost) - web_sales.ws_ext_discount_amt) + web_sales.ws_ext_sales_price) / 2))  (cost=9.74..9.74 rows=1 height=1) (actual time=0.0155..0.0155 rows=0 loops=1)
                                -> Sort: customer.c_customer_id, customer.c_first_name, customer.c_last_name, customer.c_preferred_cust_flag, customer.c_birth_country, customer.c_login, customer.c_email_address, date_dim.d_year  (cost=9.24..9.24 rows=1 height=1) (actual time=0.0151..0.0151 rows=0 loops=1)
                                    -> Inner hash join (web_sales.ws_sold_date_sk = date_dim.d_date_sk) (fill_ratio=0)  (cost=8.9..8.9 rows=1 height=1) (actual time=0.0137..0.0137 rows=0 loops=1)
                                        -> Table scan on date_dim  (cost=0.857..0.857 rows=1 height=1) (actual time=0.00302..0.00302 rows=1 loops=1)
                                        -> Hash
                                            -> Nested loop inner join  (cost=6.2..6.2 rows=1 height=1) (actual time=0.00868..0.00868 rows=0 loops=1)
                                                -> Table scan on web_sales  (cost=0.839..0.839 rows=1 height=1) (actual time=0.00405..0.00453 rows=1 loops=1)
                                                -> Single-row index lookup on customer using PRIMARY (c_customer_sk = web_sales.ws_bill_customer_sk)  (cost=5.36..5.36 rows=1 height=1) (actual time=0.00401..0.00401 rows=0 loops=1)
                -> Hash
                    -> Filter: ((t_w_firstyear.dyear = 2001) and (t_w_firstyear.year_total > 0.000000) and (t_w_firstyear.sale_type = 'w'))  (cost=4.46e+6..4.55e+6 rows=1248 height=1) (never executed)
                        -> Table scan on t_w_firstyear  (cost=4.44e+6..4.53e+6 rows=374554 height=1) (never executed)
                            -> Materialize union CTE year_total if needed (query plan printed elsewhere)  (cost=4.44e+6..4.44e+6 rows=374554 height=1) (never executed)
