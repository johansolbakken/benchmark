Executing: ../mysql-server-build/build-release/bin/mysql -uroot --local-infile=1 --port=13000 --host=127.0.0.1 tpcds_s10 with input size: 3798 bytes
EXPLAIN
-> Sort: `channel`, id, limit input to 100 row(s) per chunk  (cost=505023..505023 rows=3.28 height=1) (actual time=0.0472..0.0472 rows=1 loops=1)
    -> Stream results  (cost=505020..505021 rows=3.28 height=1) (actual time=0.0443..0.0445 rows=1 loops=1)
        -> Group aggregate with rollup: sum(x.sales), sum(x.`returns`), sum(x.profit)  (cost=505019..505020 rows=3.28 height=1) (actual time=0.0428..0.043 rows=1 loops=1)
            -> Sort: x.`channel`, x.id  (cost=505019..505019 rows=1.42 height=1) (actual time=0.0426..0.0426 rows=0 loops=1)
                -> Table scan on x  (cost=505018..505018 rows=1.42 height=1) (actual time=0.0419..0.0419 rows=0 loops=1)
                    -> Union all materialize  (cost=505018..505018 rows=1.42 height=1) (actual time=0.0418..0.0418 rows=0 loops=1)
                        -> Table scan on ssr  (cost=504963..504963 rows=1.41 height=1) (actual time=0.0287..0.0287 rows=0 loops=1)
                            -> Materialize CTE ssr  (cost=504962..504962 rows=1.41 height=1) (actual time=0.0284..0.0284 rows=0 loops=1)
                                -> Group aggregate: sum(ss.ss_ext_sales_price), sum(coalesce(sr.sr_return_amt,0)), sum((ss.ss_net_profit - coalesce(sr.sr_net_loss,0)))  (cost=499228..504959 rows=1.41 height=1) (actual time=0.0273..0.0273 rows=0 loops=1)
                                    -> Nested loop left join  (cost=485395..503410 rows=5423 height=1) (actual time=0.0267..0.0267 rows=0 loops=1)
                                        -> Sort: s.s_store_id  (cost=485392..485392 rows=5423 height=1) (actual time=0.0266..0.0266 rows=0 loops=1)
                                            -> Inner hash join (ss.ss_store_sk = s.s_store_sk) (fill_ratio=2.09808e-05)  (cost=132..481347 rows=5423 height=1) (actual time=0.0244..0.0244 rows=0 loops=1)
                                                -> Inner hash join (ss.ss_sold_date_sk = d.d_date_sk) (fill_ratio=0)  (cost=116..479457 rows=5423 height=1) (actual time=0.00808..0.00808 rows=0 loops=1)
                                                    -> Inner hash join (ss.ss_promo_sk = p.p_promo_sk) (fill_ratio=0)  (cost=35.7..468584 rows=48809 height=1) (never executed)
                                                        -> Nested loop inner join  (cost=0.739..360593 rows=488093 height=1) (never executed)
                                                            -> Filter: (i.i_current_price > 50.00)  (cost=16.6..1381 rows=83.3 height=1) (never executed)
                                                                -> Table scan on i  (cost=5.47..1366 rows=250 height=1) (never executed)
                                                            -> Index lookup on ss using PRIMARY (ss_item_sk = i.i_item_sk)  (cost=0.736..4311 rows=5858 height=1) (never executed)
                                                        -> Hash
                                                            -> Filter: (p.p_channel_tv = 'N')  (cost=22.2..24.5 rows=1.1 height=1) (never executed)
                                                                -> Table scan on p  (cost=2.17..23.8 rows=11 height=1) (never executed)
                                                    -> Hash
                                                        -> Filter: (d.d_date between <cache>(cast('1998-08-04' as date)) and <cache>((cast('1998-08-04' as date) + interval 30 day)))  (cost=0.915..0.915 rows=0.111 height=1) (actual time=0.00721..0.00721 rows=0 loops=1)
                                                            -> Table scan on d  (cost=0.857..0.857 rows=1 height=1) (actual time=0.00254..0.00292 rows=1 loops=1)
                                                -> Hash
                                                    -> Table scan on s  (cost=6.76..13.5 rows=2 height=1) (actual time=0.0105..0.0114 rows=2 loops=1)
                                        -> Single-row index lookup on sr using PRIMARY (sr_item_sk = ss.ss_item_sk, sr_ticket_number = ss.ss_ticket_number)  (cost=3.32..3.32 rows=1 height=1) (never executed)
                        -> Table scan on csr  (cost=25.3..25.3 rows=0.0037 height=1) (actual time=0.00404..0.00404 rows=0 loops=1)
                            -> Materialize CTE csr  (cost=25.3..25.3 rows=0.0037 height=1) (actual time=0.00396..0.00396 rows=0 loops=1)
                                -> Group aggregate: sum(cs.cs_ext_sales_price), sum(coalesce(cr.cr_return_amount,0)), sum((cs.cs_net_profit - coalesce(cr.cr_net_loss,0)))  (cost=22.3..22.3 rows=0.0037 height=1) (actual time=0.00313..0.00313 rows=0 loops=1)
                                    -> Sort: cp.cp_catalog_page_id  (cost=22.2..22.2 rows=0.0037 height=1) (actual time=0.003..0.003 rows=0 loops=1)
                                        -> Inner hash join (cs.cs_sold_date_sk = d.d_date_sk) (fill_ratio=0)  (cost=21.9..21.9 rows=0.0037 height=1) (actual time=0.00267..0.00267 rows=0 loops=1)
                                            -> Filter: (d.d_date between <cache>(cast('1998-08-04' as date)) and <cache>((cast('1998-08-04' as date) + interval 30 day)))  (cost=0.915..0.915 rows=0.111 height=1) (actual time=0.00196..0.00196 rows=0 loops=1)
                                                -> Table scan on d  (cost=0.857..0.857 rows=1 height=1) (actual time=0.00133..0.00154 rows=1 loops=1)
                                            -> Hash
                                                -> Nested loop inner join  (cost=20.9..20.9 rows=0.0333 height=1) (never executed)
                                                    -> Nested loop inner join  (cost=16..16 rows=0.0333 height=1) (never executed)
                                                        -> Nested loop inner join  (cost=8.03..8.03 rows=0.1 height=1) (never executed)
                                                            -> Nested loop left join  (cost=4.28..4.28 rows=1 height=1) (never executed)
                                                                -> Table scan on cs  (cost=0.885..0.885 rows=1 height=1) (never executed)
                                                                -> Single-row index lookup on cr using PRIMARY (cr_item_sk = cs.cs_item_sk, cr_order_number = cs.cs_order_number)  (cost=3.39..3.39 rows=1 height=1) (never executed)
                                                            -> Filter: (p.p_channel_tv = 'N')  (cost=3.76..3.76 rows=0.1 height=1) (never executed)
                                                                -> Single-row index lookup on p using PRIMARY (p_promo_sk = cs.cs_promo_sk)  (cost=3.7..3.7 rows=1 height=1) (never executed)
                                                        -> Filter: (i.i_current_price > 50.00)  (cost=7.99..7.99 rows=0.333 height=1) (never executed)
                                                            -> Single-row index lookup on i using PRIMARY (i_item_sk = cs.cs_item_sk)  (cost=7.93..7.93 rows=1 height=1) (never executed)
                                                    -> Single-row index lookup on cp using PRIMARY (cp_catalog_page_sk = cs.cs_catalog_page_sk)  (cost=4.89..4.89 rows=1 height=1) (never executed)
                        -> Table scan on wsr  (cost=26.6..26.6 rows=0.0037 height=1) (actual time=0.00721..0.00721 rows=0 loops=1)
                            -> Materialize CTE wsr  (cost=26.6..26.6 rows=0.0037 height=1) (actual time=0.00704..0.00704 rows=0 loops=1)
                                -> Group aggregate: sum(ws.ws_ext_sales_price), sum(coalesce(wr.wr_return_amt,0)), sum((ws.ws_net_profit - coalesce(wr.wr_net_loss,0)))  (cost=23.6..23.6 rows=0.0037 height=1) (actual time=0.00646..0.00646 rows=0 loops=1)
                                    -> Nested loop left join  (cost=23.6..23.6 rows=0.0037 height=1) (actual time=0.00637..0.00637 rows=0 loops=1)
                                        -> Sort: w.web_site_id  (cost=20.3..20.3 rows=0.0037 height=1) (actual time=0.00629..0.00629 rows=0 loops=1)
                                            -> Inner hash join (ws.ws_web_site_sk = w.web_site_sk) (fill_ratio=0)  (cost=19.9..19.9 rows=0.0037 height=1) (actual time=0.00596..0.00596 rows=0 loops=1)
                                                -> Table scan on w  (cost=6.09..6.09 rows=1 height=1) (actual time=0.00292..0.00292 rows=1 loops=1)
                                                -> Hash
                                                    -> Inner hash join (ws.ws_sold_date_sk = d.d_date_sk) (fill_ratio=0)  (cost=13.6..13.6 rows=0.0037 height=1) (actual time=0.00213..0.00213 rows=0 loops=1)
                                                        -> Filter: (d.d_date between <cache>(cast('1998-08-04' as date)) and <cache>((cast('1998-08-04' as date) + interval 30 day)))  (cost=0.915..0.915 rows=0.111 height=1) (actual time=0.00171..0.00171 rows=0 loops=1)
                                                            -> Table scan on d  (cost=0.857..0.857 rows=1 height=1) (actual time=0.00121..0.00137 rows=1 loops=1)
                                                        -> Hash
                                                            -> Nested loop inner join  (cost=12.6..12.6 rows=0.0333 height=1) (never executed)
                                                                -> Nested loop inner join  (cost=4.64..4.64 rows=0.1 height=1) (never executed)
                                                                    -> Table scan on ws  (cost=0.885..0.885 rows=1 height=1) (never executed)
                                                                    -> Filter: (p.p_channel_tv = 'N')  (cost=3.76..3.76 rows=0.1 height=1) (never executed)
                                                                        -> Single-row index lookup on p using PRIMARY (p_promo_sk = ws.ws_promo_sk)  (cost=3.7..3.7 rows=1 height=1) (never executed)
                                                                -> Filter: (i.i_current_price > 50.00)  (cost=7.99..7.99 rows=0.333 height=1) (never executed)
                                                                    -> Single-row index lookup on i using PRIMARY (i_item_sk = ws.ws_item_sk)  (cost=7.93..7.93 rows=1 height=1) (never executed)
                                        -> Single-row index lookup on wr using PRIMARY (wr_item_sk = ws.ws_item_sk, wr_order_number = ws.ws_order_number)  (cost=3.36..3.36 rows=1 height=1) (never executed)
