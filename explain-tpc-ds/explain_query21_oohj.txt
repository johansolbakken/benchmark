Executing: ../mysql-server-build/build-release/bin/mysql -uroot --local-infile=1 --port=13000 --host=127.0.0.1 tpcds_s10 with input size: 1163 bytes
EXPLAIN
-> Sort: x.w_warehouse_name, x.i_item_id, limit input to 100 row(s) per chunk  (cost=3.74e+6..3.74e+6 rows=19.9 height=1) (actual time=0.0328..0.0328 rows=0 loops=1)
    -> Table scan on x  (cost=3.74e+6..3.74e+6 rows=19.9 height=1) (actual time=0.0298..0.0298 rows=0 loops=1)
        -> Materialize  (cost=3.74e+6..3.74e+6 rows=19.9 height=1) (actual time=0.0297..0.0297 rows=0 loops=1)
            -> Filter: ((case when (inv_before > 0) then (inv_after / inv_before) else NULL end) between <cache>((2.0 / 3.0)) and <cache>((3.0 / 2.0)))  (cost=3.74e+6..3.74e+6 rows=19.9 height=1) (actual time=0.0275..0.0275 rows=0 loops=1)
                -> Table scan on <temporary>  (cost=3.74e+6..3.74e+6 rows=19.9 height=1) (actual time=0.0271..0.0271 rows=0 loops=1)
                    -> Aggregate using temporary table  (cost=3.74e+6..3.74e+6 rows=19.9 height=1) (actual time=0.0269..0.0269 rows=0 loops=1)
                        -> Inner hash join (inv.inv_warehouse_sk = w.w_warehouse_sk) (fill_ratio=2.6226e-05)  (cost=1481..3.65e+6 rows=94796 height=1) (actual time=0.0265..0.0265 rows=0 loops=1)
                            -> Inner hash join (inv.inv_item_sk = i.i_item_sk) (fill_ratio=0)  (cost=1472..3.62e+6 rows=94796 height=1) (actual time=0.00442..0.00442 rows=0 loops=1)
                                -> Nested loop inner join  (cost=4.02..3.43e+6 rows=853252 height=1) (actual time=0.00392..0.00392 rows=0 loops=1)
                                    -> Filter: (d.d_date between '1998-03-09' and '1998-05-08')  (cost=0.915..0.915 rows=0.111 height=1) (actual time=0.00388..0.00388 rows=0 loops=1)
                                        -> Table scan on d  (cost=0.857..0.857 rows=1 height=1) (actual time=0.00254..0.00296 rows=1 loops=1)
                                    -> Index lookup on inv using PRIMARY (inv_date_sk = d.d_date_sk)  (cost=0.447..3.43e+6 rows=7.68e+6 height=1) (never executed)
                                -> Hash
                                    -> Filter: (i.i_current_price between 0.99 and 1.49)  (cost=50.1..1392 rows=27.8 height=1) (never executed)
                                        -> Table scan on i  (cost=5.51..1378 rows=250 height=1) (never executed)
                            -> Hash
                                -> Table scan on w  (cost=2.7..5.4 rows=2 height=1) (actual time=0.0161..0.0182 rows=2 loops=1)
