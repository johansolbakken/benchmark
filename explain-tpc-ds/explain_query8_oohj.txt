Executing: ../mysql-server-build/build-release/bin/mysql -uroot --local-infile=1 --port=13000 --host=127.0.0.1 tpcds_s10 with input size: 6287 bytes
EXPLAIN
-> Limit: 100 row(s)  (cost=1.6e+6..1.71e+6 rows=1.41 height=1) (actual time=21.7..21.7 rows=0 loops=1)
    -> Group aggregate: sum(store_sales.ss_net_profit)  (cost=1.6e+6..1.71e+6 rows=1.41 height=1) (actual time=21.7..21.7 rows=0 loops=1)
        -> Inner hash join (substr(store.s_zip,1,2) = substr(A2.ca_zip,1,2))  (optimistic hash join, o_level=0.8, o_func=LINEAR, went_on_disk=false) (fill_ratio=0)  (cost=1.33e+6..1.52e+6 rows=1.36e+6 height=1) (actual time=21.7..21.7 rows=0 loops=1)
            -> Sort: store.s_store_name  (cost=1.26e+6..1.26e+6 rows=15588 height=1) (never executed)
                -> Inner hash join (store_sales.ss_store_sk = store.s_store_sk) (fill_ratio=0)  (cost=97.8..1.25e+6 rows=15588 height=1) (never executed)
                    -> Inner hash join (store_sales.ss_sold_date_sk = date_dim.d_date_sk) (fill_ratio=0)  (cost=80.8..1.24e+6 rows=15588 height=1) (never executed)
                        -> Table scan on store_sales  (cost=0.59..919479 rows=1.56e+6 height=1) (never executed)
                        -> Hash
                            -> Filter: ((date_dim.d_qoy = 1) and (date_dim.d_year = 2002))  (cost=0.967..0.967 rows=0.01 height=1) (never executed)
                                -> Table scan on date_dim  (cost=0.903..0.903 rows=1 height=1) (never executed)
                    -> Hash
                        -> Table scan on store  (cost=6.8..13.6 rows=2 height=1) (never executed)
            -> Hash
                -> Table scan on A2  (cost=66730..66745 rows=87.1 height=1) (actual time=21.7..21.7 rows=0 loops=1)
                    -> Intersect materialize with deduplication  (cost=66730..66730 rows=87.1 height=1) (actual time=21.7..21.7 rows=7 loops=1)
                        -> Filter: (substr(customer_address.ca_zip,1,5) in ('89436','30868','65085','22977','83927','77557','58429','40697','80614','10502','32779','91137','61265','98294','17921','18427','21203','59362','87291','84093','21505','17184','10866','67898','25797','28055','18377','80332','74535','21757','29742','90885','29898','17819','40811','25990','47513','89531','91068','10391','18846','99223','82637','41368','83658','86199','81625','26696','89338','88425','32200','81427','19053','77471','36610','99823','43276','41249','48584','83550','82276','18842','78890','14090','38123','40936','34425','19850','43286','80072','79188','54191','11395','50497','84861','90733','21068','57666','37119','25004','57835','70067','62878','95806','19303','18840','19124','29785','16737','16022','49613','89977','68310','60069','98360','48649','39050','41793','25002','27413','39736','47208','16515','94808','57648','15009','80015','42961','63982','21744','71853','81087','67468','34175','64008','20261','11201','51799','48043','45645','61163','48375','36447','57042','21218','41100','89951','22745','35851','83326','61125','78298','80752','49858','52940','96976','63792','11376','53582','18717','90226','50530','94203','99447','27670','96577','57856','56372','16165','23427','54561','28806','44439','22926','30123','61451','92397','56979','92309','70873','13355','21801','46346','37562','56458','28286','47306','99555','69399','26234','47546','49661','88601','35943','39936','25632','24611','44166','56648','30379','59785','11110','14329','93815','52226','71381','13842','25612','63294','14664','21077','82626','18799','60915','81020','56447','76619','11433','13414','42548','92713','70467','30884','47484','16072','38936','13036','88376','45539','35901','19506','65690','73957','71850','49231','14276','20005','18384','76615','11635','38177','55607','41369','95447','58581','58149','91946','33790','76232','75692','95464','22246','51061','56692','53121','77209','15482','10688','14868','45907','73520','72666','25734','17959','24677','66446','94627','53535','15560','41967','69297','11929','59403','33283','52232','57350','43933','40921','36635','10827','71286','19736','80619','25251','95042','15526','36496','55854','49124','81980','35375','49157','63512','28944','14946','36503','54010','18767','23969','43905','66979','33113','21286','58471','59080','13395','79144','70373','67031','38360','26705','50906','52406','26066','73146','15884','31897','30045','61068','45550','92454','13376','14354','19770','22928','97790','50723','46081','30202','14410','20223','88500','67298','13261','14172','81410','93578','83583','46047','94167','82564','21156','15799','86709','37931','74703','83103','23054','70470','72008','49247','91911','69998','20961','70070','63197','54853','88191','91830','49521','19454','81450','89091','62378','25683','61869','51744','36580','85778','36871','48121','28810','83712','45486','67393','26935','42393','20132','55349','86057','21309','80218','10094','11357','48819','39734','40758','30432','21204','29467','30214','61024','55307','74621','11622','68908','33032','52868','99194','99900','84936','69036','99149','45013','32895','59004','32322','14933','32936','33562','72550','27385','58049','58200','16808','21360','32961','18586','79307','15492'))  (cost=2.71..20562 rows=7582 height=1) (actual time=0.119..3.85 rows=31 loops=1)
                            -> Table scan on customer_address  (cost=2.65..20125 rows=7582 height=1) (actual time=0.036..1.42 rows=7540 loops=1)
                        -> Table scan on A1  (cost=46134..46148 rows=87.1 height=1) (actual time=17.8..17.8 rows=0 loops=1)
                            -> Materialize  (cost=46133..46133 rows=87.1 height=1) (actual time=17.8..17.8 rows=0 loops=1)
                                -> Filter: (`count(0)` > 10)  (cost=46095..46114 rows=87.1 height=1) (actual time=17.8..17.8 rows=0 loops=1)
                                    -> Table scan on <temporary>  (cost=46095..46109 rows=87.1 height=1) (actual time=17.8..17.8 rows=236 loops=1)
                                        -> Aggregate using temporary table  (cost=46095..46095 rows=87.1 height=1) (actual time=17.8..17.8 rows=236 loops=1)
                                            -> Nested loop inner join  (cost=25.5..44697 rows=1753 height=1) (actual time=0.1..17.6 rows=274 loops=1)
                                                -> Filter: (customer.c_preferred_cust_flag = 'Y')  (cost=19.7..34446 rows=1753 height=1) (actual time=0.0724..6.42 rows=8333 loops=1)
                                                    -> Table scan on customer  (cost=1.91..33437 rows=17526 height=1) (actual time=0.0718..5 rows=17666 loops=1)
                                                -> Single-row index lookup on customer_address using PRIMARY (ca_address_sk = customer.c_current_addr_sk)  (cost=5.85..5.85 rows=1 height=1) (actual time=0.00128..0.00128 rows=0.0329 loops=8333)
