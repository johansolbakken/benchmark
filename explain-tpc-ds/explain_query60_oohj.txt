Executing: ../mysql-server-build/build-release/bin/mysql -uroot --local-infile=1 --port=13000 --host=127.0.0.1 tpcds_s10 with input size: 2012 bytes
EXPLAIN
-> Limit: 100 row(s)  (cost=1.22e+6..1.22e+6 rows=3.87 height=1) (actual time=1.79..1.79 rows=0 loops=1)
    -> Group aggregate: sum(tmp1.total_sales)  (cost=1.22e+6..1.22e+6 rows=3.87 height=1) (actual time=1.79..1.79 rows=0 loops=1)
        -> Sort: tmp1.i_item_id  (cost=1.22e+6..1.22e+6 rows=15.8 height=1) (actual time=1.79..1.79 rows=0 loops=1)
            -> Table scan on tmp1  (cost=1.22e+6..1.22e+6 rows=15.8 height=1) (actual time=1.79..1.79 rows=0 loops=1)
                -> Union all materialize  (cost=1.22e+6..1.22e+6 rows=15.8 height=1) (actual time=1.79..1.79 rows=0 loops=1)
                    -> Table scan on ss  (cost=1.22e+6..1.22e+6 rows=15.8 height=1) (actual time=1.77..1.77 rows=0 loops=1)
                        -> Materialize CTE ss  (cost=1.22e+6..1.22e+6 rows=15.8 height=1) (actual time=1.77..1.77 rows=0 loops=1)
                            -> Group aggregate: sum(store_sales.ss_ext_sales_price)  (cost=1.22e+6..1.22e+6 rows=15.8 height=1) (actual time=1.77..1.77 rows=0 loops=1)
                                -> Inner hash join (LooseScan) (item.i_item_id = item.i_item_id)  (optimistic hash join, o_level=0.8, o_func=LINEAR, went_on_disk=false) (fill_ratio=0)  (cost=1.22e+6..1.22e+6 rows=1464 height=1) (actual time=1.77..1.77 rows=0 loops=1)
                                    -> Remove duplicates from input grouped on item.i_item_id  (cost=1394..1399 rows=15.8 height=1) (actual time=0.0883..0.0883 rows=1 loops=1)
                                        -> Sort: item.i_item_id  (cost=1393..1393 rows=25 height=1) (actual time=0.0878..0.0878 rows=1 loops=1)
                                            -> Filter: (item.i_category = 'Children')  (cost=55.2..1381 rows=25 height=1) (actual time=0.0253..0.0796 rows=24 loops=1)
                                                -> Table scan on item  (cost=5.47..1366 rows=250 height=1) (actual time=0.0215..0.066 rows=250 loops=1)
                                    -> Hash
                                        -> Inner hash join (store_sales.ss_addr_sk = customer_address.ca_address_sk)  (optimistic hash join, o_level=0.8, o_func=LINEAR, went_on_disk=false) (fill_ratio=0.0158072)  (cost=24381..1.22e+6 rows=1464 height=1) (actual time=1.68..1.68 rows=0 loops=1)
                                            -> Inner hash join (store_sales.ss_sold_date_sk = date_dim.d_date_sk)  (optimistic hash join, o_level=0.8, o_func=LINEAR, went_on_disk=false) (fill_ratio=0)  (cost=1599..1.19e+6 rows=14644 height=1) (actual time=0.00462..0.00462 rows=0 loops=1)
                                                -> Nested loop inner join  (cost=1518..886929 rows=1.46e+6 height=1) (never executed)
                                                    -> Sort: item.i_item_id  (cost=1517..1517 rows=250 height=1) (never executed)
                                                        -> Table scan on item  (cost=5.47..1366 rows=250 height=1) (never executed)
                                                    -> Index lookup on store_sales using PRIMARY (ss_item_sk = item.i_item_sk)  (cost=0.605..3542 rows=5858 height=1) (never executed)
                                                -> Hash
                                                    -> Filter: ((date_dim.d_year = 1999) and (date_dim.d_moy = 9))  (cost=0.967..0.967 rows=0.01 height=1) (actual time=0.00375..0.00375 rows=0 loops=1)
                                                        -> Table scan on date_dim  (cost=0.903..0.903 rows=1 height=1) (actual time=0.00279..0.00325 rows=1 loops=1)
                                            -> Hash
                                                -> Filter: (customer_address.ca_gmt_offset = -6.00)  (cost=27.6..20912 rows=758 height=1) (actual time=0.0201..1.39 rows=3315 loops=1)
                                                    -> Table scan on customer_address  (cost=2.7..20475 rows=7582 height=1) (actual time=0.0183..1.09 rows=7540 loops=1)
                    -> Table scan on cs  (cost=1421..1421 rows=0.001 height=1) (actual time=0.00487..0.00487 rows=0 loops=1)
                        -> Materialize CTE cs  (cost=1421..1421 rows=0.001 height=1) (actual time=0.00471..0.00471 rows=0 loops=1)
                            -> Group aggregate: sum(catalog_sales.cs_ext_sales_price)  (cost=1418..1418 rows=0.001 height=1) (actual time=0.00337..0.00337 rows=0 loops=1)
                                -> Inner hash join (LooseScan) (item.i_item_id = item.i_item_id)  (optimistic hash join, o_level=0.8, o_func=LINEAR, went_on_disk=false) (fill_ratio=0)  (cost=1418..1418 rows=0.001 height=1) (actual time=0.00321..0.00321 rows=0 loops=1)
                                    -> Remove duplicates from input grouped on item.i_item_id  (cost=1394..1399 rows=15.8 height=1) (never executed)
                                        -> Sort: item.i_item_id  (cost=1393..1393 rows=25 height=1) (never executed)
                                            -> Filter: (item.i_category = 'Children')  (cost=55.2..1381 rows=25 height=1) (never executed)
                                                -> Table scan on item  (cost=5.47..1366 rows=250 height=1) (never executed)
                                    -> Hash
                                        -> Inner hash join (catalog_sales.cs_sold_date_sk = date_dim.d_date_sk) (fill_ratio=0)  (cost=15.6..15.6 rows=0.001 height=1) (actual time=0.00258..0.00258 rows=0 loops=1)
                                            -> Nested loop inner join  (cost=14.6..14.6 rows=0.1 height=1) (never executed)
                                                -> Nested loop inner join  (cost=8.67..8.67 rows=1 height=1) (never executed)
                                                    -> Table scan on catalog_sales  (cost=0.747..0.747 rows=1 height=1) (never executed)
                                                    -> Single-row index lookup on item using PRIMARY (i_item_sk = catalog_sales.cs_item_sk)  (cost=7.93..7.93 rows=1 height=1) (never executed)
                                                -> Filter: (customer_address.ca_gmt_offset = -6.00)  (cost=5.91..5.91 rows=0.1 height=1) (never executed)
                                                    -> Single-row index lookup on customer_address using PRIMARY (ca_address_sk = catalog_sales.cs_bill_addr_sk)  (cost=5.85..5.85 rows=1 height=1) (never executed)
                                            -> Hash
                                                -> Filter: ((date_dim.d_year = 1999) and (date_dim.d_moy = 9))  (cost=0.967..0.967 rows=0.01 height=1) (actual time=0.002..0.002 rows=0 loops=1)
                                                    -> Table scan on date_dim  (cost=0.903..0.903 rows=1 height=1) (actual time=0.00154..0.00175 rows=1 loops=1)
                    -> Table scan on ws  (cost=1421..1421 rows=0.001 height=1) (actual time=0.00362..0.00362 rows=0 loops=1)
                        -> Materialize CTE ws  (cost=1421..1421 rows=0.001 height=1) (actual time=0.00354..0.00354 rows=0 loops=1)
                            -> Group aggregate: sum(web_sales.ws_ext_sales_price)  (cost=1418..1418 rows=0.001 height=1) (actual time=0.00292..0.00292 rows=0 loops=1)
                                -> Inner hash join (LooseScan) (item.i_item_id = item.i_item_id)  (optimistic hash join, o_level=0.8, o_func=LINEAR, went_on_disk=false) (fill_ratio=0)  (cost=1418..1418 rows=0.001 height=1) (actual time=0.00283..0.00283 rows=0 loops=1)
                                    -> Remove duplicates from input grouped on item.i_item_id  (cost=1394..1399 rows=15.8 height=1) (never executed)
                                        -> Sort: item.i_item_id  (cost=1393..1393 rows=25 height=1) (never executed)
                                            -> Filter: (item.i_category = 'Children')  (cost=55.2..1381 rows=25 height=1) (never executed)
                                                -> Table scan on item  (cost=5.47..1366 rows=250 height=1) (never executed)
                                    -> Hash
                                        -> Inner hash join (web_sales.ws_sold_date_sk = date_dim.d_date_sk) (fill_ratio=0)  (cost=15.6..15.6 rows=0.001 height=1) (actual time=0.00221..0.00221 rows=0 loops=1)
                                            -> Nested loop inner join  (cost=14.6..14.6 rows=0.1 height=1) (never executed)
                                                -> Nested loop inner join  (cost=8.67..8.67 rows=1 height=1) (never executed)
                                                    -> Table scan on web_sales  (cost=0.747..0.747 rows=1 height=1) (never executed)
                                                    -> Single-row index lookup on item using PRIMARY (i_item_sk = web_sales.ws_item_sk)  (cost=7.93..7.93 rows=1 height=1) (never executed)
                                                -> Filter: (customer_address.ca_gmt_offset = -6.00)  (cost=5.91..5.91 rows=0.1 height=1) (never executed)
                                                    -> Single-row index lookup on customer_address using PRIMARY (ca_address_sk = web_sales.ws_bill_addr_sk)  (cost=5.85..5.85 rows=1 height=1) (never executed)
                                            -> Hash
                                                -> Filter: ((date_dim.d_year = 1999) and (date_dim.d_moy = 9))  (cost=0.967..0.967 rows=0.01 height=1) (actual time=0.00175..0.00175 rows=0 loops=1)
                                                    -> Table scan on date_dim  (cost=0.903..0.903 rows=1 height=1) (actual time=0.00142..0.00158 rows=1 loops=1)
