Executing: ../mysql-server-build/build-release/bin/mysql -uroot --local-infile=1 --port=13000 --host=127.0.0.1 tpcds_s10 with input size: 1175 bytes
EXPLAIN
-> Limit: 100 row(s)  (cost=307..307 rows=5.47e-6 height=1) (actual time=0.0214..0.0214 rows=0 loops=1)
    -> Group aggregate: sum(store_sales.ss_net_profit), sum(store_returns.sr_net_loss), sum(catalog_sales.cs_net_profit)  (cost=307..307 rows=5.47e-6 height=1) (actual time=0.0211..0.0211 rows=0 loops=1)
        -> Sort: item.i_item_id, item.i_item_desc, store.s_store_id, store.s_store_name  (cost=307..307 rows=5.47e-6 height=1) (actual time=0.0208..0.0208 rows=0 loops=1)
            -> Inner hash join (d1.d_date_sk = store_sales.ss_sold_date_sk) (fill_ratio=0)  (cost=306..306 rows=5.47e-6 height=1) (actual time=0.0182..0.0182 rows=0 loops=1)
                -> Filter: ((d1.d_moy = 4) and (d1.d_year = 2000))  (cost=0.967..0.967 rows=0.01 height=1) (actual time=0.0168..0.0168 rows=0 loops=1)
                    -> Table scan on d1  (cost=0.903..0.903 rows=1 height=1) (actual time=0.014..0.0162 rows=1 loops=1)
                -> Hash
                    -> Inner hash join (store_returns.sr_returned_date_sk = d2.d_date_sk)  (optimistic hash join, o_level=0.8, o_func=LINEAR, went_on_disk=false) (fill_ratio=0)  (cost=305..305 rows=547e-6 height=1) (never executed)
                        -> Sort: item.i_item_id, item.i_item_desc, store.s_store_id, store.s_store_name  (cost=304..304 rows=0.0493 height=1) (never executed)
                            -> Nested loop inner join  (cost=304..304 rows=0.0493 height=1) (never executed)
                                -> Nested loop inner join  (cost=296..296 rows=0.0493 height=1) (never executed)
                                    -> Filter: (store_returns.sr_customer_sk = catalog_sales.cs_bill_customer_sk)  (cost=292..292 rows=0.493 height=1) (never executed)
                                        -> Nested loop inner join  (cost=59.9..292 rows=4.93 height=1) (never executed)
                                            -> Inner hash join (catalog_sales.cs_sold_date_sk = d3.d_date_sk) (fill_ratio=0)  (cost=9.91..9.91 rows=0.0111 height=1) (never executed)
                                                -> Nested loop inner join  (cost=8.72..8.72 rows=1 height=1) (never executed)
                                                    -> Table scan on catalog_sales  (cost=0.747..0.747 rows=1 height=1) (never executed)
                                                    -> Single-row index lookup on item using PRIMARY (i_item_sk = catalog_sales.cs_item_sk)  (cost=7.97..7.97 rows=1 height=1) (never executed)
                                                -> Hash
                                                    -> Filter: ((d3.d_year = 2000) and (d3.d_moy between 4 and 10))  (cost=0.967..0.967 rows=0.0111 height=1) (never executed)
                                                        -> Table scan on d3  (cost=0.903..0.903 rows=1 height=1) (never executed)
                                            -> Index lookup on store_returns using PRIMARY (sr_item_sk = item.i_item_sk)  (cost=0.637..282 rows=443 height=1) (never executed)
                                    -> Filter: (store_sales.ss_customer_sk = store_returns.sr_customer_sk)  (cost=3.49..3.49 rows=0.1 height=1) (never executed)
                                        -> Single-row index lookup on store_sales using PRIMARY (ss_item_sk = store_returns.sr_item_sk, ss_ticket_number = store_returns.sr_ticket_number)  (cost=3.43..3.43 rows=1 height=1) (never executed)
                                -> Single-row index lookup on store using PRIMARY (s_store_sk = store_sales.ss_store_sk)  (cost=8.1..8.1 rows=1 height=1) (never executed)
                        -> Hash
                            -> Filter: ((d2.d_year = 2000) and (d2.d_moy between 4 and 10))  (cost=0.967..0.967 rows=0.0111 height=1) (never executed)
                                -> Table scan on d2  (cost=0.903..0.903 rows=1 height=1) (never executed)
