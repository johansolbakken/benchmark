Executing: ../mysql-server-build/build-release/bin/mysql -uroot --local-infile=1 --port=13000 --host=127.0.0.1 tpcds_s10 with input size: 2979 bytes
EXPLAIN
-> Sort: t_s_secyear.customer_id, t_s_secyear.customer_first_name, t_s_secyear.customer_last_name, t_s_secyear.customer_email_address, limit input to 100 row(s) per chunk  (cost=9.49e+9..9.49e+9 rows=100 height=1) (actual time=323..323 rows=0 loops=1)
    -> Inner hash join (t_w_firstyear.customer_id = t_w_secyear.customer_id), extra conditions: ((case when (t_w_firstyear.year_total > 0.00) then (t_w_secyear.year_total / t_w_firstyear.year_total) else 0.0 end) > (case when (t_s_firstyear.year_total > 0.00) then (t_s_secyear.year_total / t_s_firstyear.year_total) else 0.0 end)) (fill_ratio=0)  (cost=16.5e+6..3.45e+9 rows=17.5e+9 height=1) (actual time=323..323 rows=0 loops=1)
        -> Inner hash join (t_s_secyear.customer_id = t_w_firstyear.customer_id) (fill_ratio=0)  (cost=12.3e+6..19.4e+6 rows=49.3e+6 height=1) (never executed)
            -> Inner hash join (t_s_firstyear.customer_id = t_s_secyear.customer_id) (fill_ratio=0)  (cost=8.21e+6..8.35e+6 rows=417867 height=1) (never executed)
                -> Filter: ((t_s_secyear.dyear = <cache>((2001 + 1))) and (t_s_secyear.sale_type = 's'))  (cost=4.06e+6..4.14e+6 rows=3541 height=1) (never executed)
                    -> Table scan on t_s_secyear  (cost=4.04e+6..4.12e+6 rows=354080 height=1) (never executed)
                        -> Materialize union CTE year_total if needed (query plan printed elsewhere)  (cost=4.04e+6..4.04e+6 rows=354080 height=1) (never executed)
                -> Hash
                    -> Filter: ((t_s_firstyear.dyear = 2001) and (t_s_firstyear.year_total > 0.00) and (t_s_firstyear.sale_type = 's'))  (cost=4.06e+6..4.14e+6 rows=1180 height=1) (never executed)
                        -> Table scan on t_s_firstyear  (cost=4.04e+6..4.12e+6 rows=354080 height=1) (never executed)
                            -> Materialize union CTE year_total if needed (query plan printed elsewhere)  (cost=4.04e+6..4.04e+6 rows=354080 height=1) (never executed)
            -> Hash
                -> Filter: ((t_w_firstyear.dyear = 2001) and (t_w_firstyear.year_total > 0.00) and (t_w_firstyear.sale_type = 'w'))  (cost=4.06e+6..4.14e+6 rows=1180 height=1) (never executed)
                    -> Table scan on t_w_firstyear  (cost=4.04e+6..4.12e+6 rows=354080 height=1) (never executed)
                        -> Materialize union CTE year_total if needed (query plan printed elsewhere)  (cost=4.04e+6..4.04e+6 rows=354080 height=1) (never executed)
        -> Hash
            -> Filter: ((t_w_secyear.dyear = <cache>((2001 + 1))) and (t_w_secyear.sale_type = 'w'))  (cost=4.06e+6..4.14e+6 rows=3541 height=1) (actual time=323..323 rows=0 loops=1)
                -> Table scan on t_w_secyear  (cost=4.04e+6..4.12e+6 rows=354080 height=1) (actual time=323..323 rows=0 loops=1)
                    -> Materialize union CTE year_total if needed  (cost=4.04e+6..4.04e+6 rows=354080 height=1) (actual time=323..323 rows=0 loops=1)
                        -> Group aggregate: sum((store_sales.ss_ext_list_price - store_sales.ss_ext_discount_amt))  (cost=3.48e+6..3.91e+6 rows=354079 height=1) (actual time=323..323 rows=0 loops=1)
                            -> Sort: customer.c_customer_id, customer.c_first_name, customer.c_last_name, customer.c_preferred_cust_flag, customer.c_birth_country, customer.c_login, customer.c_email_address, date_dim.d_year  (cost=3.48e+6..3.48e+6 rows=1.46e+6 height=1) (actual time=323..323 rows=0 loops=1)
                                -> Inner hash join (store_sales.ss_sold_date_sk = date_dim.d_date_sk) (fill_ratio=6.19888e-06)  (cost=64487..2.01e+6 rows=1.46e+6 height=1) (actual time=323..323 rows=0 loops=1)
                                    -> Inner hash join (customer.c_customer_sk = store_sales.ss_customer_sk) (fill_ratio=0.652119)  (cost=64484..1.5e+6 rows=1.46e+6 height=1) (actual time=9.03..322 rows=43838 loops=1)
                                        -> Table scan on store_sales  (cost=0.636..931293 rows=1.46e+6 height=1) (actual time=0.249..257 rows=1.3e+6 loops=1)
                                        -> Hash
                                            -> Table scan on customer  (cost=2.18..38254 rows=17513 height=1) (actual time=0.0537..5.08 rows=17666 loops=1)
                                    -> Hash
                                        -> Table scan on date_dim  (cost=0.857..0.857 rows=1 height=1) (actual time=0.008..0.00896 rows=1 loops=1)
                        -> Group aggregate: sum((web_sales.ws_ext_list_price - web_sales.ws_ext_discount_amt))  (cost=9.65..9.65 rows=1 height=1) (actual time=0.0454..0.0454 rows=0 loops=1)
                            -> Sort: customer.c_customer_id, customer.c_first_name, customer.c_last_name, customer.c_preferred_cust_flag, customer.c_birth_country, customer.c_login, customer.c_email_address, date_dim.d_year  (cost=9.15..9.15 rows=1 height=1) (actual time=0.0452..0.0452 rows=0 loops=1)
                                -> Inner hash join (web_sales.ws_sold_date_sk = date_dim.d_date_sk) (fill_ratio=0)  (cost=8.81..8.81 rows=1 height=1) (actual time=0.0379..0.0379 rows=0 loops=1)
                                    -> Table scan on date_dim  (cost=0.857..0.857 rows=1 height=1) (actual time=0.0124..0.0124 rows=1 loops=1)
                                    -> Hash
                                        -> Nested loop inner join  (cost=6.11..6.11 rows=1 height=1) (actual time=0.0154..0.0154 rows=0 loops=1)
                                            -> Table scan on web_sales  (cost=0.747..0.747 rows=1 height=1) (actual time=0.004..0.00446 rows=1 loops=1)
                                            -> Single-row index lookup on customer using PRIMARY (c_customer_sk = web_sales.ws_bill_customer_sk)  (cost=5.36..5.36 rows=1 height=1) (actual time=0.0108..0.0108 rows=0 loops=1)
