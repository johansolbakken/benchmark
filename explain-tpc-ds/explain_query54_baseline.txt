Executing: ../mysql-server-build/build-release/bin/mysql -uroot --local-infile=1 --port=13000 --host=127.0.0.1 tpcds_s10 with input size: 2223 bytes
EXPLAIN
-> Limit: 100 row(s)  (cost=1.24e+6..1.24e+6 rows=0.0693 height=1) (actual time=0.0453..0.0453 rows=0 loops=1)
    -> Group aggregate: count(0)  (cost=1.24e+6..1.24e+6 rows=0.0693 height=1) (actual time=0.0451..0.0451 rows=0 loops=1)
        -> Sort: segment  (cost=1.24e+6..1.24e+6 rows=0.0693 height=1) (actual time=0.0446..0.0446 rows=0 loops=1)
            -> Table scan on my_revenue  (cost=1.24e+6..1.24e+6 rows=0.0693 height=1) (actual time=0.0431..0.0431 rows=0 loops=1)
                -> Materialize CTE my_revenue  (cost=1.24e+6..1.24e+6 rows=0.0693 height=1) (actual time=0.0426..0.0426 rows=0 loops=1)
                    -> Group aggregate: sum(ss.ss_ext_sales_price)  (cost=1.24e+6..1.24e+6 rows=0.0693 height=1) (actual time=0.0377..0.0377 rows=0 loops=1)
                        -> Sort: mc.c_customer_sk  (cost=1.24e+6..1.24e+6 rows=0.0693 height=1) (actual time=0.0374..0.0374 rows=0 loops=1)
                            -> Inner hash join (ss.ss_sold_date_sk = d.d_date_sk) (fill_ratio=0)  (cost=1.24e+6..1.24e+6 rows=0.0693 height=1) (actual time=0.0362..0.0362 rows=0 loops=1)
                                -> Sort: mc.c_customer_sk  (cost=1.24e+6..1.24e+6 rows=0.624 height=1) (never executed)
                                    -> Inner hash join (mc.c_customer_sk = ss.ss_customer_sk) (fill_ratio=0)  (cost=1.24e+6..1.24e+6 rows=0.624 height=1) (never executed)
                                        -> Table scan on ss  (cost=0.59..919479 rows=1.56e+6 height=1) (never executed)
                                        -> Hash
                                            -> Inner hash join (ca.ca_county = s.s_county), (ca.ca_state = s.s_state) (fill_ratio=0)  (cost=42.9..42.9 rows=4e-6 height=1) (never executed)
                                                -> Table scan on s  (cost=6.76..13.5 rows=2 height=1) (never executed)
                                                -> Hash
                                                    -> Nested loop inner join  (cost=28.9..28.9 rows=200e-6 height=1) (never executed)
                                                        -> Table scan on mc  (cost=23..23 rows=200e-6 height=1) (never executed)
                                                            -> Materialize CTE my_customers  (cost=23..23 rows=200e-6 height=1) (never executed)
                                                                -> Remove duplicates from input grouped on cs_or_ws_sales.customer_sk, c.c_current_addr_sk  (cost=20..20 rows=200e-6 height=1) (never executed)
                                                                    -> Nested loop inner join  (cost=20..20 rows=200e-6 height=1) (never executed)
                                                                        -> Sort: c.c_customer_sk  (cost=12..12 rows=0.02 height=1) (never executed)
                                                                            -> Nested loop inner join  (cost=11.7..11.7 rows=0.02 height=1) (never executed)
                                                                                -> Inner hash join (cs_or_ws_sales.sold_date_sk = d.d_date_sk) (fill_ratio=0)  (cost=6.57..6.57 rows=0.02 height=1) (never executed)
                                                                                    -> Table scan on cs_or_ws_sales  (cost=5.01..5.17 rows=2 height=1) (never executed)
                                                                                        -> Union all materialize  (cost=4.84..4.84 rows=2 height=1) (never executed)
                                                                                            -> Table scan on catalog_sales  (cost=0.7..0.7 rows=1 height=1) (never executed)
                                                                                            -> Table scan on web_sales  (cost=0.7..0.7 rows=1 height=1) (never executed)
                                                                                    -> Hash
                                                                                        -> Filter: ((d.d_moy = 3) and (d.d_year = 1999))  (cost=0.967..0.967 rows=0.01 height=1) (never executed)
                                                                                            -> Table scan on d  (cost=0.903..0.903 rows=1 height=1) (never executed)
                                                                                -> Single-row index lookup on c using PRIMARY (c_customer_sk = cs_or_ws_sales.customer_sk)  (cost=5.1..5.1 rows=1 height=1) (never executed)
                                                                        -> Filter: ((i.i_category = 'Jewelry') and (i.i_class = 'consignment'))  (cost=8.04..8.04 rows=0.01 height=1) (never executed)
                                                                            -> Single-row index lookup on i using PRIMARY (i_item_sk = cs_or_ws_sales.item_sk)  (cost=7.97..7.97 rows=1 height=1) (never executed)
                                                        -> Single-row index lookup on ca using PRIMARY (ca_address_sk = mc.c_current_addr_sk)  (cost=5.89..5.89 rows=1 height=1) (never executed)
                                -> Hash
                                    -> Filter: (d.d_month_seq between (select #8) and (select #9))  (cost=3.54..3.54 rows=0.111 height=1) (actual time=0.0335..0.0335 rows=0 loops=1)
                                        -> Table scan on d  (cost=0.857..0.857 rows=1 height=1) (actual time=0.0149..0.0153 rows=1 loops=1)
                                        -> Select #8 (subquery in condition; run only once)
                                            -> Sort with duplicate removal: `d2`.`d_month_seq` + 1  (cost=1.31..1.31 rows=0.01 height=1) (actual time=0.00797..0.00797 rows=0 loops=1)
                                                -> Filter: ((d2.d_year = 1999) and (d2.d_moy = 3))  (cost=0.967..0.967 rows=0.01 height=1) (actual time=0.00566..0.00566 rows=0 loops=1)
                                                    -> Table scan on d2  (cost=0.903..0.903 rows=1 height=1) (actual time=0.00311..0.00475 rows=1 loops=1)
                                        -> Select #9 (subquery in condition; run only once)
                                            -> Sort with duplicate removal: `d3`.`d_month_seq` + 3  (cost=1.31..1.31 rows=0.01 height=1) (actual time=0.00349..0.00349 rows=0 loops=1)
                                                -> Filter: ((d3.d_year = 1999) and (d3.d_moy = 3))  (cost=0.967..0.967 rows=0.01 height=1) (actual time=0.00292..0.00292 rows=0 loops=1)
                                                    -> Table scan on d3  (cost=0.903..0.903 rows=1 height=1) (actual time=0.00225..0.00272 rows=1 loops=1)
