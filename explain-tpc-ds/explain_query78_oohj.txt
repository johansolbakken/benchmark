Executing: ../mysql-server-build/build-release/bin/mysql -uroot --local-infile=1 --port=13000 --host=127.0.0.1 tpcds_s10 with input size: 2300 bytes
EXPLAIN
-> Sort: ss.ss_sold_year, ss.ss_item_sk, ss.ss_customer_sk, ss.ss_qty DESC, ss.ss_wc DESC, ss.ss_sp DESC, other_chan_qty, other_chan_wholesale_cost, other_chan_sales_price, ratio, limit input to 100 row(s) per chunk  (cost=1.85e+6..1.85e+6 rows=100 height=1) (actual time=0.711..0.711 rows=0 loops=1)
    -> Filter: ((coalesce(ws.ws_qty,0) > 0) or (coalesce(cs.cs_qty,0) > 0))  (cost=1.84e+6..1.85e+6 rows=5936 height=1) (actual time=0.707..0.707 rows=0 loops=1)
        -> Left hash join (cs.cs_sold_year = ss.ss_sold_year), (cs.cs_item_sk = ss.ss_item_sk), (cs.cs_customer_sk = ss.ss_customer_sk) (fill_ratio=0)  (cost=1.84e+6..1.85e+6 rows=5936 height=1) (actual time=0.707..0.707 rows=0 loops=1)
            -> Left hash join (ws.ws_sold_year = ss.ss_sold_year), (ws.ws_item_sk = ss.ss_item_sk), (ws.ws_customer_sk = ss.ss_customer_sk) (fill_ratio=0)  (cost=1.84e+6..1.84e+6 rows=5936 height=1) (actual time=0.705..0.705 rows=0 loops=1)
                -> Table scan on ss  (cost=1.84e+6..1.84e+6 rows=5936 height=1) (actual time=0.705..0.705 rows=0 loops=1)
                    -> Materialize CTE ss  (cost=1.84e+6..1.84e+6 rows=5936 height=1) (actual time=0.704..0.704 rows=0 loops=1)
                        -> Group aggregate: sum(store_sales.ss_quantity), sum(store_sales.ss_wholesale_cost), sum(store_sales.ss_sales_price)  (cost=1.83e+6..1.84e+6 rows=5936 height=1) (actual time=0.699..0.699 rows=0 loops=1)
                            -> Sort: store_sales.ss_item_sk, store_sales.ss_customer_sk  (cost=1.83e+6..1.83e+6 rows=15588 height=1) (actual time=0.699..0.699 rows=0 loops=1)
                                -> Filter: (store_returns.sr_ticket_number is null)  (cost=206659..1.82e+6 rows=15588 height=1) (actual time=0.696..0.696 rows=0 loops=1)
                                    -> Left hash join (store_returns.sr_ticket_number = store_sales.ss_ticket_number), (store_sales.ss_item_sk = store_returns.sr_item_sk) (fill_ratio=0)  (cost=197587..1.81e+6 rows=155880 height=1) (actual time=0.696..0.696 rows=0 loops=1)
                                        -> Inner hash join (store_sales.ss_sold_date_sk = date_dim.d_date_sk) (fill_ratio=0)  (cost=11..1.55e+6 rows=155880 height=1) (actual time=0.696..0.696 rows=0 loops=1)
                                            -> Table scan on store_sales  (cost=0.774..1.21e+6 rows=1.56e+6 height=1) (actual time=0.688..0.688 rows=1 loops=1)
                                            -> Hash
                                                -> Filter: (date_dim.d_year = 2000)  (cost=0.915..0.915 rows=0.1 height=1) (actual time=0.00644..0.00644 rows=0 loops=1)
                                                    -> Table scan on date_dim  (cost=0.857..0.857 rows=1 height=1) (actual time=0.00407..0.00559 rows=1 loops=1)
                                        -> Hash
                                            -> Table scan on store_returns  (cost=0.525..53638 rows=102101 height=1) (never executed)
                -> Hash
                    -> Table scan on ws  (cost=8.89..8.89 rows=0.1 height=1) (never executed)
                        -> Materialize CTE ws  (cost=8.88..8.88 rows=0.1 height=1) (never executed)
                            -> Group aggregate: sum(web_sales.ws_quantity), sum(web_sales.ws_wholesale_cost), sum(web_sales.ws_sales_price)  (cost=5.84..5.84 rows=0.1 height=1) (never executed)
                                -> Sort: date_dim.d_year, web_sales.ws_item_sk, web_sales.ws_bill_customer_sk  (cost=5.79..5.79 rows=0.1 height=1) (never executed)
                                    -> Inner hash join (web_sales.ws_sold_date_sk = date_dim.d_date_sk) (fill_ratio=0)  (cost=5.44..5.44 rows=0.1 height=1) (never executed)
                                        -> Table scan on date_dim  (cost=0.857..0.857 rows=1 height=1) (never executed)
                                        -> Hash
                                            -> Filter: (web_returns.wr_order_number is null)  (cost=4.21..4.21 rows=0.1 height=1) (never executed)
                                                -> Nested loop left join  (cost=4.16..4.16 rows=1 height=1) (never executed)
                                                    -> Table scan on web_sales  (cost=0.885..0.885 rows=1 height=1) (never executed)
                                                    -> Single-row covering index lookup on web_returns using PRIMARY (wr_item_sk = web_sales.ws_item_sk, wr_order_number = web_sales.ws_order_number)  (cost=3.27..3.27 rows=1 height=1) (never executed)
            -> Hash
                -> Table scan on cs  (cost=8.93..8.93 rows=0.1 height=1) (never executed)
                    -> Materialize CTE cs  (cost=8.91..8.91 rows=0.1 height=1) (never executed)
                        -> Group aggregate: sum(catalog_sales.cs_quantity), sum(catalog_sales.cs_wholesale_cost), sum(catalog_sales.cs_sales_price)  (cost=5.88..5.88 rows=0.1 height=1) (never executed)
                            -> Sort: date_dim.d_year, catalog_sales.cs_item_sk, catalog_sales.cs_bill_customer_sk  (cost=5.82..5.82 rows=0.1 height=1) (never executed)
                                -> Inner hash join (catalog_sales.cs_sold_date_sk = date_dim.d_date_sk) (fill_ratio=0)  (cost=5.48..5.48 rows=0.1 height=1) (never executed)
                                    -> Table scan on date_dim  (cost=0.857..0.857 rows=1 height=1) (never executed)
                                    -> Hash
                                        -> Filter: (catalog_returns.cr_order_number is null)  (cost=4.25..4.25 rows=0.1 height=1) (never executed)
                                            -> Nested loop left join  (cost=4.19..4.19 rows=1 height=1) (never executed)
                                                -> Table scan on catalog_sales  (cost=0.885..0.885 rows=1 height=1) (never executed)
                                                -> Single-row covering index lookup on catalog_returns using PRIMARY (cr_item_sk = catalog_sales.cs_item_sk, cr_order_number = catalog_sales.cs_order_number)  (cost=3.31..3.31 rows=1 height=1) (never executed)
