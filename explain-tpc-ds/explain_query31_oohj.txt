Executing: ../mysql-server-build/build-release/bin/mysql -uroot --local-infile=1 --port=13000 --host=127.0.0.1 tpcds_s10 with input size: 1862 bytes
EXPLAIN
-> Inner hash join (ss1.ca_county = ws3.ca_county), extra conditions: ((case when (ws2.web_sales > 0.00) then (ws3.web_sales / ws2.web_sales) else NULL end) > (case when (ss2.store_sales > 0.00) then (ss3.store_sales / ss2.store_sales) else NULL end)) (fill_ratio=0)  (cost=10.3e+6..10.3e+6 rows=6.6e-12 height=1) (actual time=0.043..0.043 rows=0 loops=1)
    -> Filter: ((ws3.d_qoy = 3) and (ws3.d_year = 2000))  (cost=13.6..13.6 rows=0.01 height=1) (actual time=0.0406..0.0406 rows=0 loops=1)
        -> Table scan on ws3  (cost=13.5..13.5 rows=1 height=1) (actual time=0.0402..0.0402 rows=0 loops=1)
            -> Materialize CTE ws if needed  (cost=13.3..13.3 rows=1 height=1) (actual time=0.0397..0.0397 rows=0 loops=1)
                -> Group aggregate: sum(web_sales.ws_ext_sales_price)  (cost=10.1..10.1 rows=1 height=1) (actual time=0.036..0.036 rows=0 loops=1)
                    -> Sort: customer_address.ca_county, date_dim.d_qoy, date_dim.d_year  (cost=9.64..9.64 rows=1 height=1) (actual time=0.0355..0.0355 rows=0 loops=1)
                        -> Inner hash join (web_sales.ws_sold_date_sk = date_dim.d_date_sk) (fill_ratio=8.10623e-06)  (cost=9.3..9.3 rows=1 height=1) (actual time=0.0325..0.0325 rows=0 loops=1)
                            -> Nested loop inner join  (cost=6.55..6.55 rows=1 height=1) (actual time=0.0129..0.0129 rows=0 loops=1)
                                -> Table scan on web_sales  (cost=0.7..0.7 rows=1 height=1) (actual time=0.00398..0.00464 rows=1 loops=1)
                                -> Single-row index lookup on customer_address using PRIMARY (ca_address_sk = web_sales.ws_bill_addr_sk)  (cost=5.85..5.85 rows=1 height=1) (actual time=0.00753..0.00753 rows=0 loops=1)
                            -> Hash
                                -> Table scan on date_dim  (cost=0.903..0.903 rows=1 height=1) (actual time=0.0137..0.0155 rows=1 loops=1)
    -> Hash
        -> Inner hash join (ss1.ca_county = ws2.ca_county), extra conditions: ((case when (ws1.web_sales > 0.00) then (ws2.web_sales / ws1.web_sales) else NULL end) > (case when (ss1.store_sales > 0.00) then (ss2.store_sales / ss1.store_sales) else NULL end)) (fill_ratio=0)  (cost=10.3e+6..10.3e+6 rows=6.6e-9 height=1) (never executed)
            -> Filter: ((ws2.d_qoy = 2) and (ws2.d_year = 2000))  (cost=13.6..13.6 rows=0.01 height=1) (never executed)
                -> Table scan on ws2  (cost=13.5..13.5 rows=1 height=1) (never executed)
                    -> Materialize CTE ws if needed (query plan printed elsewhere)  (cost=13.3..13.3 rows=1 height=1) (never executed)
            -> Hash
                -> Inner hash join (ss1.ca_county = ws1.ca_county) (fill_ratio=0)  (cost=10.3e+6..10.3e+6 rows=6.6e-6 height=1) (never executed)
                    -> Filter: ((ws1.d_qoy = 1) and (ws1.d_year = 2000))  (cost=13.6..13.6 rows=0.01 height=1) (never executed)
                        -> Table scan on ws1  (cost=13.5..13.5 rows=1 height=1) (never executed)
                            -> Materialize CTE ws if needed (query plan printed elsewhere)  (cost=13.3..13.3 rows=1 height=1) (never executed)
                    -> Hash
                        -> Inner hash join (ss1.ca_county = ss3.ca_county) (fill_ratio=0)  (cost=10.3e+6..10.3e+6 rows=0.0066 height=1) (never executed)
                            -> Filter: ((ss1.d_qoy = 1) and (ss1.d_year = 2000))  (cost=3.43e+6..3.43e+6 rows=0.871 height=1) (never executed)
                                -> Table scan on ss1  (cost=3.43e+6..3.43e+6 rows=87.1 height=1) (never executed)
                                    -> Materialize CTE ss if needed  (cost=3.43e+6..3.43e+6 rows=87.1 height=1) (never executed)
                                        -> Table scan on <temporary>  (cost=3.43e+6..3.43e+6 rows=87.1 height=1) (never executed)
                                            -> Aggregate using temporary table  (cost=3.43e+6..3.43e+6 rows=87.1 height=1) (never executed)
                                                -> Inner hash join (store_sales.ss_addr_sk = customer_address.ca_address_sk) (fill_ratio=0)  (cost=31834..2.03e+6 rows=1.56e+6 height=1) (never executed)
                                                    -> Inner hash join (store_sales.ss_sold_date_sk = date_dim.d_date_sk) (fill_ratio=0)  (cost=3.34..1.46e+6 rows=1.56e+6 height=1) (never executed)
                                                        -> Table scan on store_sales  (cost=0.59..919479 rows=1.56e+6 height=1) (never executed)
                                                        -> Hash
                                                            -> Table scan on date_dim  (cost=0.903..0.903 rows=1 height=1) (never executed)
                                                    -> Hash
                                                        -> Table scan on customer_address  (cost=2.7..20475 rows=7582 height=1) (never executed)
                            -> Hash
                                -> Inner hash join (ss2.ca_county = ss3.ca_county) (fill_ratio=0)  (cost=6.87e+6..6.87e+6 rows=0.0758 height=1) (never executed)
                                    -> Filter: ((ss2.d_qoy = 2) and (ss2.d_year = 2000))  (cost=3.43e+6..3.43e+6 rows=0.871 height=1) (never executed)
                                        -> Table scan on ss2  (cost=3.43e+6..3.43e+6 rows=87.1 height=1) (never executed)
                                            -> Materialize CTE ss if needed (query plan printed elsewhere)  (cost=3.43e+6..3.43e+6 rows=87.1 height=1) (never executed)
                                    -> Hash
                                        -> Filter: ((ss3.d_qoy = 3) and (ss3.d_year = 2000))  (cost=3.43e+6..3.43e+6 rows=0.871 height=1) (never executed)
                                            -> Table scan on ss3  (cost=3.43e+6..3.43e+6 rows=87.1 height=1) (never executed)
                                                -> Materialize CTE ss if needed (query plan printed elsewhere)  (cost=3.43e+6..3.43e+6 rows=87.1 height=1) (never executed)
