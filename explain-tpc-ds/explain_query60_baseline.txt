Executing: ../mysql-server-build/build-release/bin/mysql -uroot --local-infile=1 --port=13000 --host=127.0.0.1 tpcds_s10 with input size: 1991 bytes
EXPLAIN
-> Limit: 100 row(s)  (cost=1.32e+6..1.32e+6 rows=3.87 height=1) (actual time=2.59..2.59 rows=0 loops=1)
    -> Group aggregate: sum(tmp1.total_sales)  (cost=1.32e+6..1.32e+6 rows=3.87 height=1) (actual time=2.59..2.59 rows=0 loops=1)
        -> Sort: tmp1.i_item_id  (cost=1.32e+6..1.32e+6 rows=15.8 height=1) (actual time=2.58..2.58 rows=0 loops=1)
            -> Table scan on tmp1  (cost=1.32e+6..1.32e+6 rows=15.8 height=1) (actual time=2.58..2.58 rows=0 loops=1)
                -> Union all materialize  (cost=1.32e+6..1.32e+6 rows=15.8 height=1) (actual time=2.58..2.58 rows=0 loops=1)
                    -> Table scan on ss  (cost=1.31e+6..1.31e+6 rows=15.8 height=1) (actual time=2.56..2.56 rows=0 loops=1)
                        -> Materialize CTE ss  (cost=1.31e+6..1.31e+6 rows=15.8 height=1) (actual time=2.56..2.56 rows=0 loops=1)
                            -> Table scan on <temporary>  (cost=1.31e+6..1.31e+6 rows=15.8 height=1) (actual time=2.56..2.56 rows=0 loops=1)
                                -> Aggregate using temporary table  (cost=1.31e+6..1.31e+6 rows=15.8 height=1) (actual time=2.56..2.56 rows=0 loops=1)
                                    -> Inner hash join (LooseScan) (item.i_item_id = item.i_item_id) (fill_ratio=0)  (cost=1.31e+6..1.31e+6 rows=1559 height=1) (actual time=2.56..2.56 rows=0 loops=1)
                                        -> Remove duplicates from input grouped on item.i_item_id  (cost=1394..1399 rows=15.8 height=1) (actual time=0.127..0.127 rows=1 loops=1)
                                            -> Sort: item.i_item_id  (cost=1393..1393 rows=25 height=1) (actual time=0.127..0.127 rows=1 loops=1)
                                                -> Filter: (item.i_category = 'Children')  (cost=55.2..1381 rows=25 height=1) (actual time=0.034..0.115 rows=24 loops=1)
                                                    -> Table scan on item  (cost=5.47..1366 rows=250 height=1) (actual time=0.03..0.0944 rows=250 loops=1)
                                        -> Hash
                                            -> Inner hash join (store_sales.ss_addr_sk = customer_address.ca_address_sk) (fill_ratio=0.0158072)  (cost=1.3e+6..1.31e+6 rows=1559 height=1) (actual time=2.43..2.43 rows=0 loops=1)
                                                -> Sort: item.i_item_id  (cost=1.28e+6..1.28e+6 rows=15588 height=1) (actual time=0.00765..0.00765 rows=0 loops=1)
                                                    -> Inner hash join (store_sales.ss_sold_date_sk = date_dim.d_date_sk) (fill_ratio=0)  (cost=1599..1.27e+6 rows=15588 height=1) (actual time=0.00608..0.00608 rows=0 loops=1)
                                                        -> Nested loop inner join  (cost=1518..943949 rows=1.56e+6 height=1) (never executed)
                                                            -> Sort: item.i_item_id  (cost=1517..1517 rows=250 height=1) (never executed)
                                                                -> Table scan on item  (cost=5.47..1366 rows=250 height=1) (never executed)
                                                            -> Index lookup on store_sales using PRIMARY (ss_item_sk = item.i_item_sk)  (cost=0.605..3770 rows=6235 height=1) (never executed)
                                                        -> Hash
                                                            -> Filter: ((date_dim.d_year = 1999) and (date_dim.d_moy = 9))  (cost=0.967..0.967 rows=0.01 height=1) (actual time=0.0048..0.0048 rows=0 loops=1)
                                                                -> Table scan on date_dim  (cost=0.903..0.903 rows=1 height=1) (actual time=0.00366..0.00416 rows=1 loops=1)
                                                -> Hash
                                                    -> Filter: (customer_address.ca_gmt_offset = -6.00)  (cost=27.6..20912 rows=758 height=1) (actual time=0.0271..2.06 rows=3315 loops=1)
                                                        -> Table scan on customer_address  (cost=2.7..20475 rows=7582 height=1) (actual time=0.0251..1.53 rows=7540 loops=1)
                    -> Table scan on cs  (cost=1421..1421 rows=0.001 height=1) (actual time=0.00859..0.00859 rows=0 loops=1)
                        -> Materialize CTE cs  (cost=1421..1421 rows=0.001 height=1) (actual time=0.00841..0.00841 rows=0 loops=1)
                            -> Group aggregate: sum(catalog_sales.cs_ext_sales_price)  (cost=1418..1418 rows=0.001 height=1) (actual time=0.00571..0.00571 rows=0 loops=1)
                                -> Sort: item.i_item_id  (cost=1418..1418 rows=0.001 height=1) (actual time=0.00537..0.00537 rows=0 loops=1)
                                    -> Inner hash join (LooseScan) (item.i_item_id = item.i_item_id) (fill_ratio=0)  (cost=1418..1418 rows=0.001 height=1) (actual time=0.00456..0.00456 rows=0 loops=1)
                                        -> Remove duplicates from input grouped on item.i_item_id  (cost=1394..1399 rows=15.8 height=1) (never executed)
                                            -> Sort: item.i_item_id  (cost=1393..1393 rows=25 height=1) (never executed)
                                                -> Filter: (item.i_category = 'Children')  (cost=55.2..1381 rows=25 height=1) (never executed)
                                                    -> Table scan on item  (cost=5.47..1366 rows=250 height=1) (never executed)
                                        -> Hash
                                            -> Inner hash join (catalog_sales.cs_sold_date_sk = date_dim.d_date_sk) (fill_ratio=0)  (cost=15.6..15.6 rows=0.001 height=1) (actual time=0.00356..0.00356 rows=0 loops=1)
                                                -> Nested loop inner join  (cost=14.6..14.6 rows=0.1 height=1) (never executed)
                                                    -> Nested loop inner join  (cost=8.67..8.67 rows=1 height=1) (never executed)
                                                        -> Table scan on catalog_sales  (cost=0.747..0.747 rows=1 height=1) (never executed)
                                                        -> Single-row index lookup on item using PRIMARY (i_item_sk = catalog_sales.cs_item_sk)  (cost=7.93..7.93 rows=1 height=1) (never executed)
                                                    -> Filter: (customer_address.ca_gmt_offset = -6.00)  (cost=5.91..5.91 rows=0.1 height=1) (never executed)
                                                        -> Single-row index lookup on customer_address using PRIMARY (ca_address_sk = catalog_sales.cs_bill_addr_sk)  (cost=5.85..5.85 rows=1 height=1) (never executed)
                                                -> Hash
                                                    -> Filter: ((date_dim.d_year = 1999) and (date_dim.d_moy = 9))  (cost=0.967..0.967 rows=0.01 height=1) (actual time=0.00282..0.00282 rows=0 loops=1)
                                                        -> Table scan on date_dim  (cost=0.903..0.903 rows=1 height=1) (actual time=0.00224..0.00262 rows=1 loops=1)
                    -> Table scan on ws  (cost=1421..1421 rows=0.001 height=1) (actual time=0.00673..0.00673 rows=0 loops=1)
                        -> Materialize CTE ws  (cost=1421..1421 rows=0.001 height=1) (actual time=0.00658..0.00658 rows=0 loops=1)
                            -> Group aggregate: sum(web_sales.ws_ext_sales_price)  (cost=1418..1418 rows=0.001 height=1) (actual time=0.00556..0.00556 rows=0 loops=1)
                                -> Sort: item.i_item_id  (cost=1418..1418 rows=0.001 height=1) (actual time=0.00538..0.00538 rows=0 loops=1)
                                    -> Inner hash join (LooseScan) (item.i_item_id = item.i_item_id) (fill_ratio=0)  (cost=1418..1418 rows=0.001 height=1) (actual time=0.00469..0.00469 rows=0 loops=1)
                                        -> Remove duplicates from input grouped on item.i_item_id  (cost=1394..1399 rows=15.8 height=1) (never executed)
                                            -> Sort: item.i_item_id  (cost=1393..1393 rows=25 height=1) (never executed)
                                                -> Filter: (item.i_category = 'Children')  (cost=55.2..1381 rows=25 height=1) (never executed)
                                                    -> Table scan on item  (cost=5.47..1366 rows=250 height=1) (never executed)
                                        -> Hash
                                            -> Inner hash join (web_sales.ws_sold_date_sk = date_dim.d_date_sk) (fill_ratio=0)  (cost=15.6..15.6 rows=0.001 height=1) (actual time=0.00309..0.00309 rows=0 loops=1)
                                                -> Nested loop inner join  (cost=14.6..14.6 rows=0.1 height=1) (never executed)
                                                    -> Nested loop inner join  (cost=8.67..8.67 rows=1 height=1) (never executed)
                                                        -> Table scan on web_sales  (cost=0.747..0.747 rows=1 height=1) (never executed)
                                                        -> Single-row index lookup on item using PRIMARY (i_item_sk = web_sales.ws_item_sk)  (cost=7.93..7.93 rows=1 height=1) (never executed)
                                                    -> Filter: (customer_address.ca_gmt_offset = -6.00)  (cost=5.91..5.91 rows=0.1 height=1) (never executed)
                                                        -> Single-row index lookup on customer_address using PRIMARY (ca_address_sk = web_sales.ws_bill_addr_sk)  (cost=5.85..5.85 rows=1 height=1) (never executed)
                                                -> Hash
                                                    -> Filter: ((date_dim.d_year = 1999) and (date_dim.d_moy = 9))  (cost=0.967..0.967 rows=0.01 height=1) (actual time=0.00262..0.00262 rows=0 loops=1)
                                                        -> Table scan on date_dim  (cost=0.903..0.903 rows=1 height=1) (actual time=0.00208..0.00242 rows=1 loops=1)
