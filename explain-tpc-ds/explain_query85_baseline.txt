Executing: ../mysql-server-build/build-release/bin/mysql -uroot --local-infile=1 --port=13000 --host=127.0.0.1 tpcds_s10 with input size: 2192 bytes
EXPLAIN
-> Sort: `substr(r_reason_desc,1,20)`, `avg(ws_quantity)`, `avg(wr_refunded_cash)`, `avg(wr_fee)`, limit input to 100 row(s) per chunk  (cost=18.7..18.7 rows=13.5e-9 height=1) (actual time=0.031..0.031 rows=0 loops=1)
    -> Stream results  (cost=18.4..18.4 rows=13.5e-9 height=1) (actual time=0.0289..0.0289 rows=0 loops=1)
        -> Group aggregate: avg(web_sales.ws_quantity), avg(web_returns.wr_refunded_cash), avg(web_returns.wr_fee)  (cost=18.4..18.4 rows=13.5e-9 height=1) (actual time=0.0283..0.0283 rows=0 loops=1)
            -> Nested loop inner join  (cost=18.4..18.4 rows=13.5e-9 height=1) (actual time=0.0278..0.0278 rows=0 loops=1)
                -> Sort: reason.r_reason_desc  (cost=14.9..14.9 rows=13.5e-9 height=1) (actual time=0.0275..0.0275 rows=0 loops=1)
                    -> Inner hash join (reason.r_reason_sk = web_returns.wr_reason_sk) (fill_ratio=0)  (cost=14.6..14.6 rows=13.5e-9 height=1) (actual time=0.025..0.025 rows=0 loops=1)
                        -> Table scan on reason  (cost=1.41..1.41 rows=1 height=1) (actual time=0.014..0.014 rows=1 loops=1)
                        -> Hash
                            -> Inner hash join (cd2.cd_demo_sk = web_returns.wr_returning_cdemo_sk), extra conditions: (((web_sales.ws_sales_price between 100.00 and 150.00) and ((cd1.cd_marital_status = 'M') and (cd2.cd_marital_status = 'M')) and ((cd1.cd_education_status = '4 yr Degree') and (cd2.cd_education_status = '4 yr Degree'))) or ((web_sales.ws_sales_price between 50.00 and 100.00) and ((cd1.cd_marital_status = 'D') and (cd2.cd_marital_status = 'D')) and ((cd1.cd_education_status = 'Primary') and (cd2.cd_education_status = 'Primary'))) or ((web_sales.ws_sales_price between 150.00 and 200.00) and ((cd1.cd_marital_status = 'U') and (cd2.cd_marital_status = 'U')) and ((cd1.cd_education_status = 'Advanced Degree') and (cd2.cd_education_status = 'Advanced Degree')))) (fill_ratio=0)  (cost=13..13 rows=13.5e-9 height=1) (actual time=0.00808..0.00808 rows=0 loops=1)
                                -> Filter: (((cd2.cd_marital_status = 'M') and (cd2.cd_education_status = '4 yr Degree')) or ((cd2.cd_marital_status = 'D') and (cd2.cd_education_status = 'Primary')) or ((cd2.cd_marital_status = 'U') and (cd2.cd_education_status = 'Advanced Degree')))  (cost=0.776..0.776 rows=0.0297 height=1) (actual time=0.00672..0.00672 rows=0 loops=1)
                                    -> Table scan on cd2  (cost=0.719..0.719 rows=1 height=1) (actual time=0.0029..0.00488 rows=1 loops=1)
                                -> Hash
                                    -> Inner hash join (cd1.cd_demo_sk = web_returns.wr_refunded_cdemo_sk), extra conditions: (((web_sales.ws_sales_price between 100.00 and 150.00) and (cd1.cd_marital_status = 'M') and (cd1.cd_education_status = '4 yr Degree')) or ((web_sales.ws_sales_price between 50.00 and 100.00) and (cd1.cd_marital_status = 'D') and (cd1.cd_education_status = 'Primary')) or ((web_sales.ws_sales_price between 150.00 and 200.00) and (cd1.cd_marital_status = 'U') and (cd1.cd_education_status = 'Advanced Degree'))) (fill_ratio=0)  (cost=12.2..12.2 rows=1.53e-6 height=1) (never executed)
                                        -> Filter: (((cd1.cd_marital_status = 'M') and (cd1.cd_education_status = '4 yr Degree')) or ((cd1.cd_marital_status = 'D') and (cd1.cd_education_status = 'Primary')) or ((cd1.cd_marital_status = 'U') and (cd1.cd_education_status = 'Advanced Degree')))  (cost=0.776..0.776 rows=0.0297 height=1) (never executed)
                                            -> Table scan on cd1  (cost=0.719..0.719 rows=1 height=1) (never executed)
                                        -> Hash
                                            -> Inner hash join (web_sales.ws_sold_date_sk = date_dim.d_date_sk) (fill_ratio=0)  (cost=11.4..11.4 rows=173e-6 height=1) (never executed)
                                                -> Filter: (date_dim.d_year = 1998)  (cost=0.915..0.915 rows=0.1 height=1) (never executed)
                                                    -> Table scan on date_dim  (cost=0.857..0.857 rows=1 height=1) (never executed)
                                                -> Hash
                                                    -> Nested loop inner join  (cost=10.5..10.5 rows=0.00173 height=1) (never executed)
                                                        -> Nested loop inner join  (cost=4.49..4.49 rows=0.0886 height=1) (never executed)
                                                            -> Filter: (((web_sales.ws_sales_price between 100.00 and 150.00) or (web_sales.ws_sales_price between 50.00 and 100.00) or (web_sales.ws_sales_price between 150.00 and 200.00)) and ((web_sales.ws_net_profit between 100 and 200) or (web_sales.ws_net_profit between 150 and 300) or (web_sales.ws_net_profit between 50 and 250)))  (cost=0.96..0.96 rows=0.0886 height=1) (never executed)
                                                                -> Table scan on web_sales  (cost=0.885..0.885 rows=1 height=1) (never executed)
                                                            -> Single-row index lookup on web_returns using PRIMARY (wr_item_sk = web_sales.ws_item_sk, wr_order_number = web_sales.ws_order_number)  (cost=3.53..3.53 rows=1 height=1) (never executed)
                                                        -> Filter: (((customer_address.ca_country = 'United States') and ((customer_address.ca_state in ('KY','GA','NM')) or (customer_address.ca_state in ('MT','OR','IN')) or (customer_address.ca_state in ('WI','MO','WV')))) and (((customer_address.ca_state in ('KY','GA','NM')) and (web_sales.ws_net_profit between 100 and 200)) or ((customer_address.ca_state in ('MT','OR','IN')) and (web_sales.ws_net_profit between 150 and 300)) or ((customer_address.ca_state in ('WI','MO','WV')) and (web_sales.ws_net_profit between 50 and 250))))  (cost=5.96..5.96 rows=0.0196 height=1) (never executed)
                                                            -> Single-row index lookup on customer_address using PRIMARY (ca_address_sk = web_returns.wr_refunded_addr_sk)  (cost=5.89..5.89 rows=1 height=1) (never executed)
                -> Single-row covering index lookup on web_page using PRIMARY (wp_web_page_sk = web_sales.ws_web_page_sk)  (cost=3.46..3.46 rows=1 height=1) (never executed)
