Executing: ../mysql-server-build/build-release/bin/mysql -uroot --local-infile=1 --port=13000 --host=127.0.0.1 tpcds_s10 with input size: 1695 bytes
EXPLAIN
-> Limit: 100 row(s)  (cost=62.8..62.8 rows=0 height=1) (actual time=0.0364..0.0364 rows=0 loops=1)
    -> Nested loop inner join  (cost=62.8..62.8 rows=0 height=1) (actual time=0.0343..0.0343 rows=0 loops=1)
        -> Sort: (v1.sum_sales - v1.avg_monthly_sales), nsum  (cost=42..42 rows=46.3e-9 height=1) (actual time=0.0341..0.0341 rows=0 loops=1)
            -> Nested loop inner join  (cost=41.6..41.6 rows=46.3e-9 height=1) (actual time=0.0327..0.0327 rows=0 loops=1)
                -> Filter: ((v1.d_year = 2000) and (v1.avg_monthly_sales > 0.000000) and ((case when (v1.avg_monthly_sales > 0.000000) then (abs((v1.sum_sales - v1.avg_monthly_sales)) / v1.avg_monthly_sales) else NULL end) > 0.1))  (cost=20.8..20.8 rows=0.00393 height=1) (actual time=0.0326..0.0326 rows=0 loops=1)
                    -> Table scan on v1  (cost=20.8..20.8 rows=0.118 height=1) (actual time=0.0323..0.0323 rows=0 loops=1)
                        -> Materialize CTE v1 if needed  (cost=20.8..20.8 rows=0.118 height=1) (actual time=0.032..0.032 rows=0 loops=1)
                            -> Window aggregate: rank() OVER (PARTITION BY item.i_category,item.i_brand,call_center.cc_name ORDER BY date_dim.d_year,date_dim.d_moy )   (cost=17.8..17.8 rows=0.118 height=1) (actual time=0.0279..0.0279 rows=0 loops=1)
                                -> Window aggregate with buffering: avg(`sum(catalog_sales.cs_sales_price)`) OVER (PARTITION BY item.i_category,item.i_brand,call_center.cc_name,date_dim.d_year )   (cost=17.7..17.7 rows=0.118 height=1) (actual time=0.0277..0.0277 rows=0 loops=1)
                                    -> Stream results  (cost=17.7..17.7 rows=0.118 height=1) (actual time=0.0268..0.0268 rows=0 loops=1)
                                        -> Group aggregate: sum(catalog_sales.cs_sales_price), sum(catalog_sales.cs_sales_price)  (cost=17.6..17.6 rows=0.118 height=1) (actual time=0.0267..0.0267 rows=0 loops=1)
                                            -> Sort: item.i_category, item.i_brand, call_center.cc_name, date_dim.d_year, date_dim.d_moy  (cost=17.6..17.6 rows=0.118 height=1) (actual time=0.0264..0.0264 rows=0 loops=1)
                                                -> Inner hash join (call_center.cc_call_center_sk = catalog_sales.cs_call_center_sk) (fill_ratio=0)  (cost=17.2..17.2 rows=0.118 height=1) (actual time=0.024..0.024 rows=0 loops=1)
                                                    -> Table scan on call_center  (cost=6.76..6.76 rows=1 height=1) (actual time=0.0152..0.0152 rows=1 loops=1)
                                                    -> Hash
                                                        -> Inner hash join (catalog_sales.cs_sold_date_sk = date_dim.d_date_sk) (fill_ratio=0)  (cost=10.1..10.1 rows=0.118 height=1) (actual time=0.00758..0.00758 rows=0 loops=1)
                                                            -> Nested loop inner join  (cost=8.72..8.72 rows=1 height=1) (never executed)
                                                                -> Table scan on catalog_sales  (cost=0.747..0.747 rows=1 height=1) (never executed)
                                                                -> Single-row index lookup on item using PRIMARY (i_item_sk = catalog_sales.cs_item_sk)  (cost=7.97..7.97 rows=1 height=1) (never executed)
                                                            -> Hash
                                                                -> Filter: ((date_dim.d_year = 2000) or ((date_dim.d_year = <cache>((2000 - 1))) and (date_dim.d_moy = 12)) or ((date_dim.d_year = <cache>((2000 + 1))) and (date_dim.d_moy = 1)))  (cost=0.961..0.961 rows=0.118 height=1) (actual time=0.00646..0.00646 rows=0 loops=1)
                                                                    -> Table scan on date_dim  (cost=0.903..0.903 rows=1 height=1) (actual time=0.00262..0.00496 rows=1 loops=1)
                -> Filter: (v1.rn = (v1_lead.rn - 1))  (cost=20.8..20.8 rows=11.8e-6 height=1) (never executed)
                    -> Index lookup on v1_lead using <auto_key0> (i_category = v1.i_category, i_brand = v1.i_brand, cc_name = v1.cc_name)  (cost=20.8..20.8 rows=118e-6 height=1) (never executed)
                        -> Materialize CTE v1 if needed (query plan printed elsewhere)  (cost=20.8..20.8 rows=0.118 height=1) (never executed)
        -> Filter: (v1.rn = (v1_lag.rn + 1))  (cost=20.8..20.8 rows=11.8e-6 height=1) (never executed)
            -> Index lookup on v1_lag using <auto_key0> (i_category = v1.i_category, i_brand = v1.i_brand, cc_name = v1.cc_name)  (cost=20.8..20.8 rows=118e-6 height=1) (never executed)
                -> Materialize CTE v1 if needed (query plan printed elsewhere)  (cost=20.8..20.8 rows=0.118 height=1) (never executed)
