Executing: ../mysql-server-build/build-release/bin/mysql -uroot --local-infile=1 --port=13000 --host=127.0.0.1 tpcds_s10 with input size: 2169 bytes
EXPLAIN
-> Limit: 100 row(s)  (cost=7.41e+6..7.41e+6 rows=1.81 height=1) (actual time=0.0229..0.0229 rows=0 loops=1)
    -> Filter: (store.s_store_id = store.s_store_id)  (cost=7.41e+6..7.41e+6 rows=1.81 height=1) (actual time=0.0227..0.0227 rows=0 loops=1)
        -> Nested loop inner join  (cost=7.41e+6..7.41e+6 rows=18.1 height=1) (actual time=0.0224..0.0224 rows=0 loops=1)
            -> Sort: s_store_name1, s_store_id1, d_week_seq1  (cost=7.41e+6..7.41e+6 rows=18.1 height=1) (actual time=0.0222..0.0222 rows=0 loops=1)
                -> Inner hash join (wss.d_week_seq = (wss.d_week_seq - 52)) (fill_ratio=0)  (cost=7.41e+6..7.41e+6 rows=18.1 height=1) (actual time=0.0198..0.0198 rows=0 loops=1)
                    -> Inner hash join (wss.ss_store_sk = store.s_store_sk) (fill_ratio=0)  (cost=3.71e+6..3.71e+6 rows=13.4 height=1) (never executed)
                        -> Inner hash join (d.d_week_seq = wss.d_week_seq) (fill_ratio=0)  (cost=3.71e+6..3.71e+6 rows=13.4 height=1) (never executed)
                            -> Table scan on wss  (cost=3.71e+6..3.71e+6 rows=1210 height=1) (never executed)
                                -> Materialize CTE wss if needed  (cost=3.71e+6..3.71e+6 rows=1210 height=1) (never executed)
                                    -> Group aggregate: sum((case when (date_dim.d_day_name = 'Sunday') then store_sales.ss_sales_price else NULL end)), sum((case when (date_dim.d_day_name = 'Monday') then store_sales.ss_sales_price else NULL end)), sum((case when (date_dim.d_day_name = 'Tuesday') then store_sales.ss_sales_price else NULL end)), sum((case when (date_dim.d_day_name = 'Wednesday') then store_sales.ss_sales_price else NULL end)), sum((case when (date_dim.d_day_name = 'Thursday') then store_sales.ss_sales_price else NULL end)), sum((case when (date_dim.d_day_name = 'Friday') then store_sales.ss_sales_price else NULL end)), sum((case when (date_dim.d_day_name = 'Saturday') then store_sales.ss_sales_price else NULL end))  (cost=2.84e+6..3.71e+6 rows=1210 height=1) (never executed)
                                        -> Sort: date_dim.d_week_seq, store_sales.ss_store_sk  (cost=2.84e+6..2.84e+6 rows=1.46e+6 height=1) (never executed)
                                            -> Inner hash join (date_dim.d_date_sk = store_sales.ss_sold_date_sk) (fill_ratio=0)  (cost=3.34..1.37e+6 rows=1.46e+6 height=1) (never executed)
                                                -> Table scan on store_sales  (cost=0.59..863808 rows=1.46e+6 height=1) (never executed)
                                                -> Hash
                                                    -> Table scan on date_dim  (cost=0.903..0.903 rows=1 height=1) (never executed)
                            -> Hash
                                -> Filter: (d.d_month_seq between 1185 and <cache>((1185 + 11)))  (cost=0.915..0.915 rows=0.111 height=1) (never executed)
                                    -> Table scan on d  (cost=0.857..0.857 rows=1 height=1) (never executed)
                        -> Hash
                            -> Table scan on store  (cost=6.8..13.6 rows=2 height=1) (never executed)
                    -> Hash
                        -> Inner hash join (d.d_week_seq = wss.d_week_seq) (fill_ratio=0)  (cost=3.71e+6..3.71e+6 rows=13.4 height=1) (actual time=0.0182..0.0182 rows=0 loops=1)
                            -> Table scan on wss  (cost=3.71e+6..3.71e+6 rows=1210 height=1) (never executed)
                                -> Materialize CTE wss if needed (query plan printed elsewhere)  (cost=3.71e+6..3.71e+6 rows=1210 height=1) (never executed)
                            -> Hash
                                -> Filter: (d.d_month_seq between <cache>((1185 + 12)) and <cache>((1185 + 23)))  (cost=0.915..0.915 rows=0.111 height=1) (actual time=0.0169..0.0169 rows=0 loops=1)
                                    -> Table scan on d  (cost=0.857..0.857 rows=1 height=1) (actual time=0.0139..0.0158 rows=1 loops=1)
            -> Single-row index lookup on store using PRIMARY (s_store_sk = wss.ss_store_sk)  (cost=8.06..8.06 rows=1 height=1) (never executed)
