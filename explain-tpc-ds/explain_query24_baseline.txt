Executing: ../mysql-server-build/build-release/bin/mysql -uroot --local-infile=1 --port=13000 --host=127.0.0.1 tpcds_s10 with input size: 2477 bytes
EXPLAIN
-> Filter: (sum(ssales.netpaid) > (select #3))  (cost=968814..968835 rows=31.6 height=1) (actual time=0.221..0.221 rows=0 loops=1)
    -> Group aggregate: sum(ssales.netpaid), sum(ssales.netpaid)  (cost=484352..484371 rows=31.6 height=1) (actual time=0.221..0.221 rows=0 loops=1)
        -> Sort: ssales.c_last_name, ssales.c_first_name, ssales.s_store_name  (cost=484352..484352 rows=46.4 height=1) (actual time=0.22..0.22 rows=0 loops=1)
            -> Filter: (ssales.i_color = 'orchid')  (cost=484325..484327 rows=46.4 height=1) (actual time=0.219..0.219 rows=0 loops=1)
                -> Index lookup on ssales using <auto_key0> (i_color = 'orchid')  (cost=484322..484325 rows=46.4 height=1) (actual time=0.218..0.218 rows=0 loops=1)
                    -> Materialize CTE ssales if needed  (cost=484322..484322 rows=464 height=1) (actual time=0.217..0.217 rows=0 loops=1)
                        -> Group aggregate: sum(store_sales.ss_sales_price)  (cost=483753..484107 rows=464 height=1) (actual time=0.212..0.212 rows=0 loops=1)
                            -> Sort: customer.c_last_name, customer.c_first_name, store.s_store_name, customer_address.ca_state, store.s_state, item.i_color, item.i_current_price, item.i_manager_id, item.i_units, item.i_size  (cost=483752..483752 rows=919 height=1) (actual time=0.211..0.211 rows=0 loops=1)
                                -> Inner hash join (store_sales.ss_store_sk = store.s_store_sk), (store_sales.ss_customer_sk = customer.c_customer_sk) (fill_ratio=0)  (cost=63494..483143 rows=919 height=1) (actual time=0.208..0.208 rows=0 loops=1)
                                    -> Nested loop inner join  (cost=3.9..398573 rows=102101 height=1) (actual time=0.0495..0.0495 rows=1 loops=1)
                                        -> Nested loop inner join  (cost=0.52..53053 rows=102101 height=1) (actual time=0.0381..0.039 rows=3 loops=1)
                                            -> Table scan on item  (cost=5.65..1412 rows=250 height=1) (actual time=0.0268..0.0268 rows=1 loops=1)
                                            -> Covering index lookup on store_returns using PRIMARY (sr_item_sk = item.i_item_sk)  (cost=0.506..207 rows=408 height=1) (actual time=0.0108..0.0116 rows=3 loops=1)
                                        -> Single-row index lookup on store_sales using PRIMARY (ss_item_sk = store_returns.sr_item_sk, ss_ticket_number = store_returns.sr_ticket_number)  (cost=3.38..3.38 rows=1 height=1) (actual time=0.00331..0.00331 rows=0.333 loops=3)
                                    -> Hash
                                        -> Inner hash join (customer.c_current_addr_sk = customer_address.ca_address_sk), extra conditions: (customer.c_birth_country <> upper(customer_address.ca_country)) (fill_ratio=0)  (cost=23134..62564 rows=315 height=1) (actual time=0.156..0.156 rows=0 loops=1)
                                            -> Table scan on customer  (cost=2.05..35860 rows=17526 height=1) (actual time=0.116..0.116 rows=1 loops=1)
                                            -> Hash
                                                -> Inner hash join (store.s_zip = customer_address.ca_zip) (fill_ratio=0)  (cost=164..22781 rows=152 height=1) (actual time=0.0386..0.0386 rows=0 loops=1)
                                                    -> Table scan on customer_address  (cost=2.79..21174 rows=7582 height=1) (actual time=0.03..0.03 rows=1 loops=1)
                                                    -> Hash
                                                        -> Filter: (store.s_market_id = 7)  (cost=13.9..13.9 rows=0.2 height=1) (actual time=0.00698..0.00698 rows=0 loops=1)
                                                            -> Table scan on store  (cost=6.89..13.8 rows=2 height=1) (actual time=0.00471..0.00624 rows=2 loops=1)
    -> Select #3 (subquery in condition; run only once)
        -> Aggregate: avg(ssales.netpaid)  (cost=484462..484462 rows=1 height=1) (never executed)
            -> Table scan on ssales  (cost=484325..484402 rows=464 height=1) (never executed)
                -> Materialize CTE ssales if needed (query plan printed elsewhere)  (cost=484325..484325 rows=464 height=1) (never executed)
