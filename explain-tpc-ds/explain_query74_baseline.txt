Executing: ../mysql-server-build/build-release/bin/mysql -uroot --local-infile=1 --port=13000 --host=127.0.0.1 tpcds_s10 with input size: 2170 bytes
EXPLAIN
-> Sort: t_s_secyear.customer_first_name, t_s_secyear.customer_id, t_s_secyear.customer_last_name, limit input to 100 row(s) per chunk  (cost=43.6e+6..43.6e+6 rows=100 height=1) (actual time=8.11..8.11 rows=0 loops=1)
    -> Inner hash join (t_s_firstyear.customer_id = t_s_secyear.customer_id), extra conditions: ((case when (t_w_firstyear.year_total > 0.00) then (t_w_secyear.year_total / t_w_firstyear.year_total) else NULL end) > (case when (t_s_firstyear.year_total > 0.00) then (t_s_secyear.year_total / t_s_firstyear.year_total) else NULL end)) (fill_ratio=0)  (cost=7.51e+6..20.6e+6 rows=66.6e+6 height=1) (actual time=8.1..8.1 rows=0 loops=1)
        -> Inner hash join (t_s_firstyear.customer_id = t_w_secyear.customer_id) (fill_ratio=0)  (cost=3.73e+6..3.75e+6 rows=25806 height=1) (never executed)
            -> Filter: ((t_w_secyear.`year` = <cache>((2001 + 1))) and (t_w_secyear.sale_type = 'w'))  (cost=1.85e+6..1.87e+6 rows=880 height=1) (never executed)
                -> Table scan on t_w_secyear  (cost=1.85e+6..1.87e+6 rows=87991 height=1) (never executed)
                    -> Materialize union CTE year_total if needed (query plan printed elsewhere)  (cost=1.85e+6..1.85e+6 rows=87991 height=1) (never executed)
            -> Hash
                -> Filter: ((t_s_firstyear.`year` = 2001) and (t_s_firstyear.year_total > 0.00) and (t_s_firstyear.sale_type = 's'))  (cost=1.85e+6..1.87e+6 rows=293 height=1) (never executed)
                    -> Table scan on t_s_firstyear  (cost=1.85e+6..1.87e+6 rows=87991 height=1) (never executed)
                        -> Materialize union CTE year_total if needed (query plan printed elsewhere)  (cost=1.85e+6..1.85e+6 rows=87991 height=1) (never executed)
        -> Hash
            -> Inner hash join (t_s_secyear.customer_id = t_w_firstyear.customer_id) (fill_ratio=0)  (cost=3.73e+6..3.75e+6 rows=25806 height=1) (actual time=8.1..8.1 rows=0 loops=1)
                -> Filter: ((t_s_secyear.`year` = <cache>((2001 + 1))) and (t_s_secyear.sale_type = 's'))  (cost=1.85e+6..1.87e+6 rows=880 height=1) (actual time=8.1..8.1 rows=0 loops=1)
                    -> Table scan on t_s_secyear  (cost=1.85e+6..1.87e+6 rows=87991 height=1) (actual time=8.1..8.1 rows=0 loops=1)
                        -> Materialize union CTE year_total if needed  (cost=1.85e+6..1.85e+6 rows=87991 height=1) (actual time=8.1..8.1 rows=0 loops=1)
                            -> Group aggregate: max(store_sales.ss_net_paid)  (cost=1.75e+6..1.82e+6 rows=87991 height=1) (actual time=8.09..8.09 rows=0 loops=1)
                                -> Sort: customer.c_customer_id, customer.c_first_name, customer.c_last_name, date_dim.d_year  (cost=1.75e+6..1.75e+6 rows=311761 height=1) (actual time=8.09..8.09 rows=0 loops=1)
                                    -> Inner hash join (customer.c_customer_sk = store_sales.ss_customer_sk) (fill_ratio=0.316365)  (cost=61306..1.45e+6 rows=311761 height=1) (actual time=8.09..8.09 rows=0 loops=1)
                                        -> Inner hash join (store_sales.ss_sold_date_sk = date_dim.d_date_sk) (fill_ratio=0)  (cost=5.34..1.29e+6 rows=311761 height=1) (actual time=0.342..0.342 rows=0 loops=1)
                                            -> Table scan on store_sales  (cost=0.59..919479 rows=1.56e+6 height=1) (actual time=0.335..0.335 rows=1 loops=1)
                                            -> Hash
                                                -> Filter: (date_dim.d_year in (2001,<cache>((2001 + 1))))  (cost=0.915..0.915 rows=0.2 height=1) (actual time=0.00506..0.00506 rows=0 loops=1)
                                                    -> Table scan on date_dim  (cost=0.857..0.857 rows=1 height=1) (actual time=0.00336..0.00392 rows=1 loops=1)
                                        -> Hash
                                            -> Table scan on customer  (cost=2..35052 rows=17526 height=1) (actual time=0.0973..4.78 rows=17666 loops=1)
                            -> Group aggregate: max(web_sales.ws_net_paid)  (cost=7.77..7.77 rows=0.2 height=1) (actual time=0.00499..0.00499 rows=0 loops=1)
                                -> Sort: customer.c_customer_id, customer.c_first_name, customer.c_last_name, date_dim.d_year  (cost=7.68..7.68 rows=0.2 height=1) (actual time=0.00484..0.00484 rows=0 loops=1)
                                    -> Inner hash join (web_sales.ws_sold_date_sk = date_dim.d_date_sk) (fill_ratio=0)  (cost=7.33..7.33 rows=0.2 height=1) (actual time=0.00376..0.00376 rows=0 loops=1)
                                        -> Nested loop inner join  (cost=5.88..5.88 rows=1 height=1) (never executed)
                                            -> Table scan on web_sales  (cost=0.7..0.7 rows=1 height=1) (never executed)
                                            -> Single-row index lookup on customer using PRIMARY (c_customer_sk = web_sales.ws_bill_customer_sk)  (cost=5.18..5.18 rows=1 height=1) (never executed)
                                        -> Hash
                                            -> Filter: (date_dim.d_year in (2001,<cache>((2001 + 1))))  (cost=0.915..0.915 rows=0.2 height=1) (actual time=0.00274..0.00274 rows=0 loops=1)
                                                -> Table scan on date_dim  (cost=0.857..0.857 rows=1 height=1) (actual time=0.00217..0.00254 rows=1 loops=1)
                -> Hash
                    -> Filter: ((t_w_firstyear.`year` = 2001) and (t_w_firstyear.year_total > 0.00) and (t_w_firstyear.sale_type = 'w'))  (cost=1.85e+6..1.87e+6 rows=293 height=1) (never executed)
                        -> Table scan on t_w_firstyear  (cost=1.85e+6..1.87e+6 rows=87991 height=1) (never executed)
                            -> Materialize union CTE year_total if needed (query plan printed elsewhere)  (cost=1.85e+6..1.85e+6 rows=87991 height=1) (never executed)
