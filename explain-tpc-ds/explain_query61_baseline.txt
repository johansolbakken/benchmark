Executing: ../mysql-server-build/build-release/bin/mysql -uroot --local-infile=1 --port=13000 --host=127.0.0.1 tpcds_s10 with input size: 1402 bytes
EXPLAIN
-> Sort: promotional_sales.promotions, all_sales.total, limit input to 100 row(s) per chunk  (cost=279874..279874 rows=1 height=1) (actual time=0.0469..0.047 rows=1 loops=1)
    -> Inner hash join (no condition) (fill_ratio=9.53674e-07)  (cost=279874..279874 rows=1 height=1) (actual time=0.0416..0.0423 rows=1 loops=1)
        -> Table scan on promotional_sales  (cost=142802..142802 rows=1 height=1) (actual time=0.00808..0.00817 rows=1 loops=1)
            -> Materialize  (cost=142802..142802 rows=1 height=1) (actual time=0.00789..0.00789 rows=1 loops=1)
                -> Aggregate: sum(store_sales.ss_ext_sales_price)  (cost=142799..142799 rows=1 height=1) (actual time=0.00617..0.00622 rows=1 loops=1)
                    -> Nested loop inner join  (cost=33838..142798 rows=4.22 height=1) (actual time=0.00582..0.00582 rows=0 loops=1)
                        -> Nested loop inner join  (cost=3418..142549 rows=42.2 height=1) (actual time=0.00574..0.00574 rows=0 loops=1)
                            -> Inner hash join (store_sales.ss_store_sk = store.s_store_sk) (fill_ratio=0)  (cost=3413..142333 rows=42.2 height=1) (actual time=0.00566..0.00566 rows=0 loops=1)
                                -> Inner hash join (store_sales.ss_promo_sk = promotion.p_promo_sk) (fill_ratio=0)  (cost=368..142226 rows=422 height=1) (never executed)
                                    -> Inner hash join (store_sales.ss_sold_date_sk = date_dim.d_date_sk) (fill_ratio=0)  (cost=92..141814 rows=1559 height=1) (never executed)
                                        -> Nested loop inner join  (cost=0.701..109272 rows=155880 height=1) (never executed)
                                            -> Filter: (item.i_category = 'Books')  (cost=55.2..1381 rows=25 height=1) (never executed)
                                                -> Table scan on item  (cost=5.47..1366 rows=250 height=1) (never executed)
                                            -> Index lookup on store_sales using PRIMARY (ss_item_sk = item.i_item_sk)  (cost=0.692..4316 rows=6235 height=1) (never executed)
                                        -> Hash
                                            -> Filter: ((date_dim.d_year = 1999) and (date_dim.d_moy = 11))  (cost=0.967..0.967 rows=0.01 height=1) (never executed)
                                                -> Table scan on date_dim  (cost=0.903..0.903 rows=1 height=1) (never executed)
                                    -> Hash
                                        -> Filter: ((promotion.p_channel_dmail = 'Y') or (promotion.p_channel_email = 'Y') or (promotion.p_channel_tv = 'Y'))  (cost=8.54..25.5 rows=2.98 height=1) (never executed)
                                            -> Table scan on promotion  (cost=2.26..24.8 rows=11 height=1) (never executed)
                                -> Hash
                                    -> Filter: (store.s_gmt_offset = -7.00)  (cost=13.6..13.6 rows=0.2 height=1) (actual time=0.00472..0.00472 rows=0 loops=1)
                                        -> Table scan on store  (cost=6.76..13.5 rows=2 height=1) (actual time=0.00378..0.00438 rows=2 loops=1)
                            -> Single-row index lookup on customer using PRIMARY (c_customer_sk = store_sales.ss_customer_sk)  (cost=5.1..5.1 rows=1 height=1) (never executed)
                        -> Filter: (customer_address.ca_gmt_offset = -7.00)  (cost=5.91..5.91 rows=0.1 height=1) (never executed)
                            -> Single-row index lookup on customer_address using PRIMARY (ca_address_sk = customer.c_current_addr_sk)  (cost=5.85..5.85 rows=1 height=1) (never executed)
        -> Hash
            -> Table scan on all_sales  (cost=137069..137069 rows=1 height=1) (actual time=0.0299..0.03 rows=1 loops=1)
                -> Materialize  (cost=137069..137069 rows=1 height=1) (actual time=0.0294..0.0294 rows=1 loops=1)
                    -> Aggregate: sum(store_sales.ss_ext_sales_price)  (cost=137066..137066 rows=1 height=1) (actual time=0.0226..0.0227 rows=1 loops=1)
                        -> Nested loop inner join  (cost=8807..137064 rows=15.6 height=1) (actual time=0.0211..0.0211 rows=0 loops=1)
                            -> Nested loop inner join  (cost=888..136143 rows=156 height=1) (actual time=0.0209..0.0209 rows=0 loops=1)
                                -> Inner hash join (store_sales.ss_store_sk = store.s_store_sk) (fill_ratio=0)  (cost=883..135349 rows=156 height=1) (actual time=0.0207..0.0207 rows=0 loops=1)
                                    -> Inner hash join (store_sales.ss_sold_date_sk = date_dim.d_date_sk) (fill_ratio=0)  (cost=87.6..134990 rows=1559 height=1) (never executed)
                                        -> Nested loop inner join  (cost=0.657..102448 rows=155880 height=1) (never executed)
                                            -> Filter: (item.i_category = 'Books')  (cost=55.2..1381 rows=25 height=1) (never executed)
                                                -> Table scan on item  (cost=5.47..1366 rows=250 height=1) (never executed)
                                            -> Index lookup on store_sales using PRIMARY (ss_item_sk = item.i_item_sk)  (cost=0.648..4043 rows=6235 height=1) (never executed)
                                        -> Hash
                                            -> Filter: ((date_dim.d_year = 1999) and (date_dim.d_moy = 11))  (cost=0.967..0.967 rows=0.01 height=1) (never executed)
                                                -> Table scan on date_dim  (cost=0.903..0.903 rows=1 height=1) (never executed)
                                    -> Hash
                                        -> Filter: (store.s_gmt_offset = -7.00)  (cost=13.6..13.6 rows=0.2 height=1) (actual time=0.0185..0.0185 rows=0 loops=1)
                                            -> Table scan on store  (cost=6.76..13.5 rows=2 height=1) (actual time=0.0155..0.0171 rows=2 loops=1)
                                -> Single-row index lookup on customer using PRIMARY (c_customer_sk = store_sales.ss_customer_sk)  (cost=5.1..5.1 rows=1 height=1) (never executed)
                            -> Filter: (customer_address.ca_gmt_offset = -7.00)  (cost=5.91..5.91 rows=0.1 height=1) (never executed)
                                -> Single-row index lookup on customer_address using PRIMARY (ca_address_sk = customer.c_current_addr_sk)  (cost=5.85..5.85 rows=1 height=1) (never executed)
