Executing: ../mysql-server-build/build-release/bin/mysql -uroot --local-infile=1 --port=13000 --host=127.0.0.1 tpcds_s10 with input size: 3243 bytes
EXPLAIN
-> Sort: sales_cnt_diff, sales_amt_diff, limit input to 100 row(s) per chunk  (cost=1.9e+6..1.9e+6 rows=100 height=1) (actual time=0.897..0.897 rows=0 loops=1)
    -> Inner hash join (curr_yr.i_brand_id = prev_yr.i_brand_id), (curr_yr.i_class_id = prev_yr.i_class_id), (curr_yr.i_category_id = prev_yr.i_category_id), (curr_yr.i_manufact_id = prev_yr.i_manufact_id), extra conditions: ((cast(curr_yr.sales_cnt as decimal(17,2)) / cast(prev_yr.sales_cnt as decimal(17,2))) < 0.9) (fill_ratio=0)  (cost=1.9e+6..1.9e+6 rows=2223 height=1) (actual time=0.893..0.893 rows=0 loops=1)
        -> Index lookup on curr_yr using <auto_key0> (d_year = 2002)  (cost=946437..946437 rows=4715 height=1) (never executed)
            -> Materialize CTE all_sales if needed (query plan printed elsewhere)  (cost=946437..946437 rows=47153 height=1) (never executed)
        -> Hash
            -> Index lookup on prev_yr using <auto_key0> (d_year = (2002 - 1))  (cost=946437..946437 rows=4715 height=1) (actual time=0.891..0.891 rows=0 loops=1)
                -> Materialize CTE all_sales if needed  (cost=946437..946437 rows=47153 height=1) (actual time=0.889..0.889 rows=0 loops=1)
                    -> Group aggregate: sum(sales_detail.sales_cnt), sum(sales_detail.sales_amt)  (cost=876875..930333 rows=47153 height=1) (actual time=0.885..0.885 rows=0 loops=1)
                        -> Sort: sales_detail.d_year, sales_detail.i_brand_id, sales_detail.i_class_id, sales_detail.i_category_id, sales_detail.i_manufact_id  (cost=876874..876874 rows=155881 height=1) (actual time=0.884..0.884 rows=0 loops=1)
                            -> Table scan on sales_detail  (cost=710278..736258 rows=155881 height=1) (actual time=0.881..0.881 rows=0 loops=1)
                                -> Union materialize with deduplication  (cost=710278..710278 rows=155881 height=1) (actual time=0.88..0.88 rows=0 loops=1)
                                    -> Inner hash join (date_dim.d_date_sk = catalog_sales.cs_sold_date_sk) (fill_ratio=0)  (cost=13.6..13.6 rows=0.1 height=1) (actual time=0.0386..0.0386 rows=0 loops=1)
                                        -> Table scan on date_dim  (cost=0.857..0.857 rows=1 height=1) (actual time=0.0141..0.0141 rows=1 loops=1)
                                        -> Hash
                                            -> Nested loop inner join  (cost=12.3..12.3 rows=0.1 height=1) (actual time=0.0214..0.0214 rows=0 loops=1)
                                                -> Nested loop left join  (cost=4.19..4.19 rows=1 height=1) (actual time=0.0138..0.016 rows=1 loops=1)
                                                    -> Table scan on catalog_sales  (cost=0.793..0.793 rows=1 height=1) (actual time=0.00434..0.00641 rows=1 loops=1)
                                                    -> Single-row index lookup on catalog_returns using PRIMARY (cr_item_sk = catalog_sales.cs_item_sk, cr_order_number = catalog_sales.cs_order_number)  (cost=3.39..3.39 rows=1 height=1) (actual time=0.00904..0.00904 rows=0 loops=1)
                                                -> Filter: (item.i_category = 'Sports')  (cost=8.16..8.16 rows=0.1 height=1) (actual time=0.00489..0.00489 rows=0 loops=1)
                                                    -> Single-row index lookup on item using PRIMARY (i_item_sk = catalog_sales.cs_item_sk)  (cost=8.1..8.1 rows=1 height=1) (actual time=0.00477..0.00477 rows=0 loops=1)
                                    -> Inner hash join (date_dim.d_date_sk = store_sales.ss_sold_date_sk) (fill_ratio=6.19888e-06)  (cost=6.68..674333 rows=155880 height=1) (actual time=0.821..0.821 rows=0 loops=1)
                                        -> Nested loop left join  (cost=3.98..620455 rows=155880 height=1) (actual time=0.0365..0.796 rows=269 loops=1)
                                            -> Nested loop inner join  (cost=0.658..102494 rows=155880 height=1) (actual time=0.0309..0.35 rows=269 loops=1)
                                                -> Filter: (item.i_category = 'Sports')  (cost=57.1..1427 rows=25 height=1) (actual time=0.0185..0.138 rows=22 loops=1)
                                                    -> Table scan on item  (cost=5.65..1412 rows=250 height=1) (actual time=0.0148..0.114 rows=250 loops=1)
                                                -> Index lookup on store_sales using PRIMARY (ss_item_sk = item.i_item_sk)  (cost=0.648..4043 rows=6235 height=1) (actual time=0.00676..0.00916 rows=12.2 loops=22)
                                            -> Single-row index lookup on store_returns using PRIMARY (sr_item_sk = store_sales.ss_item_sk, sr_ticket_number = store_sales.ss_ticket_number)  (cost=3.32..3.32 rows=1 height=1) (actual time=0.00154..0.00154 rows=0 loops=269)
                                        -> Hash
                                            -> Table scan on date_dim  (cost=0.857..0.857 rows=1 height=1) (actual time=0.00226..0.00289 rows=1 loops=1)
                                    -> Inner hash join (date_dim.d_date_sk = web_sales.ws_sold_date_sk) (fill_ratio=0)  (cost=13.5..13.5 rows=0.1 height=1) (actual time=0.0176..0.0176 rows=0 loops=1)
                                        -> Table scan on date_dim  (cost=0.857..0.857 rows=1 height=1) (actual time=0.00245..0.00245 rows=1 loops=1)
                                        -> Hash
                                            -> Nested loop inner join  (cost=12.3..12.3 rows=0.1 height=1) (actual time=0.0135..0.0135 rows=0 loops=1)
                                                -> Nested loop left join  (cost=4.15..4.15 rows=1 height=1) (actual time=0.00942..0.0101 rows=1 loops=1)
                                                    -> Table scan on web_sales  (cost=0.793..0.793 rows=1 height=1) (actual time=0.00409..0.00476 rows=1 loops=1)
                                                    -> Single-row index lookup on web_returns using PRIMARY (wr_item_sk = web_sales.ws_item_sk, wr_order_number = web_sales.ws_order_number)  (cost=3.36..3.36 rows=1 height=1) (actual time=0.0051..0.0051 rows=0 loops=1)
                                                -> Filter: (item.i_category = 'Sports')  (cost=8.16..8.16 rows=0.1 height=1) (actual time=0.00314..0.00314 rows=0 loops=1)
                                                    -> Single-row index lookup on item using PRIMARY (i_item_sk = web_sales.ws_item_sk)  (cost=8.1..8.1 rows=1 height=1) (actual time=0.00305..0.00305 rows=0 loops=1)
