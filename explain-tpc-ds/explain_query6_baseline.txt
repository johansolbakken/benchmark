Executing: ../mysql-server-build/build-release/bin/mysql -uroot --local-infile=1 --port=13000 --host=127.0.0.1 tpcds_s10 with input size: 822 bytes
EXPLAIN
-> Sort: cnt, a.state, limit input to 100 row(s) per chunk  (cost=880759..880759 rows=87.1 height=1) (actual time=0.124..0.124 rows=0 loops=1)
    -> Filter: (`count(0)` >= 10)  (cost=880692..880711 rows=87.1 height=1) (actual time=0.123..0.123 rows=0 loops=1)
        -> Table scan on <temporary>  (cost=880692..880706 rows=87.1 height=1) (actual time=0.123..0.123 rows=0 loops=1)
            -> Aggregate using temporary table  (cost=880692..880692 rows=87.1 height=1) (actual time=0.122..0.122 rows=0 loops=1)
                -> Inner hash join (c.c_customer_sk = s.ss_customer_sk) (fill_ratio=0)  (cost=97542..843552 rows=48809 height=1) (actual time=0.121..0.121 rows=0 loops=1)
                    -> Inner hash join (s.ss_sold_date_sk = d.d_date_sk) (fill_ratio=0)  (cost=17.3..729158 rows=48809 height=1) (actual time=0.12..0.12 rows=0 loops=1)
                        -> Nested loop inner join  (cost=1.27..621191 rows=488093 height=1) (actual time=0.11..0.11 rows=1 loops=1)
                            -> Filter: (i.i_current_price > (1.2 * (select #3)))  (cost=4170..347451 rows=83.3 height=1) (actual time=0.0988..0.0988 rows=1 loops=1)
                                -> Table scan on i  (cost=5.51..1378 rows=250 height=1) (actual time=0.0221..0.0221 rows=1 loops=1)
                                -> Select #3 (subquery in condition; dependent)
                                    -> Aggregate: avg(j.i_current_price)  (cost=1384..1384 rows=1 height=1) (actual time=0.0708..0.0709 rows=1 loops=1)
                                        -> Filter: (j.i_category = i.i_category)  (cost=55.2..1381 rows=25 height=1) (actual time=0.00979..0.0676 rows=29 loops=1)
                                            -> Table scan on j  (cost=5.47..1366 rows=250 height=1) (actual time=0.00825..0.0496 rows=250 loops=1)
                            -> Index lookup on s using PRIMARY (ss_item_sk = i.i_item_sk)  (cost=0.561..3285 rows=5858 height=1) (actual time=0.0105..0.0105 rows=1 loops=1)
                        -> Hash
                            -> Filter: (d.d_month_seq = (select #2))  (cost=2.23..2.23 rows=0.1 height=1) (actual time=0.00921..0.00921 rows=0 loops=1)
                                -> Table scan on d  (cost=0.857..0.857 rows=1 height=1) (actual time=0.00217..0.00238 rows=1 loops=1)
                                -> Select #2 (subquery in condition; run only once)
                                    -> Sort with duplicate removal: date_dim.d_month_seq  (cost=1.31..1.31 rows=0.01 height=1) (actual time=0.00442..0.00442 rows=0 loops=1)
                                        -> Filter: ((date_dim.d_year = 2000) and (date_dim.d_moy = 2))  (cost=0.967..0.967 rows=0.01 height=1) (actual time=0.00225..0.00225 rows=0 loops=1)
                                            -> Table scan on date_dim  (cost=0.903..0.903 rows=1 height=1) (actual time=0.00154..0.00196 rows=1 loops=1)
                    -> Hash
                        -> Inner hash join (a.ca_address_sk = c.c_current_addr_sk) (fill_ratio=0)  (cost=31833..71295 rows=17513 height=1) (never executed)
                            -> Table scan on c  (cost=1.91..33412 rows=17513 height=1) (never executed)
                            -> Hash
                                -> Table scan on a  (cost=2.7..20475 rows=7582 height=1) (never executed)
