Executing: ../mysql-server-build/build-release/bin/mysql -uroot --local-infile=1 --port=13000 --host=127.0.0.1 tpcds_s10 with input size: 1742 bytes
EXPLAIN
-> Limit: 100 row(s)  (cost=87998..88083 rows=11.4 height=1) (actual time=0.715..0.715 rows=0 loops=1)
    -> Group aggregate: sum((case when ((store_returns.sr_returned_date_sk - store_sales.ss_sold_date_sk) <= 30) then 1 else 0 end)), sum((case when (((store_returns.sr_returned_date_sk - store_sales.ss_sold_date_sk) > 30) and ((store_returns.sr_returned_date_sk - store_sales.ss_sold_date_sk) <= 60)) then 1 else 0 end)), sum((case when (((store_returns.sr_returned_date_sk - store_sales.ss_sold_date_sk) > 60) and ((store_returns.sr_returned_date_sk - store_sales.ss_sold_date_sk) <= 90)) then 1 else 0 end)), sum((case when (((store_returns.sr_returned_date_sk - store_sales.ss_sold_date_sk) > 90) and ((store_returns.sr_returned_date_sk - store_sales.ss_sold_date_sk) <= 120)) then 1 else 0 end)), sum((case when ((store_returns.sr_returned_date_sk - store_sales.ss_sold_date_sk) > 120) then 1 else 0 end))  (cost=87998..88083 rows=11.4 height=1) (actual time=0.715..0.715 rows=0 loops=1)
        -> Inner hash join (store_sales.ss_sold_date_sk = d1.d_date_sk)  (optimistic hash join, o_level=0.8, o_func=LINEAR, went_on_disk=false) (fill_ratio=2.38419e-06)  (cost=87990..88025 rows=102 height=1) (actual time=0.714..0.714 rows=0 loops=1)
            -> Sort: store.s_store_name, store.s_company_id, store.s_street_number, store.s_street_name, store.s_street_type, store.s_suite_number, store.s_city, store.s_county, store.s_state, store.s_zip  (cost=87988..87988 rows=102 height=1) (actual time=0.693..0.693 rows=0 loops=1)
                -> Inner hash join (store_sales.ss_store_sk = store.s_store_sk) (fill_ratio=7.96318e-05)  (cost=879..87930 rows=102 height=1) (actual time=0.69..0.69 rows=0 loops=1)
                    -> Nested loop inner join  (cost=862..87878 rows=102 height=1) (actual time=0.678..0.678 rows=0 loops=1)
                        -> Inner hash join (store_returns.sr_returned_date_sk = d2.d_date_sk) (fill_ratio=0)  (cost=83.6..84364 rows=1021 height=1) (actual time=0.678..0.678 rows=0 loops=1)
                            -> Table scan on store_returns  (cost=0.618..63049 rows=102101 height=1) (actual time=0.671..0.671 rows=1 loops=1)
                            -> Hash
                                -> Filter: ((d2.d_year = 2000) and (d2.d_moy = 9))  (cost=0.967..0.967 rows=0.01 height=1) (actual time=0.0048..0.0048 rows=0 loops=1)
                                    -> Table scan on d2  (cost=0.903..0.903 rows=1 height=1) (actual time=0.00285..0.00344 rows=1 loops=1)
                        -> Filter: (store_sales.ss_customer_sk = store_returns.sr_customer_sk)  (cost=3.44..3.44 rows=0.1 height=1) (never executed)
                            -> Single-row index lookup on store_sales using PRIMARY (ss_item_sk = store_returns.sr_item_sk, ss_ticket_number = store_returns.sr_ticket_number)  (cost=3.38..3.38 rows=1 height=1) (never executed)
                    -> Hash
                        -> Table scan on store  (cost=7.17..14.3 rows=2 height=1) (actual time=0.00661..0.00769 rows=2 loops=1)
            -> Hash
                -> Table scan on d1  (cost=0.811..0.811 rows=1 height=1) (actual time=0.0142..0.0159 rows=1 loops=1)
